<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Light's Blog]]></title>
  <link href="http://sxgfxm.github.io/atom.xml" rel="self"/>
  <link href="http://sxgfxm.github.io/"/>
  <updated>2020-01-17T10:57:20+08:00</updated>
  <id>http://sxgfxm.github.io/</id>
  <author>
    <name><![CDATA[Light]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-201901]]></title>
    <link href="http://sxgfxm.github.io/blog/2020/01/17/ioszhi-shi-xiao-ji-201901/"/>
    <updated>2020-01-17T10:44:28+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2020/01/17/ioszhi-shi-xiao-ji-201901</id>
    <content type="html"><![CDATA[<h2>2019.01.02</h2>

<h3>Swift 进阶</h3>

<p>Swift 语言特性<br/>
- Swift 既是高级语言，又是低级语言。既可以使用 <strong>map</strong> 、 <strong>reduce</strong> 这样的方法，编写 <strong>高阶函数</strong>，又可以直接编译出原生的二进制可执行文件，具有和 C语言 媲美的性能。  （如何理解第二点？）<br/>
- Swift 是多范式语言。既可以 <strong>面向对象编程</strong> ，又可以 <strong>函数式编程</strong> 。<br/>
- Swift 鼓励自下而上编程。可以自己构建组件。<br/>
- Swift 代码紧凑、精确，同时保持清晰。<br/>
- Swift 在实践中是相对安全的。（如何检查变量在被使用前是赋值的？）<br/>
- Swift 在不断的发展中。</p>

<p>专业术语<br/>
- 值语义：<br/>
- 值类型：具有值语义的类型为值类型，<strong>struct</strong>、 <strong>enum</strong> 都是值类型。<br/>
- 引用类型：<br/>
- 浅拷贝：<br/>
- 深拷贝：<br/>
- 闭包：持有外部变量的函数成为 <strong>闭包（closure）</strong> 。<br/>
- 高阶函数：<br/>
- 静态派发：<br/>
- 动态派发：</p>

<h3>Atom 快捷键</h3>

<p>打开快捷键列表：cmd + shift + P；<br/>
模糊搜索标题：cmd + P；</p>

<h3>adb 取 Android 系统日志</h3>

<ol>
<li><code>brew cask install android-platform-tools</code>；</li>
<li><code>adb bugreport</code>；</li>
</ol>


<h3>字节跳动组织核心</h3>

<p>技术、用户增长、商业化。<br/>
留存、拉新、变现。</p>

<h2>2019.01.03</h2>

<h3>Swift 进阶</h3>

<p>使用函数将行为参数化，复用模板代码，调用者提供变换函数。<br/>
将重复的代码抽象为函数，将函数行为抽象为模板，作为扩展重复使用。<br/>
<T>表示声明 T 为某种类型的占位符。</p>

<p>内建集合类型<br/>
- 标准库中的集合类型都具有值语义，且都是用了“写时复制”技术；</p>

<p>数组变形<br/>
- 尽量避免直接使用索引值访问数组元素；<br/>
- sort：<br/>
- map：对数组中每个元素进行变换，返回新数组；</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="n">Array</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">map</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">transform</span><span class="p">:</span> <span class="p">(</span><span class="n">Element</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">T</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">T</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="nl">result</span><span class="p">:</span> <span class="p">[</span><span class="n">T</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="n">result</span><span class="p">.</span><span class="n">reserveCapacity</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">x</span> <span class="k">in</span> <span class="nb">self</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">transform</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="n">map</span><span class="p">{</span> <span class="n">x</span> <span class="k">in</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="n">map</span><span class="p">{</span><span class="err">$</span><span class="mi">0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>filter：筛选出符合条件的元素，返回新数组；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="n">Array</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">filter</span><span class="p">(</span><span class="n">_</span> <span class="nl">predicate</span><span class="p">:(</span><span class="n">Element</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Element</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="nl">result</span><span class="p">:</span> <span class="p">[</span><span class="n">Element</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">x</span> <span class="k">in</span> <span class="nb">self</span> <span class="k">where</span> <span class="n">predicate</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="n">filter</span><span class="p">{</span> <span class="n">x</span> <span class="k">in</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="n">filter</span><span class="p">{</span><span class="err">$</span><span class="mi">0</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>reduce：合并数组元素，返回合并值；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="n">Array</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">reduce</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">initialValue</span><span class="p">:</span> <span class="n">T</span><span class="p">,</span> <span class="n">_</span> <span class="nl">transform</span><span class="p">:</span> <span class="p">(</span><span class="n">T</span><span class="p">,</span> <span class="n">Element</span><span class="p">)</span><span class="o">-&gt;</span> <span class="n">T</span><span class="p">)</span> <span class="o">-</span> <span class="o">&gt;</span> <span class="n">T</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="n">value</span> <span class="o">=</span> <span class="n">initialValue</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">x</span> <span class="k">in</span> <span class="kt">Self</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">value</span> <span class="o">=</span> <span class="n">transform</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">value</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="n">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">){</span><span class="n">value</span><span class="p">,</span> <span class="n">x</span> <span class="k">in</span> <span class="n">value</span> <span class="o">+</span> <span class="n">x</span><span class="p">}</span>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="n">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>acummulate：迭代操作元素，返回新数组；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="n">Array</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">accumulate</span><span class="o">&lt;</span><span class="n">Result</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">initialResult</span><span class="p">:</span> <span class="n">Result</span><span class="p">,</span> <span class="n">_</span> <span class="nl">nextParitialResult</span><span class="p">:(</span><span class="n">Result</span><span class="p">,</span> <span class="n">Element</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Result</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Result</span><span class="p">]{</span>
</span><span class='line'>    <span class="k">var</span> <span class="n">running</span> <span class="o">=</span> <span class="n">initialResult</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">map</span><span class="p">{</span> <span class="n">next</span> <span class="k">in</span>
</span><span class='line'>      <span class="n">running</span> <span class="o">=</span> <span class="n">nextParitialResult</span><span class="p">(</span><span class="n">running</span><span class="p">,</span> <span class="n">next</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">running</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="n">accumulate</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>all：判断是否所有元素都符合条件；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="n">Array</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">all</span><span class="p">(</span><span class="n">_</span> <span class="nl">predicate</span><span class="p">:</span> <span class="p">(</span><span class="n">Element</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">!</span><span class="n">contains</span><span class="p">{</span><span class="o">!</span><span class="n">predicate</span><span class="p">(</span><span class="err">$</span><span class="mi">0</span><span class="p">)}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">].</span><span class="n">all</span><span class="p">{</span><span class="err">$</span><span class="mi">0</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>map2：用reduce实现map；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="n">Array</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">map2</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">transform</span><span class="p">:(</span><span class="n">Element</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">T</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">T</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">reduce</span><span class="p">([]){</span>
</span><span class='line'>      <span class="err">$</span><span class="mi">0</span> <span class="o">+</span> <span class="p">[</span><span class="n">transform</span><span class="p">(</span><span class="err">$</span><span class="mi">1</span><span class="p">)]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>flatMap：先map再joined，当变换函数返回值为数组，且需要合并时使用；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="n">Array</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">flatMap</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">transform</span><span class="p">:(</span><span class="n">Element</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">T</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">T</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="nl">result</span><span class="p">:</span> <span class="p">[</span><span class="n">T</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">x</span> <span class="k">in</span> <span class="nb">self</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nl">contentsOf</span><span class="p">:</span> <span class="n">transform</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>forEach：无返回值迭代数组元素；</li>
</ul>


<h2>2019.01.03</h2>

<h3>Swift 进阶</h3>

<p>数组类型<br/>
- 切片：切片只是数组的另一种表示方法，使用ptr、startIndex、endIndex表示，并不会创建新数组；
（如果改变切片中元素，原数组中元素会改变吗？）<br/>
- 桥接：Swift数组可以桥接到OC中，编译器会自动把不兼容的值用一个不透明的box包起来；</p>

<h3>Swfit 基础</h3>

<ul>
<li>Type Parameters</li>
<li>Type Parameters Constraints</li>
<li>Generic Type</li>
<li>Generic Founction</li>
<li>Associated Type</li>
<li>Associated Type Constraints</li>
<li>Generic where Clause</li>
</ul>


<h2>2019.01.07</h2>

<h3>Swift 进阶</h3>

<p>字典
- removeValue(forKey:)<br/>
- updateValue(_:forKey:)<br/>
- mapValue<br/>
- frequency<br/>
- merge(_:uniqueKeysWith:)</p>

<p>集合
- IndexSet：整数集合，支持范围操作；<br/>
- CharacterSet：Unicode字符集合；</p>

<h2>2019.01.08</h2>

<h3>Swift 进阶</h3>

<p>范围
- Range<br/>
- CloseRange<br/>
- Comparable 协议；<br/>
- Strideable 协议；</p>

<h2>2019.01.09</h2>

<h3>Swift 进阶</h3>

<ul>
<li><strong>Sequence</strong> 协议是集合类型结构的基础，一个序列代表一系列具有相同类型的值，你可以对这些值进行迭代；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">protocol</span> <span class="n">Sequence</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">associated</span> <span class="nl">Iterator</span> <span class="p">:</span> <span class="n">IteratorProtocol</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">makeIterator</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Iterator</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>IteratorProtocol</strong> 协议是对迭代器的描述，通过<code>next()</code>方法返回序列中下一个值；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">protocol</span> <span class="n">InteratorProtocol</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">associated</span> <span class="n">Element</span>
</span><span class='line'>  <span class="kr">mutating</span> <span class="k">func</span> <span class="n">next</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Element</span><span class="o">?</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2019.01.10</h2>

<h3>APP发布</h3>

<ul>
<li>封板之后不要再往发版分支合代码；</li>
<li>修改一定要验证，尤其是跨分支 <strong>cherry-pick</strong> 代码；</li>
<li>APP发布之前一定要看一下 <strong>TestFlight</strong> 版本是否正常；</li>
</ul>


<h3>Principles</h3>

<ul>
<li>What do you want ？</li>
<li>What is true?</li>
<li>What are you going to do about it ?</li>
</ul>


<h3>微信公开课</h3>

<ul>
<li>我们更多倡导的是利用微信做出好产品分享用户。</li>
<li>因为遵循原则，很多东西我们又必须坚持去改变。</li>
<li>第一我们没有批量导入某一批好友，而是通过用户手动一个一个挑选。第二，在一个产品还没有被验证只能够产生自然增长的时候，我们没有去推广它。</li>
<li>因为好的产品需要一定的独裁，否则它将包含很多不同意见以至于产品性格走向四分五裂。</li>
<li>第一，坚持做一个好的，与时俱进的工具。</li>
<li>微信是一个生活方式。</li>
<li>第二个原动力是，“让创造者体现价值”。</li>
<li>一个好的产品是有自己的使命的。</li>
<li>最主要的是，技术的使命应该是帮助人类提高效率。</li>
<li>一切盈利都是做好产品做好服务后的自然而来的副产品。</li>
<li>小游戏的原动力是，它应该是一个关于创意的平台。并且让产生创意的人体现价值。</li>
</ul>


<h3>Swift 开发</h3>

<ul>
<li>使用 <strong>Kingfiser</strong> 异步加载网络图片 <code>imageView.kf.setImage(with:URL(string:"http://xxx.png"))</code>；</li>
<li>使用 <strong>Material</strong> 自动布局 <code>view.layout().top().left().width().height()</code>；</li>
<li>使用 <strong>SnapKit</strong> 自动布局 <code>view.snp.makeConstrains{(make) in // layout}</code>；</li>
<li>使用 <strong>Extension</strong> 按功能模块分隔代码，相对清晰；</li>
<li>使用 <strong>Moya</strong> 封装网络模块请求；</li>
<li>使用 <strong>IGListKit</strong> 实现CollectionView，TableView；</li>
<li>使用 <strong>SwiftyUserDefaults</strong> 实现 UserDefault 存取；</li>
<li>使用 <strong>Realm</strong> 实现 数据库 存取；</li>
<li>使用 <strong>Codable</strong> 实现 JSON 解析；</li>
</ul>


<h2>2019.01.11</h2>

<h3>RxSwift</h3>

<ul>
<li>Every <strong>Observable</strong> sequence is just a sequence. The key advantage for an Observable vs Swift&rsquo;s Sequence is that it can also receive elements asynchronously.</li>
<li><strong>Observable</strong>(<strong>ObservableType</strong>) is equivalent to <strong>Sequence</strong>.</li>
<li><strong>ObservableType.subscribe</strong> method is equivalent to <strong>Sequence.makeIterator</strong> method.</li>
<li>Observer (callback) needs to be passed to <strong>ObservableType.subscribe</strong> method to receive sequence elements instead of calling <strong>next()</strong> on the returned iterator.</li>
<li>When an observable is created, it doesn&rsquo;t perform any work simply because it has been created.</li>
<li>However, if you just call a method that returns an <strong>Observable</strong>, no sequence generation is performed and there are no side effects. <strong>Observable</strong> just defines how the sequence is generated and what parameters are used for element generation. <strong>Sequence</strong> generation starts when <strong>subscribe</strong> method is called.</li>
</ul>


<h2>2019.01.16</h2>

<h3>RxSwift 使用场景</h3>

<ul>
<li>使用 <strong>RxSwift</strong> 实现 <strong>Target Action</strong>；</li>
<li>使用 <strong>RxSwift</strong> 实现 <strong>Delegate</strong>；</li>
<li>使用 <strong>RxSwift</strong> 实现 <strong>闭包回调</strong>；</li>
<li>使用 <strong>RxSwift</strong> 实现 <strong>Notification</strong>；</li>
<li>使用 <strong>RxSwift</strong> 实现 <strong>KVO</strong>；</li>
<li>使用 <strong>RxSwift</strong> 实现 <strong>依赖任务</strong>；</li>
<li>使用 <strong>RxSwift</strong> 实现 <strong>多异步任务同步</strong>；</li>
</ul>


<h3>RxSwift 核心概念</h3>

<ul>
<li><strong>Obervable</strong>：Single，Completable，Maybe，Driver，ControlEvent</li>
<li><strong>Observer</strong>：AnyObserver，Binder</li>
<li><strong>Obervable &amp; Observer</strong>：AsyncSubject、PublishSubject、ReplaySubject、BehaviorSubject、Variable、ControlProperty</li>
<li><strong>Operator</strong>：创建新序列 或 变换、组合原有序列</li>
<li><strong>Disposable</strong>：DisposeBag、takeUntil</li>
<li><strong>Schedulers</strong>：subscribeOn、observeOn、MainScheduler、SerialDispatchQueueScheduler、ConcurrentDispatchQueueScheduler、OperationQueueScheduler</li>
<li><strong>Error Handling</strong>：retry、retryWhen、catchError</li>
</ul>


<h2>2019.01.17</h2>

<h3>RxSwift 常用操作符</h3>

<p>Observable：描述可观察序列值是如何产生的，或者说观察者是如何接收该序列的，当subscribe时，真正触发序列产生。</p>

<p>创建 Observable<br/>
- <strong>create</strong>：通过构建函数，完整创建一个自定义的 Observable。各种操作符都是通过create实现的。<br/>
- <strong>just</strong>：创建只发出一个元素的 Observable。当只产生一个元素时，可以使用just快速创建，比如网络请求结果？<br/>
- <strong>timer</strong>：创建一定延时后，只发出一个元素的 Observable。类似于 dispatch_after ？<br/>
- <strong>from</strong>：将其他类型转换为 Observable。比如数组、可选值等。不必自己实现这个转化过程了。<br/>
- <strong>repeatElement</strong>：创建重复发出某个元素的 Observable。<br/>
- <strong>deferred</strong>：直到订阅发生，才创建 Observable，并且为每位订阅者创建全新的 Observable。订阅者获取独立序列。<br/>
- <strong>interval</strong>：创建每隔一段时间就发出一个索引数的 Observable。相当于一个repeated timer。<br/>
- <strong>empty</strong>：创建只发出一个完成事件的 Observable。什么时候使用呢？<br/>
- <strong>never</strong>：创建一个不会发出任何元素的 Observable。什么时候使用呢？<br/>
- <strong>startWith</strong>：创建一个在头部插入一些元素的 Observable。<br/>
- <strong>error</strong>：创建一个只有 error 的 Observable。</p>

<p>创建 可组合的Observable<br/>
- <strong>merger</strong>：创建一个合并多个 Observable 的 Observable，当某个 Observable 发出元素时，他就发出元素。类似多条生产线合并到一个出口。可交替发出元素。<br/>
- <strong>concat</strong>：创建一个合并多个 Observable 的 Observable，当前一个 Observable 发出完毕时，下一个 Observable 才开始发出元素。按顺序发出元素。<br/>
- <strong>zip</strong>：通过组合函数，创建一个将多个 Observable 的元素组合之后发出的 Observable。严格按照索引数组合发出。<br/>
- <strong>combineLatest</strong>：通过组合函数，创建一个将多个 Observable 的最新元素组合之后发出的 Observable。用最新值替换对应值后组合发出。</p>

<p>转换 Observable 元素<br/>
- <strong>map</strong>：通过转换函数，将 Observable 的每个元素转换后发出。<br/>
- <strong>scan/accumulator</strong>：通过转换函数，将 Observable 的每个元素累积之前的结果转换后发出。<br/>
- <strong>reduce</strong>：通过转换函数，将 Observable 的所有元素累积的结果发出。</p>

<p>转换 Observable 元素 为 Observable<br/>
- <strong>flatMap</strong>：通过转换函数，将 Observable 的每个元素转换成其他的 Observable ，然后将这些 Observables 合并发出；<br/>
- <strong>flatMapLatest</strong>：通过转换函数，将 Observable 的每个元素转换成其他的 Observable，然后取最新的发出；<br/>
- <strong>concatMap</strong>：通过转换函数，将 Observable 的每个元素转换成其他的 Observable 后，按顺序发出；<br/>
- <strong>publish</strong>：将 Observable 转换为可被连接的 Observable。直到 connect 才开始发出元素。<br/>
- <strong>replay</strong>：将 Observable 转换为可被连接的 Observable。直到 connect 时开始发出缓存的最新n个元素。<br/>
- <strong>refCount</strong>：将 Observable 转换为可自动连接和断开的的 Observable。<br/>
- <strong>connect</strong>：通知 ConnectableObservable 可以开始发出元素了。</p>

<p>如何发送 Observable 元素<br/>
- <strong>delay</strong>：将 Observable 的所有元素延迟一段设定好的时间发出；<br/>
- <strong>materialize</strong>：将 Observable 产生的时间全部转换成元素发出；<br/>
- <strong>dematerialize</strong>：将 materialize 转换后的元素还原；<br/>
- <strong>ignoreElements</strong>：将 Observable 产生的 next 事件忽略，只发出 completed 和 error 事件；只关心终止时使用<br/>
- <strong>buffer</strong>：将 Observable 元素周期性的以 元素集合 发出来。<br/>
- <strong>window</strong>：将 元素集合 周期性的以 Observable 形态发出来。<br/>
- <strong>groupBy</strong>：将 Observable 以键值分组为 子Observable 发出来。<br/>
- <strong>single</strong>：将 Observable 限制为只发出一个元素。</p>

<ul>
<li><strong>filter</strong>：只发出通过判定的元素。</li>
<li><strong>take</strong>：只发出头 n 个元素。</li>
<li><strong>takeWhile</strong>：从头发出通过判定的元素。</li>
<li><strong>takeUntil</strong>：从头发出直到另一个 Observable 发出元素。</li>
<li><strong>takeLast</strong>：只发出尾 n 个元素。</li>
<li><strong>elementAt</strong>：只发出第 n 个元素。</li>
<li><strong>skip</strong>：跳过头 n 个元素。</li>
<li><strong>skipWhile</strong>：从头跳过通过判定的元素。</li>
<li><strong>skipUntil</strong>：从头跳过直到另一个 Observable 发出元素。</li>
<li><strong>sample</strong>：按第二个 Observable 对 第一个 Observable 采样发出元素。</li>
<li><strong>debounce</strong>：过滤掉高频产生的元素。</li>
<li><strong>distinctUntilChanged</strong>：只发出与上个元素不同的元素。</li>
<li><p><strong>delaySubscription</strong>：将延迟一段时间后才订阅 Observable。</p></li>
<li><p><strong>amb</strong>：在多个源 Observable 中，取第一个发出元素的 Observable 只发出其元素。</p></li>
</ul>


<p>在哪个线程发出和接收元素<br/>
- <strong>subscribeOn</strong>：指定 Observable 在哪个 Scheduler 执行。<br/>
- <strong>observeOn</strong>：指定 Observable 在哪个 Scheduler 发出通知。</p>

<p>当发生某些事件时如何操作<br/>
- <strong>do</strong>：当 Observable 产生某些事件时，执行某个操作。可以来注册一些回调操作，单独回调。<br/>
- <strong>timeout</strong>：如果 Observable 在规定时间内么有产生任何元素，产生一个超时的 error 事件。</p>

<p>如何处理 Observable error 事件<br/>
- <strong>catchError</strong>：拦截一个 error 事件，将它替换成其他 Observable。<br/>
- <strong>catchErrorJustReturn</strong>：拦截一个 error 事件，将它替换成其他元素并结束。<br/>
- <strong>retry</strong>：拦截一个 error 事件，并重新订阅该 Observable。</p>

<ul>
<li><strong>using</strong>：创建一个可被清除的资源，它和 Observable 具有相同的生命周期。</li>
</ul>


<h3>RxSwift 常用架构</h3>

<ul>
<li><strong>MVVM</strong>：View &ndash;> Observable &ndash;> ViewModel &ndash;> Observable &ndash;> Controller</li>
<li><strong>RxFeedback</strong>：State &ndash;> Event &ndash;> StateChanged &ndash;> Event &ndash;> State</li>
<li><strong>ReactorKit</strong>：View &ndash;> Action &ndash;> Reactor &ndash;> State</li>
</ul>


<h2>2019.01.18</h2>

<h3>IGListKit</h3>

<ul>
<li>[ListDiffable] &ndash;> ListAdapter &ndash;> ListSectionController &ndash;> Cell</li>
<li>Data： needs conform ListDiffable</li>
<li>ListAdapter：init with UICollectionView and ListAdapterUpdater，set datasource delegate，use <code>performUpdates(animated:)</code> to tell data has changed</li>
<li>UIViewController：needs conform ListAdapterDataSource，implement <code>objects(for:)</code>，<code>listAdapter(_:sectionControllerFor:)</code>，<code>emptyView(for:)</code></li>
<li>ListSectionController：needs save data, state, and override <code>numberOfItems</code>，<code>cellForItem(at:)</code>，<code>sizeForItem(at:)</code>，<code>didUpdate(to:)</code>，<code>didSelectItem(at:)</code></li>
<li>UICollectionViewCell：needs implement <code>cellSize(for:)</code></li>
<li>布局的关键在于如何划分Cell，采用分层组合的方式，类似于 ComponentKit ，提高复用性</li>
<li><code>UUID().uuidString</code> 来生成 唯一标识</li>
<li>一种 model 类型 对应一种 sectionController，sectionController 负责如何展示 model，可以用一个cell展示，也可以分多个cell展示</li>
<li>避免数据与UI不一致导致的crash</li>
<li>分离dataSource；</li>
</ul>


<h2>2019.01.24</h2>

<h3>SwiftyUserDefaults</h3>

<ul>
<li>add keys</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="n">DefaultsKeys</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="k">let</span> <span class="n">firstInFlag</span> <span class="o">=</span> <span class="n">DefaultsKey</span><span class="o">&lt;</span><span class="n">Bool</span><span class="o">&gt;</span><span class="p">(</span><span class="s">&quot;firstInFlag&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">static</span> <span class="k">let</span> <span class="n">username</span> <span class="o">=</span> <span class="n">DefaultsKey</span><span class="o">&lt;</span><span class="n">String</span><span class="o">?&gt;</span><span class="p">(</span><span class="s">&quot;username&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">static</span> <span class="k">let</span> <span class="n">password</span> <span class="o">=</span> <span class="n">DefaultsKey</span><span class="o">&lt;</span><span class="n">String</span><span class="o">?&gt;</span><span class="p">(</span><span class="s">&quot;password&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>use keys</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">func</span> <span class="nf">storeDataWithUserDefault</span> <span class="p">(){</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">!</span><span class="n">Defaults</span><span class="p">[.</span><span class="n">firstInFlag</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;Is first in&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">Defaults</span><span class="p">[.</span><span class="n">firstInFlag</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'>      <span class="n">Defaults</span><span class="p">[.</span><span class="n">username</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;Light&quot;</span>
</span><span class='line'>      <span class="n">Defaults</span><span class="p">[.</span><span class="n">password</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;123456&quot;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;Not first in&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;username \(Defaults[.username] ?? &quot;</span><span class="n">not</span> <span class="kr">set</span><span class="s">&quot;)&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;password \(Defaults[.password] ?? &quot;</span><span class="n">not</span> <span class="kr">set</span><span class="s">&quot;)&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>RealmSwift</h3>

<ul>
<li>Declare Model</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="nl">Person</span><span class="p">:</span> <span class="n">Object</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">@</span><span class="n">objc</span> <span class="n">dynamic</span> <span class="k">var</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>  <span class="p">@</span><span class="n">objc</span> <span class="n">dynamic</span> <span class="k">var</span> <span class="n">age</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Get Realm <code>let realm = try! Realm()</code></li>
<li>Query <code>let studentOver20 = realm.objects(Person.self).filter("age &gt; 20").first</code></li>
<li>Update <code>try! realm.write { realm.add(mySelf) realm.add(other) }</code></li>
</ul>


<h2>2019.01.25</h2>

<h3>Swift 5.0 新特性</h3>

<ul>
<li>应用瘦身：Swfit 应用不再包含标准库的动态链接库；</li>
<li>Swift 语言

<ul>
<li><code>@dynamicCallable</code> 简化方法调用，增强与动态语言的协作性；</li>
<li>Key paths 现在支持指向自身的 key path <code>\.self</code>；</li>
<li>enum case 不定参数 需转换为 数组传入；</li>
<li><code>try?</code> 表达式不再返回嵌套的optional；</li>
<li>字面量初始化</li>
<li>String 插值更高效，<code>_ExpressibleByStringInterpolation</code>方法需要替换；</li>
</ul>
</li>
<li>Swfit 标准库

<ul>
<li><code>DictionaryLiteral</code> 重命名为 <code>KeyValuePairs</code>；</li>
<li><code>Sequence</code> 不再有关联类型 <code>SubSequence</code>；</li>
</ul>
</li>
<li>Swift Package Manager</li>
<li>Swift Compiler</li>
</ul>


<h2>2019.01.28</h2>

<h3>RxSwift 原理解析</h3>

<h2>2019.01.30</h2>

<h3>RTCRoom</h3>

<ul>
<li>Login

<ul>
<li>初始化 <code>RTCRoom</code>；</li>
<li>获取 <code>LoginInfo</code>；</li>
<li>登录 <code>-login:loginInfo:withCompletion:</code>；</li>
</ul>
</li>
<li>Get Room List

<ul>
<li>获取聊天室列表 <code>-getRoomList:cnt:withCompletion:</code>；</li>
</ul>
</li>
<li>Create Room

<ul>
<li>创建聊天室 <code>-creatRoom:roomInfo:withCompletion:</code>；</li>
</ul>
</li>
<li>Enter Room

<ul>
<li>进入聊天室 <code>-enterRoom:withCompletion:</code>；</li>
</ul>
</li>
<li>Show Local Video

<ul>
<li>展示本地视频 <code>-startLocalPreview:</code>；</li>
<li>停止本地视频 <code>-stopLocalPreview</code>；</li>
<li>设置音频清晰度 <code>-setHDAudio:</code>；</li>
<li>设置视频码率 <code>-setBitrateRange:max:</code>；</li>
<li>切换前后摄像头 <code>-switchCamera</code>；</li>
<li>静音推流 <code>-setMute:</code>；</li>
<li>设置美颜效果 <code>-setBeautyStyle:beaultyLevel:whitenessLevel:ruddinessLevel:</code>；</li>
<li>进入前台 <code>-switchToForeground</code>；</li>
<li>进入后台 <code>-switchToBackground:</code>；</li>
</ul>
</li>
<li>Show Remote Video

<ul>
<li>展示远程视频 <code>-addRemoteView:withUserID:playBegin:playError:</code>；</li>
</ul>
</li>
<li>On Get Pusher List

<ul>
<li>记录 <code>PusherInfo</code>；</li>
<li>记录 <code>playerView</code>；</li>
<li>展示远程视频，出错时 <code>-onPusherQuit:</code>；</li>
<li>重新布局；</li>
</ul>
</li>
<li>On Pusher Join

<ul>
<li>记录 <code>playerView</code>；</li>
<li>记录 <code>PusherInfo</code>；</li>
<li>展示远程视频，出错时 <code>-onPusherQuit:</code>；</li>
<li>重新布局；</li>
</ul>
</li>
<li>On Pusher Quit

<ul>
<li>删除 <code>playerView</code>；</li>
<li>删除 <code>PusherInfo</code>；</li>
<li>重新布局；</li>
</ul>
</li>
<li>On Room Close

<ul>
<li>提示聊天室关闭；<p class='post-footer'>
原始地址：
<a href='http://sxgfxm.github.io/blog/2020/01/17/ioszhi-shi-xiao-ji-201901/'><a href="http://sxgfxm.github.io/blog/2020/01/17/ioszhi-shi-xiao-ji-201901/">http://sxgfxm.github.io/blog/2020/01/17/ioszhi-shi-xiao-ji-201901/</a></a><br/>
written by <a href='http://sxgfxm.github.io'>Light</a>
&nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
</p></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180924]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/10/10/ioszhi-shi-xiao-ji-180924/"/>
    <updated>2018-10-10T21:44:06+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/10/10/ioszhi-shi-xiao-ji-180924</id>
    <content type="html"><![CDATA[<h2>修改UISearchBar取消按钮颜色</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">willPresentSearchController:</span><span class="p">(</span><span class="n">UISearchController</span> <span class="o">*</span><span class="p">)</span><span class="nv">searchController</span><span class="p">{</span>
</span><span class='line'>  <span class="p">[[</span><span class="bp">UIBarButtonItem</span> <span class="nl">appearanceWhenContainedInInstancesOfClasses</span><span class="p">:</span><span class="l">@[</span><span class="p">[</span><span class="bp">UISearchBar</span> <span class="k">class</span><span class="p">]</span><span class="l">]</span><span class="p">]</span> <span class="nl">setTitleTextAttributes</span><span class="p">:</span><span class="l">@{</span><span class="nl">NSForegroundColorAttributeName</span><span class="p">:</span><span class="n">UIColorFromRGBA</span><span class="p">(</span><span class="mh">0xff4a4a4a</span><span class="p">)</span><span class="l">}</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>解决XCode10 引入非同一目录下头文件没有自动提示的问题</h2>

<p>Xcode &ndash;> File &ndash;> Workspace Settings &ndash;> Build System &ndash;> Legacy Build System。<br/>
需重新编译后生效。</p>

<h2>非 Retina 显示器，升级到 Mojave 之后发现文字不清晰问题</h2>

<p>如果你在用 “非 Retina” 的显示器，升级到 Mojave 之后发现文字不清晰了，是因为 Mojave 默认关闭了文字的次像素渲染，如果需要可以通过终端里输入这个命令重新打开：<br/>
<code>sudo defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</code>。<br/>
重新打开对应软件后生效。</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/10/10/ioszhi-shi-xiao-ji-180924/'>http://sxgfxm.github.io/blog/2018/10/10/ioszhi-shi-xiao-ji-180924/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180917]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/25/ioszhi-shi-xiao-ji-180917/"/>
    <updated>2018-09-25T13:05:35+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/25/ioszhi-shi-xiao-ji-180917</id>
    <content type="html"><![CDATA[<h2>相机拍摄图片方向调整</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">image</span><span class="p">.</span><span class="n">imageOrientation</span> <span class="o">!=</span> <span class="n">UIImageOrientationUp</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">UIGraphicsBeginImageContext</span><span class="p">(</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">);</span>
</span><span class='line'>      <span class="p">[</span><span class="n">image</span> <span class="nl">drawInRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
</span><span class='line'>      <span class="n">image</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>      <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Playground running 卡死</h2>

<p>1、修改platform为Mac OS；<br/>
2、修改为手动执行；<br/>
3、为手动执行增加快捷键；<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/25/ioszhi-shi-xiao-ji-180917/'><a href="http://sxgfxm.github.io/blog/2018/09/25/ioszhi-shi-xiao-ji-180917/">http://sxgfxm.github.io/blog/2018/09/25/ioszhi-shi-xiao-ji-180917/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 之 动态规划]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/20/leetcode-problems-zhi-dong-tai-gui-hua/"/>
    <updated>2018-09-20T12:53:25+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/20/leetcode-problems-zhi-dong-tai-gui-hua</id>
    <content type="html"><![CDATA[<h2>动态规划</h2>

<p>以下为 LeetCode 动态规划 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/climbing-stairs/description/">70. 爬楼梯</a></h3>

<p>问题分析：动态规划，f[i]表示第i阶的方法数，f[i] = f[i - 1] + f[i - 2]，f[0] = 1。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">climbStairs</span><span class="p">(</span><span class="n">_</span> <span class="nl">n</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">f</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="n">f</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">1.</span><span class="p">..</span><span class="n">n</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">var</span> <span class="n">one</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
</span><span class='line'>            <span class="k">var</span> <span class="n">two</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">two</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">two</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">2</span><span class="p">]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">f</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">one</span> <span class="o">+</span> <span class="n">two</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">f</span><span class="p">[</span><span class="n">n</span><span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：递推。</p>

<h3><a href="https://leetcode-cn.com/problems/min-cost-climbing-stairs/description/">746. 使用最小花费爬楼梯</a></h3>

<p>问题分析：动态规划，f[i]表示第i阶最小花费，f[i] = min(f[i - 1] + cost[i], f[i - 2] + cost[i])，f[0] = cost[0]。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">minCostClimbingStairs</span><span class="p">(</span><span class="n">_</span> <span class="nl">cost</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">f</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="n">f</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">cost</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">1.</span><span class="p">..(</span><span class="n">cost</span><span class="p">.</span><span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">var</span> <span class="n">one</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
</span><span class='line'>            <span class="k">var</span> <span class="n">two</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="k">var</span> <span class="n">now</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">two</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">two</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">2</span><span class="p">]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">cost</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">now</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">now</span> <span class="o">=</span> <span class="n">cost</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">f</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">min</span><span class="p">(</span><span class="n">one</span> <span class="o">+</span> <span class="n">now</span><span class="p">,</span> <span class="n">two</span> <span class="o">+</span> <span class="n">now</span><span class="p">))</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">min</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">cost</span><span class="p">.</span><span class="n">count</span><span class="p">],</span> <span class="n">f</span><span class="p">[</span><span class="n">cost</span><span class="p">.</span><span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：可以直接使用min()，max()函数。</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/20/leetcode-problems-zhi-dong-tai-gui-hua/'>http://sxgfxm.github.io/blog/2018/09/20/leetcode-problems-zhi-dong-tai-gui-hua/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 之 分治法]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/18/leetcode-problemszhi-fen-zhi-fa/"/>
    <updated>2018-09-18T21:11:05+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/18/leetcode-problemszhi-fen-zhi-fa</id>
    <content type="html"><![CDATA[<h2>分治法</h2>

<p>以下为 LeetCode 分治法 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/maximum-subarray/description/">53. 最大子序和</a></h3>

<p>问题分析：求连续子序列最大和。<br/>
方法一：模拟。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">maxSubArray</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">maxValue</span> <span class="o">=</span> <span class="n">Int</span><span class="p">.</span><span class="n">min</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">var</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">maxValue</span> <span class="o">&lt;</span> <span class="n">sum</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">maxValue</span> <span class="o">=</span> <span class="n">sum</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)..</span><span class="o">&lt;</span><span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">sum</span> <span class="o">=</span> <span class="n">sum</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">maxValue</span> <span class="o">&lt;</span> <span class="n">sum</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">maxValue</span> <span class="o">=</span> <span class="n">sum</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">maxValue</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>方法二：动态规划。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">//  待完成</span>
</span></code></pre></td></tr></table></div></figure>


<p>
方法三：分治法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">//  待完成</span>
</span></code></pre></td></tr></table></div></figure>


<p>
启发：<strong>连续子序列问题</strong>，分治法。</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/18/leetcode-problemszhi-fen-zhi-fa/'>http://sxgfxm.github.io/blog/2018/09/18/leetcode-problemszhi-fen-zhi-fa/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 链表]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/17/leetcode-problems-lian-biao/"/>
    <updated>2018-09-17T21:17:45+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/17/leetcode-problems-lian-biao</id>
    <content type="html"><![CDATA[<h2>链表</h2>

<p>以下为 LeetCode 链表 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/merge-sorted-array/description/">88. 合并两个有序数组</a></h3>

<p>问题分析：链表。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">merge</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums1</span><span class="p">:</span> <span class="k">inout</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">m</span><span class="p">:</span> <span class="n">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nl">nums2</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">n</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">m</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">nums</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">nums1</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">n</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">nums</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">nums2</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">nums1</span> <span class="o">=</span> <span class="n">nums</span><span class="p">.</span><span class="n">sorted</span><span class="p">{</span><span class="err">$</span><span class="mi">0</span> <span class="o">&lt;</span> <span class="err">$</span><span class="mi">1</span><span class="p">}</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="n">nums1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：需要用 <strong>链表</strong> 实现。<br/>
状态：优于56%的提交。</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/17/leetcode-problems-lian-biao/'>http://sxgfxm.github.io/blog/2018/09/17/leetcode-problems-lian-biao/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180910]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/17/ioszhi-shi-xiao-ji-180910/"/>
    <updated>2018-09-17T20:42:43+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/17/ioszhi-shi-xiao-ji-180910</id>
    <content type="html"><![CDATA[<h2>Siri Kit</h2>

<h3>Siri Kit作用</h3>

<p>通过语音完成第三方应用功能，偏向于工具型操作。</p>

<h3>实现机制</h3>

<p><strong>Domain</strong>：业务领域；<br/>
<strong>Intent</strong>：领域中的任务或指令；<br/>
语音识别 &ndash;> Domain / Intent &ndash;> 下发到已注册的Extension进行处理。<br/>
接近固定形式的表述更容易被识别。</p>

<h3>集成</h3>

<p>需要注意develop target系统版本问题。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/17/ioszhi-shi-xiao-ji-180910/'><a href="http://sxgfxm.github.io/blog/2018/09/17/ioszhi-shi-xiao-ji-180910/">http://sxgfxm.github.io/blog/2018/09/17/ioszhi-shi-xiao-ji-180910/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 之 深度优先搜索]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shen-du-you-xian-sou-suo/"/>
    <updated>2018-09-10T21:55:31+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shen-du-you-xian-sou-suo</id>
    <content type="html"><![CDATA[<h2>深度优先搜索</h2>

<p>以下为 LeetCode 深度优先搜索 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/1-bit-and-2-bit-characters/description/">717. 1比特与2比特字符</a></h3>

<p>问题分析：深度优先搜索，按状态转移搜索。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">isOneBitCharacter</span><span class="p">(</span><span class="n">_</span> <span class="nl">bits</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">dfs</span><span class="p">(</span><span class="n">bits</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">func</span> <span class="n">dfs</span><span class="p">(</span><span class="n">_</span> <span class="nl">bits</span><span class="p">:[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">index</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">index</span> <span class="o">==</span> <span class="n">bits</span><span class="p">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">bits</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">true</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">index</span> <span class="o">&gt;=</span> <span class="n">bits</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">bits</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">bits</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">dfs</span><span class="p">(</span><span class="n">bits</span><span class="p">,</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&lt;</span> <span class="n">bits</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">bits</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">bits</span><span class="p">[</span><span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="n">dfs</span><span class="p">(</span><span class="n">bits</span><span class="p">,</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">bits</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">bits</span><span class="p">[</span><span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="n">dfs</span><span class="p">(</span><span class="n">bits</span><span class="p">,</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：按状态转移搜索。<br/>
状态：优于100%的提交。</p>

<h3><a href="https://leetcode-cn.com/problems/max-area-of-island/description/">695. 岛屿的最大面积</a></h3>

<p>问题分析：非回溯4个方向求和。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="n">maxCount</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">let</span> <span class="n">transform</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">]]</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">func</span> <span class="n">maxAreaOfIsland</span><span class="p">(</span><span class="n">_</span> <span class="nl">grid</span><span class="p">:</span> <span class="p">[[</span><span class="n">Int</span><span class="p">]])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">grid</span> <span class="o">=</span> <span class="n">grid</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">grid</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">grid</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">grid</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">let</span> <span class="n">count</span> <span class="o">=</span> <span class="n">dfs</span><span class="p">(</span><span class="o">&amp;</span><span class="n">grid</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">if</span> <span class="n">maxCount</span> <span class="o">&lt;</span> <span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                        <span class="n">maxCount</span> <span class="o">=</span> <span class="n">count</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">maxCount</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">func</span> <span class="n">dfs</span><span class="p">(</span><span class="n">_</span> <span class="nl">grid</span><span class="p">:</span> <span class="k">inout</span> <span class="p">[[</span><span class="n">Int</span><span class="p">]],</span> <span class="n">_</span> <span class="nl">x</span><span class="p">:</span> <span class="n">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nl">y</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">grid</span><span class="p">.</span><span class="n">count</span> <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">grid</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">count</span> <span class="o">&amp;&amp;</span> <span class="n">grid</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">grid</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="k">var</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="mi">4</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">let</span> <span class="n">xx</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">transform</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>                <span class="k">let</span> <span class="n">yy</span> <span class="o">=</span> <span class="n">y</span> <span class="o">+</span> <span class="n">transform</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>                <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="n">dfs</span><span class="p">(</span><span class="o">&amp;</span><span class="n">grid</span><span class="p">,</span> <span class="n">xx</span><span class="p">,</span> <span class="n">yy</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">count</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><a href="https://leetcode-cn.com/problems/number-of-islands/description/">200. 岛屿的个数</a></h3>

<p>问题分析：深度优先遍历，遇到0置为1，非回溯。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">let</span> <span class="n">transform</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">]]</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">func</span> <span class="n">numIslands</span><span class="p">(</span><span class="n">_</span> <span class="nl">grid</span><span class="p">:</span> <span class="p">[[</span><span class="n">Character</span><span class="p">]])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">grid</span> <span class="o">=</span> <span class="n">grid</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">grid</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">grid</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">grid</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="s">&quot;1&quot;</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">dfs</span><span class="p">(</span><span class="o">&amp;</span><span class="n">grid</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">count</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">func</span> <span class="n">dfs</span><span class="p">(</span><span class="n">_</span> <span class="nl">grid</span><span class="p">:</span> <span class="k">inout</span> <span class="p">[[</span><span class="n">Character</span><span class="p">]],</span> <span class="n">_</span> <span class="nl">x</span><span class="p">:</span> <span class="n">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nl">y</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">grid</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;0&quot;</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="mi">4</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">let</span> <span class="n">xx</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">transform</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>            <span class="k">let</span> <span class="n">yy</span> <span class="o">=</span> <span class="n">y</span> <span class="o">+</span> <span class="n">transform</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">xx</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">xx</span> <span class="o">&lt;</span> <span class="n">grid</span><span class="p">.</span><span class="n">count</span> <span class="o">&amp;&amp;</span> <span class="n">yy</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">yy</span> <span class="o">&lt;</span> <span class="n">grid</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">count</span> <span class="o">&amp;&amp;</span> <span class="n">grid</span><span class="p">[</span><span class="n">xx</span><span class="p">][</span><span class="n">yy</span><span class="p">]</span> <span class="o">==</span> <span class="s">&quot;1&quot;</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">dfs</span><span class="p">(</span><span class="o">&amp;</span><span class="n">grid</span><span class="p">,</span> <span class="n">xx</span><span class="p">,</span> <span class="n">yy</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shen-du-you-xian-sou-suo/'>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shen-du-you-xian-sou-suo/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 之 数学]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shu-xue/"/>
    <updated>2018-09-10T21:54:51+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shu-xue</id>
    <content type="html"><![CDATA[<h2>数学</h2>

<p>以下为 LeetCode 数学 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/power-of-three/description/">326. 3的幂</a></h3>

<p>方法一：模拟3的幂的过程，直到等于或超过给定的值，<strong>时间复杂度为多少？</strong>。<br/>
方法二：通过数学公式转化，3<sup>m</sup> = n，log(3<sup>m</sup>) = logn，mlog3 = logn，m = logn / log3，判断m是否为整数即可，时间复杂度 O(1)。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">isPowerOfThree</span><span class="p">(</span><span class="n">_</span> <span class="nl">n</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">m</span> <span class="o">=</span> <span class="n">log10</span><span class="p">(</span><span class="n">Double</span><span class="p">(</span><span class="n">n</span><span class="p">))</span> <span class="o">/</span> <span class="n">log10</span><span class="p">(</span><span class="mf">3.0</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">m</span> <span class="o">-</span> <span class="n">floor</span><span class="p">(</span><span class="n">m</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：通过数学公式简单的变化，将原问题转化为可直接计算的问题，降低复杂度。</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shu-xue/'>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shu-xue/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 之 位运算]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-wei-yun-suan/"/>
    <updated>2018-09-10T21:53:58+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-wei-yun-suan</id>
    <content type="html"><![CDATA[<h2>位运算</h2>

<p>以下为 LeetCode 位运算 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/power-of-two/description/">231. 2的幂</a></h3>

<p>方法一、二：同题目<a href="https://leetcode-cn.com/problems/power-of-three/description/">326. 3的幂</a>。<br/>
方法三：考察2的幂的特性，转化为二进制形式为1后面n个0，可以通过位运算来判断是否符合该形式。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">isPowerOfTwo</span><span class="p">(</span><span class="n">_</span> <span class="nl">n</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：有时候可以考察数字的二进制、八进制、十六进制形式，从中寻找规律。</p>

<h3><a href="https://leetcode-cn.com/problems/power-of-four/description/">342. 4的幂</a></h3>

<p>方法一、二、三：同题目<a href="https://leetcode-cn.com/problems/power-of-two/description/">231. 2的幂</a>，位运算方式稍微改变。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">isPowerOfFour</span><span class="p">(</span><span class="n">_</span> <span class="nl">n</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>积累：负数的位运算操作。格式化输出。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-wei-yun-suan/'><a href="http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-wei-yun-suan/">http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-wei-yun-suan/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 之 排序]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-pai-xu/"/>
    <updated>2018-09-10T21:53:00+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-pai-xu</id>
    <content type="html"><![CDATA[<h2>排序</h2>

<p>以下为 LeetCode 排序 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/largest-number/description/">179. 最大数</a></h3>

<p>问题分析：为组成最大的数，即数字大的排序靠前，问题转化为一种特殊的排序。<br/>
边界情况：当数组中元素全部为0时，转换为字符串后只有一个0。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">largestNumber</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">nums</span> <span class="o">=</span> <span class="n">nums</span>
</span><span class='line'>        <span class="n">nums</span><span class="p">.</span><span class="n">sort</span><span class="p">{</span> <span class="n">String</span><span class="p">(</span><span class="err">$</span><span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="n">String</span><span class="p">(</span><span class="err">$</span><span class="mi">1</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">String</span><span class="p">(</span><span class="err">$</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">String</span><span class="p">(</span><span class="err">$</span><span class="mi">0</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">result</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">flag</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">nums</span><span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">i</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">flag</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">flag</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">result</span> <span class="o">=</span> <span class="n">result</span> <span class="o">+</span> <span class="n">String</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">result</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">=</span> <span class="s">&quot;0&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：当数字转换为字符串时，尤其是拼接的情况，需要特殊处理开头连续的0。</p>

<h3><a href="https://leetcode-cn.com/problems/array-partition-i/description/">561. 数组拆分 I</a></h3>

<p>问题分析：若a&lt;b&lt;c&lt;d，则min(a,b) + min(c,d) > min(a,c) + min(b,d)，所以按从小到大排序再求和。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">arrayPairSum</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">array</span> <span class="o">=</span> <span class="n">nums</span><span class="p">.</span><span class="n">sorted</span><span class="p">{</span><span class="err">$</span><span class="mi">0</span> <span class="o">&lt;</span> <span class="err">$</span><span class="mi">1</span><span class="p">}</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">array</span><span class="p">.</span><span class="n">count</span> <span class="o">/</span> <span class="mi">2</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">sum</span> <span class="o">+=</span> <span class="n">array</span><span class="p">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">2</span><span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">sum</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>积累：<code>array.sort()</code>排序自身，<code>array.sorted()</code>返回排序后数组。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-pai-xu/'><a href="http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-pai-xu/">http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-pai-xu/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 之 哈希]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-ha-xi/"/>
    <updated>2018-09-10T21:51:54+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-ha-xi</id>
    <content type="html"><![CDATA[<h2>哈希</h2>

<p>以下为 LeetCode 哈希 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/description/">448. 找到所有数组中消失的数字</a></h3>

<p>问题分析：<strong>暂时未找到最优解法</strong>。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">findDisappearedNumbers</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">hash</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">_</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">hash</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">nums</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">hash</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">result</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span> <span class="k">in</span> <span class="n">hash</span><span class="p">.</span><span class="n">enumerated</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">value</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>状态：优于40%的提交。</p>

<h3><a href="https://leetcode-cn.com/problems/two-sum/description/">1. 两数之和</a></h3>

<p>问题分析：该问题可转化为给定一个数，查找与另一个数的差是否存在，即查找问题。<br/>
方法一：每次遍历查找，时间复杂度O(n<sup>2</sup>)。<br/>
方法二：将数组元素i标记为 <code>map[num[i]] = i</code> ，通过下标索引，将查找复杂度由 O(n) 将为 O(1) ，空间复杂度为 O(n) 。<br/>
方法三：边建立哈希表边检查是否存在对应元素，因为是成对的，开始没有找到，之后也会找到，一遍循环搞定。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">twoSum</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">target</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：需要对 <strong>查找</strong> 常用方法进行加深学习。</p>

<h3><a href="https://leetcode-cn.com/problems/contains-duplicate/description/">217. 存在重复元素</a></h3>

<p>问题分析：哈希。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">containsDuplicate</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">dict</span><span class="p">:</span> <span class="p">[</span><span class="nl">Int</span> <span class="p">:</span> <span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="o">:</span><span class="p">]</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">nums</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">dict</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">dict</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">dict</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">!</span> <span class="o">=</span> <span class="n">dict</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">!</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">dict</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">!</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nb">true</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：字典取值需要判断是否为空。<br/>
状态：优于52%的提交。</p>

<h3><a href="https://leetcode-cn.com/problems/missing-number/description/">268. 缺失数字</a></h3>

<p>问题分析：哈希表。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">missingNumber</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">hash</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">..</span><span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">hash</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">nums</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">hash</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">value</span><span class="p">)</span> <span class="k">in</span> <span class="n">hash</span><span class="p">.</span><span class="n">enumerated</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">value</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">i</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>思考：如何用常数额外空间O(n)时间复杂度解决？</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-ha-xi/'>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-ha-xi/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode Problems 之 数组]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shu-zu/"/>
    <updated>2018-09-10T21:49:03+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shu-zu</id>
    <content type="html"><![CDATA[<h2>数组</h2>

<p>以下为 LeetCode 数组 相关问题解法记录。</p>

<!-- more -->


<h3><a href="https://leetcode-cn.com/problems/maximize-distance-to-closest-person/description/">849. 到最近的人的最大距离</a></h3>

<p>问题分析：分别求出距离左边和距离右边的最大距离，取最小值中的最大值。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">maxDistToClosest</span><span class="p">(</span><span class="n">_</span> <span class="nl">seats</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">left</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">right</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">seats</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="kr">left</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>            <span class="kr">right</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">leftFlag</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">seats</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">seats</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">leftFlag</span> <span class="o">=</span> <span class="n">i</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">seats</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">leftFlag</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>                    <span class="kr">left</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">leftFlag</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">rightFlag</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">seats</span><span class="p">.</span><span class="n">count</span><span class="p">).</span><span class="n">reversed</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">seats</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">rightFlag</span> <span class="o">=</span> <span class="n">i</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">seats</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">rightFlag</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>                    <span class="kr">right</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">rightFlag</span> <span class="o">-</span> <span class="n">i</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">maxValue</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">seats</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">maxValue</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">maxValue</span><span class="p">,</span> <span class="n">minBiggerThan0</span><span class="p">(</span><span class="kr">left</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="kr">right</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">maxValue</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">func</span> <span class="n">minBiggerThan0</span><span class="p">(</span><span class="n">_</span> <span class="nl">a</span><span class="p">:</span> <span class="n">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nl">b</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">b</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">min</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">a</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">b</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">b</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
启发：左右开工。<br/>
状态：优于33%的提交。</p>

<h3><a href="https://leetcode-cn.com/problems/rotate-array/description/">189. 旋转数组</a></h3>

<p>问题分析：nums[i] = nums[i - k]。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">rotate</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="k">inout</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">k</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">k</span> <span class="o">=</span> <span class="n">k</span> <span class="o">%</span> <span class="n">nums</span><span class="p">.</span><span class="n">count</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">nums</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">temp</span><span class="p">[(</span><span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="o">+</span> <span class="n">i</span> <span class="o">-</span> <span class="n">k</span><span class="p">)</span> <span class="o">%</span> <span class="n">nums</span><span class="p">.</span><span class="n">count</span><span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
启发：<strong>不是最优解法</strong>。</p>

<h3><a href="https://leetcode-cn.com/problems/plus-one/description/">66. 加一</a></h3>

<p>问题分析：高精度加1，先加1，再处理进位。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">plusOne</span><span class="p">(</span><span class="n">_</span> <span class="nl">digits</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">digits</span> <span class="o">=</span> <span class="n">digits</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">length</span> <span class="o">=</span> <span class="n">digits</span><span class="p">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">value</span> <span class="o">=</span> <span class="n">digits</span><span class="p">[</span><span class="n">length</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>        <span class="n">digits</span><span class="p">[</span><span class="n">length</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">%</span> <span class="mi">10</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">/</span> <span class="mi">10</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">length</span><span class="p">).</span><span class="n">reversed</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">value</span> <span class="o">=</span> <span class="n">digits</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">c</span>
</span><span class='line'>            <span class="n">digits</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">%</span> <span class="mi">10</span>
</span><span class='line'>            <span class="n">c</span> <span class="o">=</span> <span class="n">value</span> <span class="o">/</span> <span class="mi">10</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">c</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">digits</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="nl">at</span><span class="p">:</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">digits</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
启发：array.insert(value, at:index)，(0..100).reversed()。<br/>
状态：优于55%的提交。</p>

<h3><a href="https://leetcode-cn.com/problems/longest-continuous-increasing-subsequence/description/">674. 最长连续递增序列</a></h3>

<p>问题分析：模拟。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">findLengthOfLCIS</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">1</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">maxLength</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">1.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">maxLength</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">maxLength</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">maxLength</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
启发：注意边界情况。<br/>
状态：优于100%的提交。</p>

<h3><a href="https://leetcode-cn.com/problems/largest-number-at-least-twice-of-others/description/">747. 至少是其他数字两倍的最大数</a></h3>

<p>问题分析：模拟。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">dominantIndex</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">maxValue</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">maxIndex</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span> <span class="k">in</span> <span class="n">nums</span><span class="p">.</span><span class="n">enumerated</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">value</span> <span class="o">&gt;</span> <span class="n">maxValue</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">maxValue</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>                <span class="n">maxIndex</span> <span class="o">=</span> <span class="n">index</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span> <span class="k">in</span> <span class="n">nums</span><span class="p">.</span><span class="n">enumerated</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">index</span> <span class="o">!=</span> <span class="n">maxIndex</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">value</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">&gt;</span> <span class="n">maxValue</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">maxIndex</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><a href="https://leetcode-cn.com/problems/fair-candy-swap/description/">888. 公平的糖果交换</a></h3>

<p>问题分析：给定一个数，找另一个数。<br/>
方法一：模拟，双重循环，sumA + (B[j] - A[i]) == sumB + (A[i] - B[j])，时间复杂度O(n<sup>2</sup>)。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">fairCandySwap</span><span class="p">(</span><span class="n">_</span> <span class="nl">A</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">B</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">sumA</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">sumB</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="n">A</span><span class="p">.</span><span class="n">map</span><span class="p">{</span><span class="n">sumA</span> <span class="o">=</span> <span class="n">sumA</span> <span class="o">+</span> <span class="err">$</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>        <span class="n">B</span><span class="p">.</span><span class="n">map</span><span class="p">{</span><span class="n">sumB</span> <span class="o">=</span> <span class="n">sumB</span> <span class="o">+</span> <span class="err">$</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">A</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">B</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">sumA</span> <span class="o">+</span> <span class="n">j</span> <span class="o">-</span> <span class="n">i</span><span class="p">)</span> <span class="o">==</span> <span class="p">(</span><span class="n">sumB</span> <span class="o">+</span> <span class="n">i</span> <span class="o">-</span> <span class="n">j</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">[]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
方法二：哈希，B[j] = (sumB + 2 * A[i] - sumA) / 2，时间复杂度O(n)，空间复杂度O(n)。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">fairCandySwap</span><span class="p">(</span><span class="n">_</span> <span class="nl">A</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">B</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">sumA</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">sumB</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">hash</span><span class="p">:</span> <span class="p">[</span><span class="nl">Int</span><span class="p">:</span><span class="n">Bool</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="o">:</span><span class="p">]</span>
</span><span class='line'>        <span class="n">A</span><span class="p">.</span><span class="n">map</span><span class="p">{</span><span class="n">sumA</span> <span class="o">=</span> <span class="n">sumA</span> <span class="o">+</span> <span class="err">$</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>        <span class="n">B</span><span class="p">.</span><span class="n">map</span><span class="p">{</span><span class="n">sumB</span> <span class="o">=</span> <span class="n">sumB</span> <span class="o">+</span> <span class="err">$</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">A</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">let</span> <span class="n">key</span> <span class="o">=</span> <span class="p">(</span><span class="n">sumB</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">i</span> <span class="o">-</span> <span class="n">sumA</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span>
</span><span class='line'>            <span class="k">if</span> <span class="k">let</span> <span class="n">value</span> <span class="o">=</span> <span class="n">hash</span><span class="p">[</span><span class="n">key</span><span class="p">],</span> <span class="n">value</span> <span class="o">==</span> <span class="nb">true</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">key</span><span class="p">]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">[]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
方法三：排序 + 二分查找，不申请额外空间。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">fairCandySwap</span><span class="p">(</span><span class="n">_</span> <span class="nl">A</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">B</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">B</span> <span class="o">=</span> <span class="n">B</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">sumA</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">sumB</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="n">A</span><span class="p">.</span><span class="n">map</span><span class="p">{</span><span class="n">sumA</span> <span class="o">=</span> <span class="n">sumA</span> <span class="o">+</span> <span class="err">$</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>        <span class="n">B</span><span class="p">.</span><span class="n">map</span><span class="p">{</span><span class="n">sumB</span> <span class="o">=</span> <span class="n">sumB</span> <span class="o">+</span> <span class="err">$</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>        <span class="n">B</span><span class="p">.</span><span class="n">sort</span><span class="p">{</span><span class="err">$</span><span class="mi">0</span> <span class="o">&lt;</span> <span class="err">$</span><span class="mi">1</span><span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">A</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">let</span> <span class="n">target</span> <span class="o">=</span> <span class="p">(</span><span class="n">sumB</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">i</span> <span class="o">-</span> <span class="n">sumA</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">binarySearch</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">B</span><span class="p">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">target</span><span class="p">]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">[]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">func</span> <span class="n">binarySearch</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">left</span><span class="p">:</span> <span class="n">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nl">right</span><span class="p">:</span> <span class="n">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nl">target</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="kr">left</span> <span class="o">&lt;=</span> <span class="kr">right</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">nums</span><span class="p">[</span><span class="kr">left</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nb">true</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">nums</span><span class="p">[</span><span class="kr">right</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nb">true</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">let</span> <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="kr">left</span> <span class="o">+</span> <span class="kr">right</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">nums</span><span class="p">[</span><span class="n">mid</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">target</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">binarySearch</span><span class="p">(</span><span class="n">nums</span><span class="p">,</span> <span class="kr">left</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">mid</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">binarySearch</span><span class="p">(</span><span class="n">nums</span><span class="p">,</span> <span class="n">mid</span><span class="p">,</span> <span class="kr">right</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：给定一个数，查找另一个数。</p>

<h3><a href="https://leetcode-cn.com/problems/positions-of-large-groups/description/">830. 较大分组的位置</a></h3>

<p>问题分析：模拟，注意考虑边界情况。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">largeGroupPositions</span><span class="p">(</span><span class="n">_</span> <span class="nl">S</span><span class="p">:</span> <span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[[</span><span class="n">Int</span><span class="p">]]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">result</span><span class="p">:</span> <span class="p">[[</span><span class="n">Int</span><span class="p">]]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="k">var</span> <span class="kr">left</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kr">right</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">while</span> <span class="kr">left</span> <span class="o">&lt;</span> <span class="n">S</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="kr">right</span> <span class="o">=</span> <span class="kr">left</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>            <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">while</span> <span class="kr">right</span> <span class="o">&lt;</span> <span class="n">S</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">S</span><span class="p">[</span><span class="n">S</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">S</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="kr">right</span><span class="p">)]</span> <span class="o">==</span> <span class="n">S</span><span class="p">[</span><span class="n">S</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">S</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="kr">left</span><span class="p">)]</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>                    <span class="kr">right</span> <span class="o">=</span> <span class="kr">right</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="p">{</span>
</span><span class='line'>                        <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">([</span><span class="kr">left</span><span class="p">,</span> <span class="kr">right</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="k">break</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="kr">right</span> <span class="o">==</span> <span class="n">S</span><span class="p">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span><span class="p">{</span>
</span><span class='line'>                    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">([</span><span class="kr">left</span><span class="p">,</span> <span class="kr">right</span><span class="p">])</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="kr">left</span> <span class="o">=</span> <span class="kr">right</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：注意边界条件。<br/>
状态：优于25%的提交。</p>

<h3><a href="https://leetcode-cn.com/contest/weekly-contest-102/problems/fruit-into-baskets/">904. 水果成篮</a></h3>

<p>问题分析：最长连续子序列长度，且子序列不同个数最多为2。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">totalFruit</span><span class="p">(</span><span class="n">_</span> <span class="nl">tree</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="kr">set</span> <span class="o">=</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Int</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">tree</span> <span class="p">{</span>
</span><span class='line'>            <span class="kr">set</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="kr">set</span><span class="p">.</span><span class="n">count</span> <span class="o">&lt;=</span> <span class="mi">2</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">tree</span><span class="p">.</span><span class="n">count</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">maxLength</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">0.</span><span class="p">.</span><span class="o">&lt;</span><span class="n">tree</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">var</span> <span class="kr">set</span> <span class="o">=</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Int</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>            <span class="kr">set</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">tree</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>            <span class="k">var</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)..</span><span class="o">&lt;</span><span class="n">tree</span><span class="p">.</span><span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="kr">set</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">{</span>
</span><span class='line'>                    <span class="kr">set</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">tree</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
</span><span class='line'>                    <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="kr">set</span><span class="p">.</span><span class="n">contains</span><span class="p">(</span><span class="n">tree</span><span class="p">[</span><span class="n">j</span><span class="p">]){</span>
</span><span class='line'>                    <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">break</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">maxLength</span> <span class="o">&lt;</span> <span class="n">count</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">maxLength</span> <span class="o">=</span> <span class="n">count</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">maxLength</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启发：<strong>不是最佳解法</strong>。</p>

<h3><a href="https://leetcode-cn.com/contest/weekly-contest-102/problems/sort-array-by-parity/">905. 按奇偶校验排序数组</a></h3>

<p>问题分析：模拟。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">sortArrayByParity</span><span class="p">(</span><span class="n">_</span> <span class="nl">A</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">A</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">nums</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">A</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">nums</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">nums</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><a href="https://leetcode-cn.com/problems/search-insert-position/description/">35. 搜索插入位置</a></h3>

<p>问题分析：二分查找。<br/>
方法一：顺序查找，时间复杂度O(N)。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Solution</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">searchInsert</span><span class="p">(</span><span class="n">_</span> <span class="nl">nums</span><span class="p">:</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nl">target</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span> <span class="k">in</span> <span class="n">nums</span><span class="p">.</span><span class="n">enumerated</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">value</span> <span class="o">&gt;=</span> <span class="n">target</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">index</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">nums</span><span class="p">.</span><span class="n">count</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>方法二：二分查找，时间复杂度O(logN)。<br/>
代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="err">```</span>
</span><span class='line'><span class="err">启发：二分查找。</span>
</span><span class='line'><span class="err">状态：；优于</span><span class="mi">40</span><span class="o">%</span><span class="err">提交。</span>
</span><span class='line'>
</span><span class='line'><span class="cp">### [697. 数组的度](https:</span><span class="c1">//leetcode-cn.com/problems/degree-of-an-array/description/)</span>
</span><span class='line'><span class="err">问题分析：</span><span class="c1">//  问题分析：先找出数组的度，然后前后查找对应的值的位置。  </span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>swift
class Solution {
    func findShortestSubArray(_ nums: [Int]) -> Int {
        var hash: [Int:Int] = [:]
        var maxCount = 0
        for i in nums {
            if hash[i] == nil {
                hash[i] = 1
            } else {
                hash[i]! = hash[i]! + 1
            }
            if maxCount &lt; hash[i]! {
                maxCount = hash[i]!
            }
        }
        if maxCount == 1 {
            return 1
        }
        var dus:[Int] = []
        for (key, value) in hash{
            if value == maxCount {
                dus.append(key)
            }
        }
        var minLength = 50000
        for maxValue in dus {
            var left = 0
            var right = nums.count - 1
            for (index, value) in nums.enumerated() {
                if value == maxValue {
                    left = index
                    break
                }
            }
            for (index, value) in nums.enumerated().reversed() {
                if value == maxValue {
                    right = index
                    break
                }
            }
            if minLength > right - left + 1 {
                minLength = right - left + 1
            }
        }
        return minLength</p>

<pre><code>}
</code></pre>

<p>}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="err">启发：审清题目。</span>
</span><span class='line'><span class="err">状态：优于</span><span class="mi">80</span><span class="o">%</span><span class="err">的提交。</span>
</span><span class='line'>
</span><span class='line'><span class="cp">### [167. 两数之和 II - 输入有序数组](https:</span><span class="c1">//leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/description/)</span>
</span><span class='line'><span class="err">问题分析：因为已按升序排序，只需前后两个指针移动即可。</span>
</span></code></pre></td></tr></table></div></figure>


<p>swift
class Solution {
    func twoSum(_ numbers: [Int], _ target: Int) -> [Int] {
        var i = 0, j = numbers.count - 1
        while i &lt; j {
            let value = numbers[i] + numbers[j]
            if value > target {
                j -= 1
            } else if value &lt; target {
                i += 1
            } else {
                return [i + 1, j + 1]
            }
        }
        return []
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="err">启发：依据已有条件找出效率更高的解法，而非直接双重循环。</span>
</span><span class='line'><span class="err">状态：优于</span><span class="mi">66</span><span class="o">%</span><span class="err">的提交。</span>
</span><span class='line'>
</span><span class='line'><span class="cp">### [121. 买卖股票的最佳时机](https:</span><span class="c1">//leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/description/)</span>
</span><span class='line'><span class="err">问题分析：枚举所有情况求值。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func maxProfit(_ prices: [Int]) -> Int {
        var maxProfit = 0
        for i in 0..&lt;prices.count {
            for j in (i+1)..&lt;prices.count {
                let profit = prices[j] - prices[i]
                if maxProfit &lt; profit {
                    maxProfit = profit
                }
            }
        }
        return maxProfit
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="cp">### [661. 图片平滑器](https:</span><span class="c1">//leetcode-cn.com/problems/image-smoother/description/)</span>
</span><span class='line'><span class="err">问题分析：图片滤波器，构造转换方式。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {</p>

<pre><code>let transform = [[-1, -1], [0, -1], [1, -1],
                 [-1, 0], [0, 0], [1, 0],
                 [-1, 1], [0, 1], [1, 1]]

func imageSmoother(_ M: [[Int]]) -&gt; [[Int]] {
    var N: [[Int]] = []
    let row = M.count
    let colum = M[0].count
    for i in 0..&lt;row {
        var array: [Int] = []
        for j in 0..&lt;colum {
            var value = 0
            var count = 0
            for k in 0..&lt;9 {
                let xx = i + transform[k][0]
                let yy = j + transform[k][1]
                if xx &gt;= 0 &amp;&amp; xx &lt; row &amp;&amp; yy &gt;= 0 &amp;&amp; yy &lt; colum {
                    value = value + M[xx][yy]
                    count = count + 1
                }
            }
            array.append(Int(value / count))
        }
        N.append(array)
    }
    return N
}
</code></pre>

<p>}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="err">思考：有没有更简洁的写法？</span>
</span><span class='line'><span class="err">状态：优于</span><span class="mi">75</span><span class="o">%</span><span class="err">的提交。</span>
</span><span class='line'>
</span><span class='line'><span class="cp">### [867. 转置矩阵](https:</span><span class="c1">//leetcode-cn.com/problems/transpose-matrix/description/)</span>
</span><span class='line'><span class="err">问题分析：模拟矩阵转置过程，</span><span class="n">AT</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">A</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="err">，</span><span class="n">i</span> <span class="o">~</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="n">m</span><span class="p">]</span><span class="err">，</span><span class="n">j</span> <span class="o">~</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">]</span><span class="err">。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func transpose(_ A: [[Int]]) -> [[Int]] {
        var AT: [[Int]] = []
        for i in 0..&lt;A[0].count {
            var row: [Int] = []
            for j in 0..&lt;A.count {
                row.append(A[j][i])
            }
            AT.append(row)
        }
        return AT
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="cp">### [118. 杨辉三角](https:</span><span class="c1">//leetcode-cn.com/problems/pascals-triangle/description/)</span>
</span><span class='line'><span class="err">问题分析：</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">j</span><span class="p">]</span><span class="err">，</span><span class="n">i</span> <span class="o">~</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="n">numRows</span><span class="p">)</span><span class="err">，</span><span class="n">j</span> <span class="o">~</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="n">i</span><span class="p">]</span><span class="err">，超出边界为</span><span class="mi">0</span><span class="err">。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func generate(_ numRows: Int) -> [[Int]] {
        var rows: [[Int]] = []
        for i in 0..<numRows {
            var row: [Int] = []
            for j in 0...i {
                var left = 0
                var right = 0
                if i - 1 < 0 {
                    left = 1
                } else {
                    if j - 1 < 0 {
                        left = 0
                    } else {
                        left = rows[i-1][j-1]
                    }
                    if j >= rows[i-1].count {
                        right = 0
                    } else {
                        right = rows[i-1][j]
                    }
                }
                row.append(left + right)
            }
            rows.append(row)
        }
        return rows
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="o">**</span><span class="err">还有更简洁的写法吗？</span><span class="o">**</span>
</span><span class='line'>
</span><span class='line'><span class="cp">### [119. 杨辉三角 II](https:</span><span class="c1">//leetcode-cn.com/problems/pascals-triangle-ii/description/)</span>
</span><span class='line'><span class="err">问题分析：模拟，压缩空间，倒序生成。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func getRow(_ rowIndex: Int) -> [Int] {
        if rowIndex == 0 {
            return [1]
        }
        var nums: [Int] = []
        for i in 0&hellip;rowIndex {
            nums.append(0)
        }
        nums[0] = 1
        for i in 1&hellip;rowIndex {
            for j in stride(from: i, to: 0, by: -1) {
                nums[j] = nums[j] + nums[j - 1]
            }
        }
        return nums
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="err">积累：倒序遍历数组。</span>
</span><span class='line'>
</span><span class='line'><span class="cp">### [566. 重塑矩阵](https:</span><span class="c1">//leetcode-cn.com/problems/reshape-the-matrix/description/)</span>
</span><span class='line'><span class="err">问题分析：</span><span class="n">reshapeNums</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">index</span> <span class="o">/</span> <span class="n">colums</span><span class="p">,</span> <span class="n">index</span> <span class="o">%</span> <span class="n">colums</span><span class="p">],</span> <span class="n">index</span><span class="o">++</span><span class="err">。</span>
</span><span class='line'><span class="err">边界情况：</span><span class="n">nums</span><span class="p">.</span><span class="n">count</span> <span class="o">*</span> <span class="n">nums</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">count</span> <span class="o">=</span> <span class="n">r</span> <span class="o">*</span> <span class="n">c</span><span class="err">，</span><span class="n">nums</span><span class="err">为空的情况。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func matrixReshape(_ nums: [[Int]], _ r: Int, _ c: Int) -> [[Int]] {
        let row: Int = nums.count
        if row == 0 {
            return nums
        }
        let colum: Int = nums[0].count
        if colum == 0 {
            return nums
        }
        //  不可以转换
        if row * colum != r * c {
            return nums
        }
        //  转换
        var index: Int = 0;
        var reshapeNums: [[Int]] = []
        for _ in 0..&lt;r {
            var rowArray: [Int] = []
            for _ in 0..&lt;c {
                rowArray.append(nums[index / colum][index % colum])
                index = index + 1
            }
            reshapeNums.append(rowArray)
        }
        return reshapeNums
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="err">积累：未使用循环变量可以用`</span><span class="n">_</span><span class="err">`代替。</span>
</span><span class='line'>
</span><span class='line'><span class="cp">### [766. 托普利茨矩阵](https:</span><span class="c1">//leetcode-cn.com/problems/toeplitz-matrix/description/)</span>
</span><span class='line'><span class="err">问题分析：保持对角线相同，观察特征，每行右移一位与下一行除第一位开始完全相同，按此方法检测，且空间复杂度为</span><span class="n">O</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="err">。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func isToeplitzMatrix(_ matrix: [[Int]]) -> Bool {
        //  初始化
        var testRow = matrix[0]
        if matrix.count == 1 {
            return true
        }
        //  依次检测每行
        for i in 1..&lt;matrix.count {
            testRow.remove(at:testRow.count - 1)
            testRow.insert(matrix[i][0], at:0)
            for j in 0..&lt;matrix[i].count {
                if testRow[j] != matrix[i][j] {
                    return false
                }
            }
        }
        return true
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="err">积累：`</span><span class="n">array</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nl">at</span><span class="p">:</span><span class="n">index</span><span class="p">)</span><span class="err">`插入数组元素，`</span><span class="n">array</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="nl">at</span><span class="p">:</span><span class="n">index</span><span class="p">)</span><span class="err">`删除数组元素。</span>
</span><span class='line'>
</span><span class='line'><span class="cp">### [169. 求众数](https:</span><span class="c1">//leetcode-cn.com/problems/majority-element/description/)</span>
</span><span class='line'><span class="err">问题分析：统计元素出现个数，并找出出现个数大于</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="err">的元素。</span>
</span><span class='line'><span class="err">方法一：从小到大排序，然后统计个数。</span>
</span><span class='line'><span class="err">方法二：由于众数个数大于</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="err">，所以中间位置必为众数，直接返回即可。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func majorityElement(_ nums: [Int]) -> Int {
        //  排序
        let sortedNums = nums.sorted{$0 &lt; $1}
        //  取中位数
        return sortedNums[nums.count / 2]
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="cp">### [283. 移动零](https:</span><span class="c1">//leetcode-cn.com/problems/move-zeroes/description/)</span>
</span><span class='line'><span class="err">问题分析：模拟移动零的过程，如果第</span><span class="n">i</span><span class="err">位为</span><span class="mi">0</span><span class="err">，则用第</span><span class="n">i</span><span class="err">位后第一个非</span><span class="mi">0</span><span class="err">值交换。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func moveZeroes(_ nums: inout [Int]) {
        for i in 0..&lt;nums.count {
            if nums[i] == 0 {
                var index = i
                for j in (i+1)..&lt;nums.count {
                    if nums[j] != 0 {
                        index = j
                        break
                    }
                }
                if index != i {
                    var temp = nums[i]
                    nums[i] = nums[index]
                    nums[index] = temp
                }
            }
        }
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="cp">### [485. 最大连续1的个数](https:</span><span class="c1">//leetcode-cn.com/problems/max-consecutive-ones/description/)</span>
</span><span class='line'><span class="err">问题分析：统计连续</span><span class="mi">1</span><span class="err">的个数并取最大值</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func findMaxConsecutiveOnes(_ nums: [Int]) -> Int {
        var maxCount = 0
        var currentCount = 0
        for i in nums {
            if i == 0 {
                currentCount = 0
            } else {
                currentCount += 1
            }
            if maxCount &lt; currentCount {
                maxCount = currentCount
            }
        }
        return maxCount
    }
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="cp">### [896. 单调数列](https:</span><span class="c1">//leetcode-cn.com/problems/monotonic-array/description/)</span>
</span><span class='line'><span class="err">问题分析：同时记录是否为单调递增或者单调递减。</span>
</span><span class='line'><span class="err">代码：</span>
</span></code></pre></td></tr></table></div></figure>


<p>class Solution {
    func isMonotonic(_ A: [Int]) -> Bool {
        var isIncrease = true
        var isDecrease = true
        for i in 1..&lt;A.count {
            if A[i-1] > A[i] {
                isIncrease = false
                break
            }
        }
        for i in 1..&lt;A.count {
            if A[i-1] &lt; A[i] {
                isDecrease = false
                break
            }
        }
        return isIncrease || isDecrease</p>

<pre><code>}
</code></pre>

<p>}
```</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shu-zu/'>http://sxgfxm.github.io/blog/2018/09/10/leetcode-problems-zhi-shu-zu/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180903]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/10/ioszhi-shi-xiao-ji-180903/"/>
    <updated>2018-09-10T14:34:51+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/10/ioszhi-shi-xiao-ji-180903</id>
    <content type="html"><![CDATA[<h2>集成Apple Pay</h2>

<h3>权限配置</h3>

<p>按官方指导配置权限。</p>

<h3>调用过程</h3>

<p>引入<code>&lt;PassKit/PassKit.h&gt;</code>，权限判断，支付卡判断，设置商品参数，创建支付请求，显示支付界面，代理接收结果。</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">useApplePay</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//  权限判断</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">PKPaymentAuthorizationViewController</span> <span class="n">canMakePayments</span><span class="p">]){</span>
</span><span class='line'>    <span class="c1">//  支付卡判断</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">([</span><span class="n">PKPaymentAuthorizationViewController</span> <span class="nl">canMakePaymentsUsingNetworks</span><span class="p">:</span><span class="l">@[</span><span class="n">PKPaymentNetworkVisa</span><span class="p">,</span> <span class="n">PKPaymentNetworkChinaUnionPay</span><span class="p">,</span> <span class="n">PKPaymentNetworkDiscover</span><span class="l">]</span><span class="p">]){</span>
</span><span class='line'>      <span class="c1">//  设置商品参数</span>
</span><span class='line'>      <span class="bp">NSDecimalNumber</span> <span class="o">*</span><span class="n">amount</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSDecimalNumber</span> <span class="nl">decimalNumberWithString</span><span class="p">:</span><span class="s">@&quot;2.33&quot;</span><span class="p">]</span>
</span><span class='line'>      <span class="n">PKPaymentSummaryItem</span> <span class="o">*</span><span class="n">item</span> <span class="o">=</span> <span class="p">[</span><span class="n">PKPaymentSummaryItem</span> <span class="nl">summaryItemWithLabel</span><span class="p">:</span><span class="s">@&quot;PJChao&quot;</span> <span class="nl">amount</span><span class="p">:</span><span class="n">amount</span><span class="p">];</span>
</span><span class='line'>      <span class="c1">//  支付请求</span>
</span><span class='line'>      <span class="n">PKPaymentRequest</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[[</span><span class="n">PKPaymentRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>      <span class="c1">// 设置商户ID（merchant IDs）</span>
</span><span class='line'>      <span class="n">request</span><span class="p">.</span><span class="n">merchantIdentifier</span> <span class="o">=</span> <span class="s">@&quot;com.mobvoi.ApplePayTest&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">// 设置国家代码(中国大陆)</span>
</span><span class='line'>      <span class="n">request</span><span class="p">.</span><span class="n">countryCode</span> <span class="o">=</span> <span class="s">@&quot;CN&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">// 设置支付货币(人民币)</span>
</span><span class='line'>      <span class="n">request</span><span class="p">.</span><span class="n">currencyCode</span> <span class="o">=</span> <span class="s">@&quot;CNY&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">// 设置商户的支付标准(3DS支付方式必须支持，其他方式可选)</span>
</span><span class='line'>      <span class="n">request</span><span class="p">.</span><span class="n">merchantCapabilities</span> <span class="o">=</span> <span class="n">PKMerchantCapability3DS</span><span class="p">;</span>
</span><span class='line'>      <span class="n">request</span><span class="p">.</span><span class="n">paymentSummaryItems</span> <span class="o">=</span> <span class="l">@[</span><span class="n">item</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'>      <span class="cm">/**</span>
</span><span class='line'><span class="cm">       *  以上参数都是必须的</span>
</span><span class='line'><span class="cm">       *  以下参数不是必须的</span>
</span><span class='line'><span class="cm">       */</span>
</span><span class='line'>      <span class="c1">// 设置收据内容</span>
</span><span class='line'>      <span class="n">request</span><span class="p">.</span><span class="n">requiredBillingAddressFields</span> <span class="o">=</span> <span class="n">PKAddressFieldAll</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">// 设置送货内容</span>
</span><span class='line'>      <span class="n">request</span><span class="p">.</span><span class="n">requiredShippingAddressFields</span> <span class="o">=</span> <span class="n">PKAddressFieldAll</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">// 设置送货方式</span>
</span><span class='line'>      <span class="n">PKShippingMethod</span> <span class="o">*</span><span class="n">method</span> <span class="o">=</span> <span class="p">[</span><span class="n">PKShippingMethod</span> <span class="nl">summaryItemWithLabel</span><span class="p">:</span><span class="s">@&quot;顺丰&quot;</span> <span class="nl">amount</span><span class="p">:[</span><span class="bp">NSDecimalNumber</span> <span class="nl">decimalNumberWithString</span><span class="p">:</span><span class="s">@&quot;10.00&quot;</span><span class="p">]];</span>
</span><span class='line'>      <span class="n">method</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;顺丰物流&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">method</span><span class="p">.</span><span class="n">detail</span> <span class="o">=</span> <span class="s">@&quot;12小时到达&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">request</span><span class="p">.</span><span class="n">shippingMethods</span> <span class="o">=</span> <span class="l">@[</span><span class="n">method</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//  显示支付页面</span>
</span><span class='line'>      <span class="n">PKPaymentAuthorizationViewController</span> <span class="o">*</span><span class="n">paymentVC</span> <span class="o">=</span> <span class="p">[[</span><span class="n">PKPaymentAuthorizationViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithPaymentRequest</span><span class="p">:</span><span class="n">request</span><span class="p">];</span>
</span><span class='line'>      <span class="n">paymentVC</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">paymentVC</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>      <span class="p">[</span><span class="nb">self</span> <span class="nl">presentViewController</span><span class="p">:</span><span class="n">paymentVC</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//  跳转至银行卡设置界面</span>
</span><span class='line'>      <span class="p">[[[</span><span class="bp">PKPassLibrary</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">openPaymentSetup</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//  代理方法</span>
</span><span class='line'><span class="cp">#pragma mark - PKPaymentAuthorizationViewControllerDelegate</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">paymentAuthorizationViewController:</span><span class="p">(</span><span class="n">PKPaymentAuthorizationViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">controller</span>
</span><span class='line'>                       <span class="nf">didAuthorizePayment:</span><span class="p">(</span><span class="n">PKPayment</span> <span class="o">*</span><span class="p">)</span><span class="nv">payment</span>
</span><span class='line'>                                <span class="nf">completion:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">PKPaymentAuthorizationStatus</span> <span class="n">status</span><span class="p">))</span><span class="nv">completion</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     *  在这里支付信息应发送给服务器/第三方的SDK（银联SDK/易宝支付SDK/易智付SDK等）</span>
</span><span class='line'><span class="cm">     *  再根据服务器返回的支付成功与否进行不同处理</span>
</span><span class='line'><span class="cm">     *  这里直接返回支付成功</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">completion</span><span class="p">(</span><span class="n">PKPaymentAuthorizationStatusSuccess</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">paymentAuthorizationViewControllerDidFinish:</span><span class="p">(</span><span class="n">PKPaymentAuthorizationViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">controller</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 点击支付/取消按钮隐藏界面</span>
</span><span class='line'>    <span class="p">[</span><span class="n">controller</span> <span class="nl">dismissViewControllerAnimated</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>集成Touch ID</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">startLocalAuthentication</span><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">NSFoundationVersionNumber</span> <span class="o">&lt;</span> <span class="n">NSFoundationVersionNumber_iOS_8_0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;系统版本不支持TouchID&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">LAContext</span> <span class="o">*</span><span class="n">context</span> <span class="o">=</span> <span class="p">[[</span><span class="n">LAContext</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="n">context</span><span class="p">.</span><span class="n">localizedFallbackTitle</span> <span class="o">=</span> <span class="s">@&quot;请输入密码&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">([</span><span class="n">context</span> <span class="nl">canEvaluatePolicy</span><span class="p">:</span><span class="n">LAPolicyDeviceOwnerAuthenticationWithBiometrics</span> <span class="nl">error</span><span class="p">:</span><span class="o">&amp;</span><span class="n">error</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="n">context</span> <span class="nl">evaluatePolicy</span><span class="p">:</span><span class="n">LAPolicyDeviceOwnerAuthenticationWithBiometrics</span> <span class="nl">localizedReason</span><span class="p">:</span><span class="s">@&quot;通过指纹登录&quot;</span> <span class="nl">reply</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">success</span><span class="p">,</span> <span class="bp">NSError</span> <span class="o">*</span> <span class="n">_Nullable</span> <span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">success</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_main_queue</span><span class="p">(),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;验证成功&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">});</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;验证失败&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}];</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;当前设备不支持TouchID&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/10/ioszhi-shi-xiao-ji-180903/'>http://sxgfxm.github.io/blog/2018/09/10/ioszhi-shi-xiao-ji-180903/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180827]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/09/03/ioszhi-shi-xiao-ji-180827/"/>
    <updated>2018-09-03T11:36:54+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/09/03/ioszhi-shi-xiao-ji-180827</id>
    <content type="html"><![CDATA[<h2>lldb</h2>

<h3>什么是lldb</h3>

<p>LLDB是个开源的内置于XCode的具有REPL(read-eval-print-loop)特征的Debugger，其可以安装C++或者Python插件。</p>

<!-- more -->


<h3>expression</h3>

<p>执行一个表达式，并将结果输出。</p>

<h4>expression</h4>

<p><code>expression -- self.view.backgroundColor = [UIColor redColor]</code>
<code>expression -- (void)[CATransaction flush]</code></p>

<h4>print、p、call</h4>

<p>expression的别名，常用与输出某个变量。</p>

<h4>po</h4>

<p>等价于<code>expression -O -- variable</code>，输出对象本身的信息，而非对象地址。</p>

<h3>thread</h3>

<p>与线程相关操作，可以查看调用栈信息，修改返回值。</p>

<h4>thread backtrace、bt</h4>

<p>打印当前线程的调用栈信息，可以设置打印帧数，从哪个帧开始打印，是否额外显示回溯。</p>

<h4>thread return</h4>

<p>修改某个函数的返回值。</p>

<h4>c、n、s、finish</h4>

<p>continue、next、step in、step out。</p>

<h3>breakpoint</h3>

<p>与断点相关操作，可以设置单个断点、批量设置断点、为断点增加命令，删除断点及断点命令。</p>

<h4>breakpoint set</h4>

<p>设置断点，可以指定<code>-n</code>方法名，<code>-f</code>文件名，<code>-l</code>行数，<code>-o</code>单次断点。</p>

<h4>breakpoint list</h4>

<p>查看断点。</p>

<h4>breakpoint disable/enable</h4>

<p>设置断点可用、不可用。</p>

<h4>breakpoint delete</h4>

<p>删除断点。</p>

<h4>breakpoint command add</h4>

<p>设置断点命令，可以指定<code>-o</code>单行命令，或多行命令。</p>

<h4>breakpoint command list</h4>

<p>查看断点命令。</p>

<h4>breakpoint command delete</h4>

<p>删除断点命令。</p>

<h3>watchpoint</h3>

<p>为地址设置断点。</p>

<h4>watchpoint set</h4>

<p>添加观察点，只可接受变量。</p>

<h4>watchpoint list</h4>

<p>查看观察点。</p>

<h4>breakpoint disable/enable</h4>

<p>设置观察点可用、不可用。</p>

<h4>watchpoint delete</h4>

<p>删除观察点。</p>

<h4>watchpoint command add</h4>

<p>设置观察点命令。</p>

<h4>watchpoint command list</h4>

<p>查看观察点命令。</p>

<h4>watchpoint command delete</h4>

<p>删除观察点命令。</p>

<h3>target</h3>

<p>查找地址对应代码位置。</p>

<h4>target modules lookup、image lookup</h4>

<p>查找地址对应代码位置。</p>

<h4>target stop-hook</h4>

<p>停止时执行代码。</p>

<h3>extension</h3>

<p><code>~/.lldbinit</code>中设置扩展。</p>

<h3>help</h3>

<p>查看命令帮助，如<code>help</code>，<code>apropos</code>。</p>

<h3>shortcut</h3>

<p>快捷键。<br/>
暂停/继续   cmd + ctrl + Y<br/>
断点失效/生效 cmd + Y<br/>
控制台显示/隐藏    cmd + shift + Y<br/>
光标切换到控制台    cmd + shift + C<br/>
清空控制台   cmd + K<br/>
step over   F6<br/>
step into   F7<br/>
step out    F8</p>

<h3>script</h3>

<p>执行Python脚本<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/09/03/ioszhi-shi-xiao-ji-180827/'><a href="http://sxgfxm.github.io/blog/2018/09/03/ioszhi-shi-xiao-ji-180827/">http://sxgfxm.github.io/blog/2018/09/03/ioszhi-shi-xiao-ji-180827/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180820]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/08/30/ioszhi-shi-xiao-ji-180820/"/>
    <updated>2018-08-30T10:24:16+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/08/30/ioszhi-shi-xiao-ji-180820</id>
    <content type="html"><![CDATA[<h2>获取textview光标所在位置</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">NSUInteger</span><span class="p">)</span><span class="nf">currentLocation:</span><span class="p">(</span><span class="bp">UITextView</span><span class="o">*</span><span class="p">)</span><span class="nv">textView</span><span class="p">{</span>
</span><span class='line'>  <span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="n">textView</span><span class="p">.</span><span class="n">selectionRange</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">range</span><span class="p">.</span><span class="n">location</span> <span class="o">==</span> <span class="n">NSNotFound</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">textView</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">length</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">range</span><span class="p">.</span><span class="n">location</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>超出父视图的子视图响应手势事件</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">)</span><span class="nf">hitTest:</span><span class="p">(</span><span class="bp">CGPoint</span><span class="p">)</span><span class="nv">point</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span> <span class="p">{</span>
</span><span class='line'>    <span class="bp">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="o">=</span> <span class="p">[</span><span class="nb">super</span> <span class="nl">hitTest</span><span class="p">:</span><span class="n">point</span> <span class="nl">withEvent</span><span class="p">:</span><span class="n">event</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">view</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">subView</span> <span class="k">in</span> <span class="nb">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="bp">CGPoint</span> <span class="n">tp</span> <span class="o">=</span> <span class="p">[</span><span class="n">subView</span> <span class="nl">convertPoint</span><span class="p">:</span><span class="n">point</span> <span class="nl">fromView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">CGRectContainsPoint</span><span class="p">(</span><span class="n">subView</span><span class="p">.</span><span class="n">bounds</span><span class="p">,</span> <span class="n">tp</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">view</span> <span class="o">=</span> <span class="n">subView</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">view</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">pointInside:</span><span class="p">(</span><span class="bp">CGPoint</span><span class="p">)</span><span class="nv">point</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span><span class="p">{</span>
</span><span class='line'>    <span class="c1">//if内的条件应该为，触摸点属于子视图范围</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(.....){</span>
</span><span class='line'>     <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>CALayer阴影</h2>

<p>默认<code>shadowOpacity = 0</code>，需要手动设置才能显示出来阴影。</p>

<h2>Macbook Pro触摸板突然失效</h2>

<p>键盘检测出现问题，盒盖过一会儿再打开即可。</p>

<h2>ARKit</h2>

<h3>什么是AR</h3>

<p>VR，Virtual Reality，虚拟现实，纯虚拟数字画面；<br/>
AR，Augmented Reality，现实增强，裸眼现实 + 虚拟数字画面；<br/>
MR，Mediated Reality，介导现实，数字化现实 + 虚拟数字画面；</p>

<h3>什么是ARKit</h3>

<p>ARKit 是一个移动端 AR 平台，用于在 iOS 上开发增强现实 APP；<br/>
ARKit 提供了接口简单的高级 API，有一系列强大的功能，从 iOS11 开始支持；</p>

<h3>ARKit有哪些功能</h3>

<h4>追踪</h4>

<p>世界追踪；</p>

<h4>场景理解</h4>

<p>平面识别，命中测试；</p>

<h4>渲染</h4>

<p>整合任意渲染程序；</p>

<h3>如何使用ARKit</h3>

<h4>ARSession</h4>

<p>1、管理增强现实所有处理流程的类：可带参数配置，且可以开始处理流程或暂停处理流程或切换处理流程；<br/>
2、重置追踪；<br/>
3、获取处理结果ARFrame，通过代理或者直接获取currentFrame；</p>

<h4>ARSessionConfiguration</h4>

<h4>ARFrame</h4>

<p>1、相机图像作为渲染场景背景；<br/>
2、提供设备追踪信息，如设备角度、位置、追踪状态；<br/>
3、提供场景理解，如特征点、空间物理位置及光线估算；</p>

<h4>ARAnchor</h4>

<p>空间中先对真实世界的位置和角度。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/08/30/ioszhi-shi-xiao-ji-180820/'><a href="http://sxgfxm.github.io/blog/2018/08/30/ioszhi-shi-xiao-ji-180820/">http://sxgfxm.github.io/blog/2018/08/30/ioszhi-shi-xiao-ji-180820/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180813]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/08/20/ioszhi-shi-xiao-ji-180813/"/>
    <updated>2018-08-20T11:43:27+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/08/20/ioszhi-shi-xiao-ji-180813</id>
    <content type="html"><![CDATA[<h2>动画结束后使layer保持动画后的状态</h2>

<p>需要同时设置<code>animation.removedOnCompletion = NO</code>和<code>animation.fillMode = kCAFillModeForwards</code>。</p>

<!-- more -->


<h2>UILabel增加模糊文字阴影</h2>

<p><code>UILabel</code>的<code>shadowOffset</code>和<code>shadowColor</code>可以设置无模糊效果的阴影，如果需要设置模糊效果文字阴影，需要使用<code>NSAttributedString</code>增加<code>NSShadowAttributeName</code>阴影对应的参数。下面是UILabel设置阴影的一个Category方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//  UILabel+Util.m</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setText:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">text</span> <span class="nf">lineSpacing:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">lineSpacing</span> <span class="nf">shadowColor:</span><span class="p">(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="nv">shadowColor</span><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">text</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">text</span><span class="p">.</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>  <span class="bp">NSMutableAttributedString</span> <span class="o">*</span><span class="n">attributedString</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSMutableAttributedString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithString</span><span class="p">:</span><span class="n">text</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  font</span>
</span><span class='line'>  <span class="p">[</span><span class="n">attributedString</span> <span class="nl">addAttribute</span><span class="p">:</span><span class="n">NSFontAttributeName</span> <span class="nl">value</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">font</span> <span class="nl">range</span><span class="p">:</span><span class="n">range</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  color</span>
</span><span class='line'>  <span class="p">[</span><span class="n">attributedString</span> <span class="nl">addAttribute</span><span class="p">:</span><span class="n">NSForegroundColorAttributeName</span> <span class="nl">value</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">textColor</span> <span class="nl">range</span><span class="p">:</span><span class="n">range</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  shadow</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">shadowColor</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="bp">NSShadow</span> <span class="o">*</span><span class="n">shadow</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSShadow</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>    <span class="n">shadow</span><span class="p">.</span><span class="n">shadowBlurRadius</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>    <span class="n">shadow</span><span class="p">.</span><span class="n">shadowOffset</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">shadow</span><span class="p">.</span><span class="n">shadowColor</span> <span class="o">=</span> <span class="n">shadowColor</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">attributedString</span> <span class="nl">addAttribute</span><span class="p">:</span><span class="n">NSShadowAttributeName</span> <span class="nl">value</span><span class="p">:</span><span class="n">shadow</span> <span class="nl">range</span><span class="p">:</span><span class="n">range</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//  style</span>
</span><span class='line'>  <span class="bp">NSMutableParagraphStyle</span> <span class="o">*</span><span class="n">paragraphStyle</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSMutableParagraphStyle</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">paragraphStyle</span> <span class="nl">setLineBreakMode</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">lineBreakMode</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">paragraphStyle</span> <span class="nl">setAlignment</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">textAlignment</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">lineSpacing</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">paragraphStyle</span> <span class="nl">setLineSpacing</span><span class="p">:</span><span class="n">lineSpacing</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">[</span><span class="n">attributedString</span> <span class="nl">addAttribute</span><span class="p">:</span><span class="n">NSParagraphStyleAttributeName</span>
</span><span class='line'>                           <span class="nl">value</span><span class="p">:</span><span class="n">paragraphStyle</span>
</span><span class='line'>                           <span class="nl">range</span><span class="p">:</span><span class="n">range</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  attributed string</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">attributedText</span> <span class="o">=</span> <span class="n">attributedString</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>UILabel逐行显示动画</h2>

<p>增加一个Category方法使<code>UILabel</code>文字逐行显示，需要思想是为<code>UILabel</code>增加一个渐变的maskLayer，并用动画修改渐变的位置。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//  UILabel+Util.m</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">startLineAnimationWithDuration:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">duration</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//  layout</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span> <span class="n">layoutIfNeeded</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  gradient layer</span>
</span><span class='line'>  <span class="bp">CAGradientLayer</span> <span class="o">*</span><span class="n">gradientLayer</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAGradientLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>  <span class="n">gradientLayer</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gradientLayer</span><span class="p">.</span><span class="n">locations</span> <span class="o">=</span> <span class="l">@[</span><span class="mi">@0</span><span class="p">,</span> <span class="mi">@0</span><span class="p">,</span> <span class="mi">@0</span><span class="p">,</span> <span class="mi">@1</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gradientLayer</span><span class="p">.</span><span class="n">colors</span> <span class="o">=</span> <span class="l">@[</span><span class="p">(</span><span class="k">__bridge</span> <span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">,</span>
</span><span class='line'>                           <span class="p">(</span><span class="k">__bridge</span> <span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">,</span>
</span><span class='line'>                           <span class="p">(</span><span class="k">__bridge</span> <span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">clearColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">,</span>
</span><span class='line'>                           <span class="p">(</span><span class="k">__bridge</span> <span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">clearColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">,</span>
</span><span class='line'>                           <span class="l">]</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gradientLayer</span><span class="p">.</span><span class="n">startPoint</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>  <span class="n">gradientLayer</span><span class="p">.</span><span class="n">endPoint</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//  set mask</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">mask</span> <span class="o">=</span> <span class="n">gradientLayer</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//  animate locations</span>
</span><span class='line'>  <span class="bp">CABasicAnimation</span> <span class="o">*</span><span class="n">animation</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CABasicAnimation</span> <span class="nl">animationWithKeyPath</span><span class="p">:</span><span class="s">@&quot;locations&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="n">animation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="l">@[</span><span class="mi">@0</span><span class="p">,</span> <span class="l">@(</span><span class="o">-</span><span class="mf">0.2</span><span class="l">)</span><span class="p">,</span> <span class="mi">@0</span><span class="p">,</span> <span class="mi">@1</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'>  <span class="n">animation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="l">@[</span><span class="mi">@0</span><span class="p">,</span> <span class="mi">@1</span><span class="p">,</span> <span class="mf">@1.2</span><span class="p">,</span> <span class="mi">@1</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'>  <span class="n">animation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="n">duration</span><span class="p">;</span>
</span><span class='line'>  <span class="n">animation</span><span class="p">.</span><span class="n">timingFunction</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAMediaTimingFunction</span> <span class="nl">functionWithName</span><span class="p">:</span><span class="s">@&quot;easeInEaseOut&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="n">animation</span><span class="p">.</span><span class="n">removedOnCompletion</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>  <span class="n">animation</span><span class="p">.</span><span class="n">fillMode</span> <span class="o">=</span> <span class="n">kCAFillModeForwards</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//  add animation</span>
</span><span class='line'>  <span class="p">[</span><span class="n">gradientLayer</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">animation</span> <span class="nl">forKey</span><span class="p">:</span><span class="s">@&quot;animation&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/08/20/ioszhi-shi-xiao-ji-180813/'>http://sxgfxm.github.io/blog/2018/08/20/ioszhi-shi-xiao-ji-180813/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180806]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/08/13/ioszhi-shi-xiao-ji-180813/"/>
    <updated>2018-08-13T14:46:12+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/08/13/ioszhi-shi-xiao-ji-180813</id>
    <content type="html"><![CDATA[<h2>APP灰度发布</h2>

<p>可以配置APP灰度发布。</p>

<h2>Today Extension</h2>

<h3>scroll is disabled</h3>

<p>Adding scrolls into a widget, both vertical and horizontal, is not possible. Or more precisely, adding a scroll view is possible but scrolling won’t work. Horizontal scrolling gesture in a scroll view in the Today extension will be intercepted by the notification center which will cause scrolling from Today to the Notification center. Scrolling vertically a scroll view inside a Today extension will be interrupted by scrolling the Today’s View.<br/>
<a href="https://www.toptal.com/ios/ios-8-app-extensions">A Tutorial on iOS 8 App Extensions</a></p>

<h3>数据共享</h3>

<p>需要在主工程的entitlements中添加APP groups</p>

<h3>资源共享</h3>

<p>在today extension target中 copy bundle resources</p>

<h3>高度</h3>

<p>折叠高度110，展开高度最大值限制。</p>

<h2>Can&rsquo;t add self as subview</h2>

<p>连续push两次会导致该问题。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/08/13/ioszhi-shi-xiao-ji-180813/'><a href="http://sxgfxm.github.io/blog/2018/08/13/ioszhi-shi-xiao-ji-180813/">http://sxgfxm.github.io/blog/2018/08/13/ioszhi-shi-xiao-ji-180813/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180730]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/08/06/ioszhi-shi-xiao-ji-180806/"/>
    <updated>2018-08-06T11:50:21+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/08/06/ioszhi-shi-xiao-ji-180806</id>
    <content type="html"><![CDATA[<h2>UIImpactFeedbackGenerator</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="n">UIImpactFeedbackGenerator</span> <span class="o">*</span><span class="p">)</span><span class="nf">impactFeedback</span><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_impactFeedback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">_impactFeedback</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImpactFeedbackGenerator</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithStyle</span><span class="p">:</span><span class="n">UIImpactFeedbackStyleLight</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">_impactFeedback</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">occurImpactFeedback</span><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(@</span><span class="n">available</span><span class="p">(</span><span class="n">iOS</span> <span class="mf">10.0</span><span class="p">,</span> <span class="o">*</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">impactFeedback</span> <span class="n">prepare</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">impactFeedback</span> <span class="n">impactOccurred</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>XCode屏蔽控制台多余系统信息</h2>

<p><code>Edit Scheme</code> &ndash;> <code>Arguments</code> &ndash;> <code>Environment Variables</code> &ndash;> <code>OS_ACTIVITY_MODE = disable</code></p>

<!-- more -->


<h2>NSString查找重复子串</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">NSArray</span><span class="o">&lt;</span><span class="bp">NSTextCheckingResult</span><span class="o">*&gt;*</span><span class="p">)</span><span class="nf">rangesOfString:</span><span class="p">(</span><span class="bp">NSString</span><span class="o">*</span><span class="p">)</span><span class="nv">subString</span> <span class="nf">inString:</span><span class="p">(</span><span class="bp">NSString</span><span class="o">*</span><span class="p">)</span><span class="nv">string</span><span class="p">{</span>
</span><span class='line'>  <span class="bp">NSString</span> <span class="o">*</span><span class="n">parten</span> <span class="o">=</span> <span class="n">subString</span><span class="p">;</span>
</span><span class='line'>  <span class="bp">NSError</span><span class="o">*</span> <span class="n">error</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>  <span class="bp">NSRegularExpression</span> <span class="o">*</span><span class="n">reg</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSRegularExpression</span> <span class="nl">regularExpressionWithPattern</span><span class="p">:</span><span class="n">parten</span> <span class="nl">options</span><span class="p">:</span><span class="n">NSRegularExpressionCaseInsensitive</span> <span class="nl">error</span><span class="p">:</span><span class="o">&amp;</span><span class="n">error</span><span class="p">];</span>
</span><span class='line'>  <span class="bp">NSArray</span><span class="o">&lt;</span><span class="bp">NSTextCheckingResult</span><span class="o">*&gt;*</span> <span class="n">match</span> <span class="o">=</span> <span class="p">[</span><span class="n">reg</span> <span class="nl">matchesInString</span><span class="p">:</span><span class="n">string</span> <span class="nl">options</span><span class="p">:</span><span class="n">NSMatchingReportCompletion</span> <span class="nl">range</span><span class="p">:</span><span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="n">string</span> <span class="n">length</span><span class="p">])];</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">match</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>inherit! :search_paths</h2>

<p>继承上述依赖。</p>

<h2>Today Extension</h2>

<h3>添加Today Extension Target</h3>

<p><code>Editor</code> &ndash;> <code>Add Target...</code> &ndash;> <code>Today Extension</code></p>

<h3>podfile增加target</h3>

<pre><code>  target 'CardFlow' do
    inherit! :search_paths
  end
</code></pre>

<h3>Embedded binary&rsquo;s bundle identifier is not prefixed with the parent app&rsquo;s bundle identifier</h3>

<p>修改bundle ID；<br/>
修改scheme 参数；</p>

<h3>disable bitcode</h3>

<p>在today extension的<code>Build Settings</code>中禁用<code>bitcode</code>。</p>

<h3>视图布局和展开，纯代码约束</h3>

<p>需要运行一次主APP，才能显示出来today extension；<br/>
在<code>info.plist</code>中删除NSExtensionMainStoryboard；<br/>
在<code>info.plist</code>中添加NSExtensionPrincipalClass；<br/>
添加支持展开<code>[self.extensionContext setWidgetLargestAvailableDisplayMode:NCWidgetDisplayModeExpanded];</code>并在<code>-widgetActiveDisplayModeDidChange:withMaximumSize:</code>方法中返回相应大小；<br/>
header高度固定，折叠高度固定，展开高度有最大值限制；</p>

<h3>跳转至主APP</h3>

<p>1、在主APP<code>info</code>中添加URL Scheme入“TodayExtension”，并在<code>-application:openURL:sourceApplication:annotation:</code>判断跳转信息是否来自today extension；<br/>
2、在today extension需要跳转到主APP添加<br/>
<code>[self.extensionContext openURL:[NSURL URLWithString:@"TodayExtension://"] completionHandler:nil];</code></p>

<h3>与主APP共享数据</h3>

<p>1、创建APP group，为主APP和widget的APP ID添加对应的组；<br/>
2、为主APP和widget APP添加APP group capability；<br/>
3、使用<code>NSUserDefault</code>，suiteName需和groupName一致，
<code>[[NSUserDefaults alloc] initWithSuiteName:@"group.com.mobvoi.One"]</code><br/>
4、使用<code>NSFileManager</code>，
<code>[[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:@"group.com.mobvoi.One"]</code><br/>
5、<code>[User Defaults] Couldn't read values in CFPrefsPlistSource</code>。</p>

<h3>与主APP共享文件</h3>

<p>需要再次添加compile files。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/08/06/ioszhi-shi-xiao-ji-180806/'><a href="http://sxgfxm.github.io/blog/2018/08/06/ioszhi-shi-xiao-ji-180806/">http://sxgfxm.github.io/blog/2018/08/06/ioszhi-shi-xiao-ji-180806/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180723]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/07/30/ioszhi-shi-xiao-ji-180723/"/>
    <updated>2018-07-30T11:10:55+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/07/30/ioszhi-shi-xiao-ji-180723</id>
    <content type="html"><![CDATA[<h2>UITableView Delete Cell</h2>

<p>调用<code>deleteRowsAtIndexPaths:withRowAnimation:</code>时界面出现诡异问题，删除一个cell之后无法继续删除下面的cell。<br/>
暂时解决办法是在数据源中删除对应数据后，直接<code>reloadData</code>而不再调用上述方法。</p>

<h2>UITableViewCell高亮效果</h2>

<p>重写<code>-setHighlighted:animated:</code>方法，当highlighted时改变背景颜色，非highlighted时通过动画修改回去。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setHighlighted:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">highlighted</span> <span class="nf">animated:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">animated</span><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">super</span> <span class="nl">setHighlighted</span><span class="p">:</span><span class="n">highlighted</span> <span class="nl">animated</span><span class="p">:</span><span class="n">animated</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span> <span class="nl">xg_setHighlighted</span><span class="p">:</span><span class="n">highlighted</span> <span class="nl">animated</span><span class="p">:</span><span class="n">animated</span> <span class="nl">color</span><span class="p">:[</span><span class="bp">UIColor</span> <span class="n">lightGrayColor</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">xg_setHighlighted:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">highlighted</span> <span class="nf">animated:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">animated</span> <span class="nf">color:</span><span class="p">(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="nv">highlightedColor</span><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">highlighted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">contentView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">highlightedColor</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="bp">UIView</span> <span class="nl">animateWithDuration</span><span class="p">:</span><span class="mf">0.25</span> <span class="nl">delay</span><span class="p">:</span><span class="mi">0</span> <span class="nl">options</span><span class="p">:</span><span class="n">UIViewAnimationOptionCurveEaseInOut</span> <span class="nl">animations</span><span class="p">:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>      <span class="nb">self</span><span class="p">.</span><span class="n">contentView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Attempt to present UIViewController on UIViewController whose view is not in the window hierarchy</h2>

<p><code>viewDidLoad:</code>时不能present viewController，改写为<code>viewDidAppear:</code>时进行操作。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2018/07/30/ioszhi-shi-xiao-ji-180723/'><a href="http://sxgfxm.github.io/blog/2018/07/30/ioszhi-shi-xiao-ji-180723/">http://sxgfxm.github.io/blog/2018/07/30/ioszhi-shi-xiao-ji-180723/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
</feed>
