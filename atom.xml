<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Light's Blog]]></title>
  <link href="http://sxgfxm.github.io/atom.xml" rel="self"/>
  <link href="http://sxgfxm.github.io/"/>
  <updated>2017-02-20T22:22:05+08:00</updated>
  <id>http://sxgfxm.github.io/</id>
  <author>
    <name><![CDATA[Light]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS Core Animation Advanced Techniques]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/02/20/ios-core-animation-advanced-techniques/"/>
    <updated>2017-02-20T22:10:40+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/02/20/ios-core-animation-advanced-techniques</id>
    <content type="html"><![CDATA[<h1>Introduction</h1>

<p>本文主要为<strong>iOS Core Animation Advanced Techniques</strong>的笔记。</p>

<!--more-->


<h2>CALayer和UIView</h2>

<p>1.CALayer和UIView有什么关系？<br/>
UIView是对CALayer的封装，可以处理touch事件。<br/>
UIView是通过CALayer显示的。<br/>
UIView会自动重绘，CALayer需要手动重绘。<br/>
UIView是二维的，CALayer是三维的。<br/>
UIView支持autoLayout，CALayer不支持autoLayout。<br/>
2、CALayer的特性是什么？<br/>
可以绘制阴影、圆角、彩色边框；<br/>
可以处理3D变换；<br/>
可以处理非矩形边界；<br/>
可以处理透明遮罩；<br/>
可以处理多级非线性动画。<br/>
3、什么情况下会使用CALayer？<br/>
开发跨平台应用；<br/>
与特殊图层打交道；<br/>
提高性能。<br/>
4、为什么不把CALayer和UIView合二为一，而是有两套并列的层次结构？<br/>
把绘图和事件处理分离，是为了减少重复的代码。<br/>
在Mac OS上已经有CALayer，但在iPhone和Mac的交互是有本质不同的，所以UIView来处理。</p>

<h3>Contents</h3>

<p>1、如何让UIView等比清晰显示图片的右上角？<br/>
<code>layer.contents = (__bridge id)image.CGImage;</code><br/>
<code>layer.contentsGravity = kCAGravityResizeAspect;</code><br/>
<code>layer.contentsScale = [UIScreen mainScreen].scale;</code><br/>
<code>layer.contentsRect = CGRectMake(0.5,0,0.5,0.5);</code><br/>
2、-drawRect:方法的作用是什么？空的-drawRect:方法有何影响？<br/>
UIView自定义绘图。<br/>
如果自己实现-drawRect:方法，会为view创建一个backing image。<br/>
3、如何绘制带阴影的有裁剪效果的UIView？<br/>
设置layer阴影；<br/>
通过layer代理绘图；</p>

<h3>Geometry</h3>

<p>1、center, position的区别？<br/>
center对应view；position对应layer。<br/>
两者都表示anchorPoint在父视图中的位置。<br/>
因为UIView并没有暴露anchorPoint属性，所以被称作center。<br/>
2、anchorPoint理解？<br/>
控制点。<br/>
3、frame的理解？<br/>
是否可以改变view的frame而不改变layer的frame。<br/>
frame是由bounds，position和transform计算而来的。<br/>
4、坐标转换？</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (CGPoint)convertPoint:(CGPoint)point fromLayer:(CALayer *)layer;
</span><span class='line'>- (CGPoint)convertPoint:(CGPoint)point toLayer:(CALayer *)layer;
</span><span class='line'>- (CGRect)convertRect:(CGRect)rect fromLayer:(CALayer *)layer;
</span><span class='line'>- (CGRect)convertRect:(CGRect)rect toLayer:(CALayer *)layer;</span></code></pre></td></tr></table></div></figure>


<p>5、坐标翻转</p>

<p><code>layer.geometryFlipped = YES;</code></p>

<p>6、如何在不修改layer层次结构的情况下，使下层的layer在顶层显示？<br/>
zPosition，用来改变layer的显示层次；<br/>
zAnchorPoint?<br/>
7、如何用CALayer实现touch handling？<br/>
-containsPoint:<br/>
-hitTest: 严格按照layer tree的层次结构判断，与zPosition无关。<br/>
8、如何实现CALayer的自动布局？<br/>
<code>- (void)layoutSublayersOfLayer:(CALayer *)layer;</code>，<br/>
当bounds改变或调用<code>-setNeedsLayout</code>时触发。</p>

<h3>Visual Effects</h3>

<p>1、如何实现圆角？曲率不同的圆角？</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>layer.cornerRadius = 5.0f;
</span><span class='line'>layer.maskToBounds = YES;</span></code></pre></td></tr></table></div></figure>


<p>2、如何实现彩色边框？</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>layer.borderWidth = 1;
</span><span class='line'>layer.borderColor = [UIColor redColor].CGColor;</span></code></pre></td></tr></table></div></figure>


<p>border只与bounds相关。<br/>
3、如何添加阴影？</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>layer.shadowOpacity = 1;
</span><span class='line'>layer.shadowColor = [UIColor redColor].CGColor;
</span><span class='line'>layer.shadowOffset = CGSizeMake(0,1);
</span><span class='line'>layer.shadowRadius = 5;</span></code></pre></td></tr></table></div></figure>


<p>shadow与形状有关。<br/>
如何添加maskToBounds = YES时的阴影？<br/>
两层。<br/>
如何绘制不规则阴影？<br/>
<code>layer.shadowPath = path;</code>
4、不规则裁剪，动态裁剪<br/>
<code>layer.mask = maskLayer;</code>
5、scaling filter<br/>
kCAFilterNearest，适用于无对角线，对比明显的图片，保留像素，像素图；<br/>
kCAFilterLinear，适用于复杂图片，保留轮廓；<br/>
6、group opacity<br/>
opacity作用于层次结构，0.5+0.5 = 0.75<br/>
UIViewGroupOpacity = YES，Info.plist，降低性能。<br/>
<code>layer.shouldRasterize = YES</code>，在渲染前合成一张图片，防止alpha值影响。<br/>
<code>layer.rasterizationScale = [UIScreen mainScreen].scale;</code></p>

<h3>Transform</h3>

<p>1、Affine Transforms，仿射变换<br/>
CGAffineTransform，用来表示二维旋转，缩放和变换。对一个2D点做2D变换。<br/>
它是一个3行2列的矩阵。<br/>
做运算时需要扩展。<br/>
变换前平行的线，变换后依然平行。<br/>
2、创建仿射变换</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CGAffineTransformMakeRotation(CGFloat angle);
</span><span class='line'>CGAffineTransformMakeScale(CGFloat sx, CGFloat sy);
</span><span class='line'>CGAffineTransformMakeTranslation(CGFloat tx, CGFloat ty);</span></code></pre></td></tr></table></div></figure>


<p>角度弧度转换</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#define RADIANS_TO_DEGREES(x) ((x)/M_PI*180.0)
</span><span class='line'>#define DEGREES_TO_RADIANS(x) ((x)/180.0*M_PI)</span></code></pre></td></tr></table></div></figure>


<p>3、连续变换</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CGAffineTransformRotate(CGAffineTransform t, CGFloat angle);
</span><span class='line'>CGAffineTransformScale(CGAffineTransform t, CGFloat sx, CGFloat sy);
</span><span class='line'>CGAffineTransformTranslate(CGAffineTransform t, CGFloat tx, CGFloat ty);
</span><span class='line'>或
</span><span class='line'>CGAffineTransformConcat(CGAffineTransform t1, CGAffineTransform t2);</span></code></pre></td></tr></table></div></figure>


<p>单位矩阵，CGAffineTransformIdentity。<br/>
变换顺序不同，结果不同。因为矩阵运算不符合交换律。<br/>
4、shear变换</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CGAffineTransform CGAffineTransformMakeShear(CGFloat x, CGFloat y) {
</span><span class='line'>  CGAffineTransform transform = CGAffineTransformIdentity; transform.c = -x;
</span><span class='line'>  transform.b = y;
</span><span class='line'>  return transform;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>5、3D Transform，3D变换<br/>
CATransform3D，是一个4行4列的矩阵。对一个3D点做3D变换。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CATransform3DMakeRotation(CGFloat angle, CGFloat x, CGFloat y, CGFloat z);
</span><span class='line'>CATransform3DMakeScale(CGFloat sx, CGFloat sy, CGFloat sz);
</span><span class='line'>CATransform3DMakeTranslation(Gloat tx, CGFloat ty, CGFloat tz);</span></code></pre></td></tr></table></div></figure>


<p>6、Perspective Projection，透视<br/>
矩阵中m34的值用来设置透视，值越小透视约明显，值越大透视越不明显。<br/>
7、The Vanishing Point，消失点<br/>
定义消失点为anchorPoint。<br/>
8、sublayer共享透视视角<br/>
设置sublayerTransform<br/>
9、Backfaces，<br/>
layer是两面都有的。可以设置取消。</p>

<h2>Specialized Layers</h2>

<h3>CAShapeLayer</h3>

<p>CAShapeLayer比Core Graphics效率更高，硬件加速；<br/>
CAShapeLayer节省内存空间，不会创建backing image；<br/>
CAShapeLayer不会受bounds限制，Core Graphics不行；<br/>
CAShapeLayer不会变换后不会像素化。<br/>
基本使用方法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CAShapeLayer *shapeLayer = [CAShapeLayer layer];
</span><span class='line'>shapeLayer.strokeColor = [UIColor redColor].CGColor;
</span><span class='line'>shapeLayer.fillColor = [UIColor clearColor].CGColor;
</span><span class='line'>shapeLayer.lineWidth = 5;
</span><span class='line'>shapeLayer.lineJoin = kCALineJoinRound;
</span><span class='line'>shapeLayer.lineCap = kCALineCapRound;
</span><span class='line'>shapeLayer.path = path.CGPath;</span></code></pre></td></tr></table></div></figure>


<h3>CATextLayer</h3>

<p>UILabel，通过layer代理方法使用CG绘制string。<br/>
CATextLayer，用于显示文字，特效，效率比UILabel高。<br/>
基本使用方法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//set text attributes
</span><span class='line'>textLayer.foregroundColor = [UIColor blackColor].CGColor;
</span><span class='line'>textLayer.alignmentMode = kCAAlignmentJustified;
</span><span class='line'>textLayer.wrapped = YES;
</span><span class='line'>
</span><span class='line'>//choose a font
</span><span class='line'>UIFont *font = [UIFont systemFontOfSize:15];
</span><span class='line'>
</span><span class='line'>//set layer font
</span><span class='line'>CFStringRef fontName = (__bridge CFStringRef)font.fontName;
</span><span class='line'>CGFontRef fontRef = CGFontCreateWithFontName(fontName);
</span><span class='line'>textLayer.font = fontRef;
</span><span class='line'>textLayer.fontSize = font.pointSize;
</span><span class='line'>CGFontRelease(fontRef);
</span><span class='line'>
</span><span class='line'>//text
</span><span class='line'>textLayer.string = @"Text";
</span><span class='line'>
</span><span class='line'>//scale
</span><span class='line'>textLayer.contentsScale = [UIScreen mainScreen].scale;</span></code></pre></td></tr></table></div></figure>


<p>富文本：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//create attributed string
</span><span class='line'>NSMutableAttributedString *string = nil;
</span><span class='line'>string = [[NSMutableAttributedString alloc] initWithString:text];
</span><span class='line'>
</span><span class='line'>//convert UIFont to a CTFont
</span><span class='line'>CFStringRef fontName = (__bridge CFStringRef)font.fontName; CGFloat fontSize = font.pointSize;
</span><span class='line'>CTFontRef fontRef = CTFontCreateWithName(fontName, fontSize, NULL);
</span><span class='line'>
</span><span class='line'>//set text attributes
</span><span class='line'>NSDictionary *attribs = @{
</span><span class='line'>  (__bridge id)kCTForegroundColorAttributeName:(__bridge id)[UIColor blackColor].CGColor,
</span><span class='line'>  (__bridge id)kCTFontAttributeName: (__bridge id)fontRef
</span><span class='line'>};
</span><span class='line'>[string setAttributes:attribs range:NSMakeRange(0, [text length])];
</span><span class='line'>attribs = @{
</span><span class='line'>  (__bridge id)kCTForegroundColorAttributeName: (__bridge id)[UIColor redColor].CGColor,
</span><span class='line'>  (__bridge id)kCTUnderlineStyleAttributeName: @(kCTUnderlineStyleSingle),
</span><span class='line'>  (__bridge id)kCTFontAttributeName: (__bridge id)fontRef
</span><span class='line'>};
</span><span class='line'>[string setAttributes:attribs range:NSMakeRange(6, 5)];
</span><span class='line'>
</span><span class='line'>//release the CTFont we created earlier
</span><span class='line'>CFRelease(fontRef);
</span><span class='line'>
</span><span class='line'>//set layer text
</span><span class='line'>textLayer.string = string;</span></code></pre></td></tr></table></div></figure>


<p>修改view的根layer。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+ (Class)layerClass {
</span><span class='line'>  //this makes our label create a CATextLayer
</span><span class='line'>  //instead of a regular CALayer for its backing layer
</span><span class='line'>  return [CATextLayer class];
</span><span class='line'>}
</span><span class='line'>- (CATextLayer *)textLayer {
</span><span class='line'>  return (CATextLayer *)self.layer;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>CATransformLayer</h3>

<p>保存变换后的layer</p>

<h3>CAGradientLayer</h3>

<p>用于绘制渐变层。<br/>
线性渐变。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//create gradient layer and add it to our container view
</span><span class='line'>CAGradientLayer *gradientLayer = [CAGradientLayer layer];
</span><span class='line'>gradientLayer.frame = self.containerView.bounds;
</span><span class='line'>[self.containerView.layer addSublayer:gradientLayer];
</span><span class='line'>
</span><span class='line'>//set gradient colors
</span><span class='line'>gradientLayer.colors = @[
</span><span class='line'>  (__bridge id)[UIColor redColor].CGColor,
</span><span class='line'>  (__bridge id)[UIColor blueColor].CGColor,
</span><span class='line'>  (__bridge id)[UIColor greenColor].CGColor
</span><span class='line'>];
</span><span class='line'>
</span><span class='line'>//set locations
</span><span class='line'>gradientLayer.locations = @[@0.0, @0.25, @0.5];
</span><span class='line'>
</span><span class='line'>//set gradient start and end points
</span><span class='line'>gradientLayer.startPoint = CGPointMake(0, 0);
</span><span class='line'>gradientLayer.endPoint = CGPointMake(1, 1);</span></code></pre></td></tr></table></div></figure>


<p>放射性渐变。</p>

<h3>CAReplicatorLayer</h3>

<p>用于高效绘制相似的layer。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//create a replicator layer and add it to our view
</span><span class='line'>CAReplicatorLayer *replicator = [CAReplicatorLayer layer];
</span><span class='line'>replicator.frame = self.containerView.bounds;
</span><span class='line'>[self.containerView.layer addSublayer:replicator];
</span><span class='line'>
</span><span class='line'>//configure the replicator
</span><span class='line'>replicator.instanceCount = 10;
</span><span class='line'>
</span><span class='line'>//apply a transform for each instance
</span><span class='line'>CATransform3D transform = CATransform3DIdentity;
</span><span class='line'>transform = CATransform3DTranslate(transform, 0, 200, 0);
</span><span class='line'>transform = CATransform3DRotate(transform, M_PI / 5.0, 0, 0, 1);
</span><span class='line'>transform = CATransform3DTranslate(transform, 0, -200, 0);
</span><span class='line'>replicator.instanceTransform = transform;
</span><span class='line'>
</span><span class='line'>//apply a color shift for each instance
</span><span class='line'>replicator.instanceBlueOffset = -0.1;
</span><span class='line'>replicator.instanceGreenOffset = -0.1;
</span><span class='line'>
</span><span class='line'>//create a sublayer and place it inside the replicator
</span><span class='line'>CALayer *layer = [CALayer layer];
</span><span class='line'>layer.frame = CGRectMake(100.0f, 100.0f, 100.0f, 100.0f);
</span><span class='line'>layer.backgroundColor = [UIColor whiteColor].CGColor;
</span><span class='line'>[replicator addSublayer:layer];</span></code></pre></td></tr></table></div></figure>


<p>绘制镜面</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+ (Class)layerClass {
</span><span class='line'>  return [CAReplicatorLayer class];
</span><span class='line'>}
</span><span class='line'>- (void)setUp {
</span><span class='line'>  //configure replicator
</span><span class='line'>  CAReplicatorLayer *layer = (CAReplicatorLayer *)self.layer;
</span><span class='line'>  layer.instanceCount = 2;
</span><span class='line'>
</span><span class='line'>  //move reflection instance below original and flip vertically
</span><span class='line'>  CATransform3D transform = CATransform3DIdentity;
</span><span class='line'>  CGFloat verticalOffset = self.bounds.size.height + 2;
</span><span class='line'>  transform = CATransform3DTranslate(transform, 0, verticalOffset, 0);
</span><span class='line'>  transform = CATransform3DScale(transform, 1, -1, 0);
</span><span class='line'>  layer.instanceTransform = transform;
</span><span class='line'>
</span><span class='line'>  //reduce alpha of reflection layer
</span><span class='line'>  layer.instanceAlphaOffset = -0.6;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (id)initWithFrame:(CGRect)frame {
</span><span class='line'>  //this is called when view is created in code
</span><span class='line'>  if ((self = [super initWithFrame:frame])) {
</span><span class='line'>    [self setUp];
</span><span class='line'>  }
</span><span class='line'>  return self;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>CAScrollLayer</h3>

<p>用于绘制可以滑动的layer。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+ (Class)layerClass {
</span><span class='line'>  return [CAScrollLayer class];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)setUp {
</span><span class='line'>  //enable clipping
</span><span class='line'>  self.layer.masksToBounds = YES;
</span><span class='line'>
</span><span class='line'>  //attach pan gesture recognizer
</span><span class='line'>  UIPanGestureRecognizer *recognizer = nil;
</span><span class='line'>  recognizer = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(pan:)];
</span><span class='line'>  [self addGestureRecognizer:recognizer];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (id)initWithFrame:(CGRect)frame {
</span><span class='line'>  //this is called when view is created in code
</span><span class='line'>  if ((self = [super initWithFrame:frame])) {
</span><span class='line'>    [self setUp];
</span><span class='line'>  }
</span><span class='line'>  return self;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)pan:(UIPanGestureRecognizer *)recognizer {
</span><span class='line'>  //get the offset by subtracting the pan gesture
</span><span class='line'>  //translation from the current bounds origin
</span><span class='line'>  CGPoint offset = self.bounds.origin;
</span><span class='line'>  offset.x -= [recognizer translationInView:self].x;
</span><span class='line'>  offset.y -= [recognizer translationInView:self].y;
</span><span class='line'>
</span><span class='line'>  //scroll the layer
</span><span class='line'>  [(CAScrollLayer *)self.layer scrollToPoint:offset];
</span><span class='line'>
</span><span class='line'>  //reset the pan gesture translation
</span><span class='line'>  [recognizer setTranslation:CGPointZero inView:self];
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>CATiledLayer</h3>

<p>用于加载尺寸巨大的图片。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//add the tiled layer
</span><span class='line'>CATiledLayer *tileLayer = [CATiledLayer layer];
</span><span class='line'>tileLayer.frame = CGRectMake(0, 0, 2048, 2048);
</span><span class='line'>tileLayer.delegate = self; [self.scrollView.layer addSublayer:tileLayer];
</span><span class='line'>
</span><span class='line'>//configure the scroll view
</span><span class='line'>self.scrollView.contentSize = tileLayer.frame.size;
</span><span class='line'>
</span><span class='line'>//draw layer
</span><span class='line'>[tileLayer setNeedsDisplay];
</span><span class='line'>
</span><span class='line'>- (void)drawLayer:(CATiledLayer *)layer inContext:(CGContextRef)ctx {
</span><span class='line'>  //determine tile coordinate
</span><span class='line'>  CGRect bounds = CGContextGetClipBoundingBox(ctx);
</span><span class='line'>  NSInteger x = floor(bounds.origin.x / layer.tileSize.width);
</span><span class='line'>  NSInteger y = floor(bounds.origin.y / layer.tileSize.height);
</span><span class='line'>
</span><span class='line'>  //load tile image
</span><span class='line'>  NSString *imageName = [NSString stringWithFormat: @"Snowman_%02i_%02i, x, y];
</span><span class='line'>  NSString *imagePath = [[NSBundle mainBundle] pathForResource:imageName ofType:@"jpg"];
</span><span class='line'>  UIImage *tileImage = [UIImage imageWithContentsOfFile:imagePath];
</span><span class='line'>
</span><span class='line'>  //draw tile
</span><span class='line'>  UIGraphicsPushContext(ctx);
</span><span class='line'>  [tileImage drawInRect:bounds];
</span><span class='line'>  UIGraphicsPopContext();
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>CAEmitterLayer</h3>

<p>粒子特效。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//create particle emitter layer
</span><span class='line'>CAEmitterLayer *emitter = [CAEmitterLayer layer];
</span><span class='line'>emitter.frame = self.containerView.bounds;
</span><span class='line'>[self.containerView.layer addSublayer:emitter];
</span><span class='line'>
</span><span class='line'>//configure emitter
</span><span class='line'>emitter.renderMode = kCAEmitterLayerAdditive;
</span><span class='line'>emitter.emitterPosition = CGPointMake(emitter.frame.size.width / 2.0,emitter.frame.size.height / 2.0);
</span><span class='line'>
</span><span class='line'>//create a particle template
</span><span class='line'>CAEmitterCell *cell = [[CAEmitterCell alloc] init];
</span><span class='line'>cell.contents = (__bridge id)[UIImage imageNamed:@"Spark.png"].CGImage;
</span><span class='line'>cell.birthRate = 150;
</span><span class='line'>cell.lifetime = 5.0;
</span><span class='line'>cell.color = [UIColor colorWithRed:1 green:0.5 blue:0.1 alpha:1.0].CGColor;
</span><span class='line'>cell.alphaSpeed = -0.4;
</span><span class='line'>cell.velocity = 50;
</span><span class='line'>cell.velocityRange = 50;
</span><span class='line'>cell.emissionRange = M_PI * 2.0;
</span><span class='line'>
</span><span class='line'>//add particle template to emitter
</span><span class='line'>emitter.emitterCells = @[cell];</span></code></pre></td></tr></table></div></figure>


<h3>AVPlayerLayer</h3>

<p>播放视频。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//get video URL
</span><span class='line'>NSURL *URL = [[NSBundle mainBundle] URLForResource:@"Ship" withExtension:@"mp4"];
</span><span class='line'>
</span><span class='line'>//create player and player layer
</span><span class='line'>AVPlayer *player = [AVPlayer playerWithURL:URL];
</span><span class='line'>AVPlayerLayer *playerLayer = [AVPlayerLayer playerLayerWithPlayer:player];
</span><span class='line'>
</span><span class='line'>//set player layer frame and attach it to our view
</span><span class='line'>playerLayer.frame = self.containerView.bounds;
</span><span class='line'>[self.containerView.layer addSublayer:playerLayer];
</span><span class='line'>
</span><span class='line'>//play the video
</span><span class='line'>[player play];</span></code></pre></td></tr></table></div></figure>


<h2>Implicit Animations</h2>

<p>隐式动画。改变支持动画的属性，自动生成动画。<br/>
duration -> transaction，默认为0.25秒<br/>
type -> layer action<br/>
transaction只能begin和commit。<br/>
每次runloop会执行一次transaction。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//begin a new transaction
</span><span class='line'>[CATransaction begin];
</span><span class='line'>
</span><span class='line'>//set the animation duration to 1 second
</span><span class='line'>[CATransaction setAnimationDuration:1.0];
</span><span class='line'>
</span><span class='line'>//add the spin animation on completion
</span><span class='line'>[CATransaction setCompletionBlock:^{
</span><span class='line'>  //rotate the layer 90 degrees
</span><span class='line'>  CGAffineTransform transform = self.colorLayer.affineTransform;
</span><span class='line'>  transform = CGAffineTransformRotate(transform, M_PI_2);
</span><span class='line'>  self.colorLayer.affineTransform = transform;
</span><span class='line'>}];
</span><span class='line'>
</span><span class='line'>//randomize the layer background color
</span><span class='line'>CGFloat red = arc4random() / (CGFloat)INT_MAX;
</span><span class='line'>CGFloat green = arc4random() / (CGFloat)INT_MAX;
</span><span class='line'>CGFloat blue = arc4random() / (CGFloat)INT_MAX;
</span><span class='line'>self.colorLayer.backgroundColor = [UIColor colorWithRed:red green:green blue:blue alpha:1.0].CGColor;
</span><span class='line'>
</span><span class='line'>//commit the transaction
</span><span class='line'>[CATransaction commit];
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>隐式动画流程：<br/>
-actionForLayer:forKey<br/>
actions dictionary<br/>
style dictionary<br/>
-defaultActionForKey:</p>

<p>UIView默认不开启隐式动画。<br/>
CATransition</p>

<p>修改layer属性会立即生效，但是并不会立刻显示。</p>

<p>presentation layer，记录当前layer在哪儿，同步动画和处理点击事件。<br/>
model layer，记录当前layer要去哪儿</p>

<h2>Explicit Aniamtions</h2>

<p>显式动画。</p>

<h3>Property Animations</h3>

<p>只与一个属性相关的动画。</p>

<p>CABasicAnimation : CAPropertyAnimation : CAAnimation<br/>
fromeValue<br/>
toValue<br/>
byValue</p>

<p>Animations只作用于presentation，而不作用于model。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)applyBasicAnimation:(CABasicAnimation *)animation toLayer:(CALayer *)layer{
</span><span class='line'>  //set the from value (using presentation layer if available)  
</span><span class='line'>  animation.fromValue = [layer.presentationLayer ?: layer valueForKeyPath:animation.keyPath];
</span><span class='line'>
</span><span class='line'>  //update the property in advance
</span><span class='line'>  //note: this approach will only work if toValue != nil
</span><span class='line'>  [CATransaction begin];
</span><span class='line'>  [CATransaction setDisableActions:YES];
</span><span class='line'>  [layer setValue:animation.toValue forKeyPath:animation.keyPath];
</span><span class='line'>  [CATransaction commit];
</span><span class='line'>
</span><span class='line'>  //apply animation to layer
</span><span class='line'>  [layer addAnimation:animation forKey:nil];
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>CAKeyframeAnimation : CAPropertyAnimation : CAAnimation<br/>
values<br/>
path<br/>
rotationMode = kCAAnimationRotateAuto</p>

<p>CAAnimationGroup<br/>
animations<br/>
duration</p>

<p>Transitions<br/>
CATransition : CAAnimation<br/>
type<br/>
subtype</p>

<p>视图控制器切换时使用，效果更平滑；</p>

<h3>Cancel animations</h3>

<p><code>-removeAnimationForKey: </code></p>

<h2>Layer time</h2>

<h2>Tuning for speed</h2>

<p>合理分配绘图任务至CPU和GPU。</p>

<h3>The Stages of an Animation</h3>

<p>Layout：setup layers<br/>
Display：draw backing image，call -drawRect:<br/>
Prepare：prepare send animation data to render server<br/>
Commit：package up and send over IPC<br/>
render server form render tree:<br/>
  calculate intermediate values<br/>
  render to screen<br/>
只有最后一步通过GPU处理。<br/>
开发者只能控制前两步，layout和display。</p>

<p>影响GPU绘图效率的因素：<br/>
1、过多的layer；<br/>
2、过多的半透明layer；<br/>
3、离屏绘制，如圆角、遮罩、阴影、光栅化；<br/>
4、过大的图片。</p>

<p>影响CPU绘图效率的因素：<br/>
1、复杂的layout计算；<br/>
2、view的懒加载，从数据库获取数据，从nib中加载view，加载图片；<br/>
3、Core Graphics 绘图；<br/>
4、图片解压缩；</p>

<p>IO限制因素：<br/>
IO操作耗时严重；</p>

<p>通过测量发现实际的瓶颈点：<br/>
1、在真机上测试，使用release版本，在低性能机器上测试；<br/>
2、保持稳定的帧率；<br/>
3、instrument：</p>

<pre><code>Time Profiler：查看CPU时间开销；
    Separate by Thread：按线程将方法分组；
    Hide System Libraries：隐藏系统库；
    Show Obj-C Only：只显示OC方法调用；
Core Animation：查看Core Animation性能；
    Color Blended Layers：标记出混合的图层，从绿到红表示严重程度，最好没有；
    Color Hits Green and Misses Red：标记出重复缓存的图层；
    Color Copied Images：标记出backing image，最好没有；
    Color Immediately：随时反馈；
    Color Misaligned Images：标记非正确缩放的图片；
    Color Offscreen-Rendered Yellow：标记出需要离屏绘制的layer，通过栅格化优化；
    Color OpenGL Fast Path Blue：标记出OpenGL绘图；
    Flash Updated Regions：标记出重绘的layer，最好没有；
OpenGL ES Driver：查看GPU性能；
    Tiler Utilization
    Renderer Utilization
组合使用效果更佳。
</code></pre>

<p>优化方法：<br/>
cache offscreen render layer：</p>

<pre><code>layer.shouldRasterize = YES;
layer.rasterizationScale = [UIScreen mainScreen].scale;
</code></pre>

<h2>Efficient Drawing</h2>

<h3>Software Drawing</h3>

<p>速度慢并且需要大量内存空间。<br/>
少写drawRect方法。</p>

<h3>Vector Graphics</h3>

<p>多边形；<br/>
对角线和曲线；<br/>
文字；<br/>
渐变。<br/>
使用CAShapeLayer</p>

<h3>Dirty Rectangles</h3>

<p>需要重绘的区域<br/>
调用-setNeedsDisplayInRect:方法指定重绘区域。</p>

<h3>Asynchronous Drawing</h3>

<p>在子线程绘图，将结果直接作为layer的contents。<br/>
CATiledLayer。<br/>
drawsAsynchronously属性。</p>

<h2>Image IO</h2>

<pre><code>//  通过tag防止重复创建
UIImageView *imageView = (UIImageView *)[cell viewWithTag:imageTag];
if (!imageView){
  imageView = [UIImageView alloc] init];
  [cell.contentView addSubview:imageView];
}
</code></pre>

<h3>Loading and Latency</h3>

<p>button的响应时间要保持在0.2秒以下。</p>

<h3>Threaded Loading</h3>

<p>gcd</p>

<pre><code>//  标记cell
cell.tag = indexPath.row;
imageView.image = nil;
//  异步加载图片
dispatch_aysnc(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW),0),^{
  //  加载图片
  NSInteger index = indexPath.row;
  NSString *imagePath = self.imagePaths[index];
  UIImageView *image = [UIImage imageWithContentsOfFile:imagePath];

  //  在主线程显示图片
  dispatch_async(dispatch_get_main_queue(),^{
    if (index == cell.tag){
      imageView.image = image;
    }
  });
});
</code></pre>

<h3>Deferred Decompression</h3>

<p>PNG图片大，但解压快；<br/>
JPEG图片小，但解压慢。<br/>
图片通常在需要绘制前才开始解压。<br/>
[UIImage imageWithName:imageName] 该方法载入图片后即开始解压。<br/>
layer的contents或UIImageView的image。<br/>
ImageIO.framework</p>

<pre><code>NSInteger index = indexPath.row;
NSURL *imageURL = [NSURL fileURLWithPath:self.imagePaths[index]];
NSDictionary *options = @{(__bridge id)kCGImageSourceShouldCache:@YES};
CGImageSourceRef source = CGImageSourceCreateWithURL((__bridge CFURLRef)imageURL,NULL);
CGImageRef imageRef = CGImageSourceCreateImageAtIndex(source,0,(__bridge CFDictionaryRef)options);
UIImage *image = [UIImage imageWithCGImage:imageRef];
CGImageRelease(imageRef);
CFRelease(source);
</code></pre>

<p>NSCache</p>

<h2>Layer Performance</h2>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/02/20/ios-core-animation-advanced-techniques/'>http://sxgfxm.github.io/blog/2017/02/20/ios-core-animation-advanced-techniques/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Export Music From Itunes to Local App's Sandbox on iPhone]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/02/10/export-music-from-itunes-to-local-apps-sandbox-on-iphone/"/>
    <updated>2017-02-10T15:31:20+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/02/10/export-music-from-itunes-to-local-apps-sandbox-on-iphone</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p>本文主要介绍app如何获取iTunes中音乐列表，并把iTunes中音乐文件导出至app的沙盒目录下。</p>

<!--more-->


<h2>import</h2>

<p>导入所需的头文件。</p>

<pre><code class="c">#import &lt;AVFoundation/AVAssetExportSession.h&gt;
#import &lt;MediaPlayer/MediaPlayer.h&gt;
</code></pre>

<h2>注册通知</h2>

<p>注册<strong>MPMediaLibraryDidChangeNotification</strong>通知，当iTunes音乐库文件发生变化时，做出响应。</p>

<pre><code class="c">[[NSNotificationCenter defaultCenter]
    addObserver:self
    selector:@selector(mediaLibraryDidChange:)
    name:MPMediaLibraryDidChangeNotification
    object:nil];
</code></pre>

<h2>开启通知</h2>

<p>开启<strong>MPMediaLibrary</strong>通知。</p>

<pre><code class="c">[[MPMediaLibrary defaultMediaLibrary] beginGeneratingLibraryChangeNotifications];
</code></pre>

<h2>关闭通知</h2>

<p>关闭<strong>MPMediaLibrary</strong>通知。</p>

<pre><code class="c">[[MPMediaLibrary defaultMediaLibrary] endGeneratingLibraryChangeNotifications];
</code></pre>

<h2>MPMediaQuery</h2>

<p>通过<strong>MPMediaQuery</strong>获取iTunes中音乐列表，可以自定义列表类型，调用<code>-collection</code>方法，返回对应列表的数组。数组中元素为<strong>MPMediaItemCollection</strong>类型。</p>

<pre><code class="c">//  create
MPMediaQuery *mediaQuery = [MPMediaQuery playlistQuery];
//  groupType
mediaQuery.groupingType = MPMediaGroupingAlbumArtist;
//  query
NSArray&lt;MPMediaItemCollection *&gt; *mediaCollections = [mediaQuery collections];
</code></pre>

<h2>MPMediaItem</h2>

<p>通过<strong>MPMediaItemCollection</strong>获取对应的<strong>MPMediaItem</strong>，对应多媒体文件。通过<strong>MPMediaItem</strong>获取文件相关信息。导出时需要文件地址<strong>assetURL</strong>。</p>

<pre><code class="c">NSMutableArray&lt;MPMediaItem *&gt; mediaItems = [NSMutableArray array];
for (MPMediaItemCollection *collection in mediaCollections) {
  //  mediaItem
  MPMediaItem *mediaItem = [collection representativeItem];
  //  歌曲名称
  NSString *title = [mediaItem valueForProperty:MPMediaItemPropertyTitle];
  //  演唱者
  NSString *artist = [mediaItem valueForProperty:MPMediaItemPropertyArtist];
  //  歌曲封面
  MPMediaItemArtwork *artwork = [mediaItem valueForProperty:MPMediaItemPropertyArtwork];
  //  歌曲格式
  NSString *form = self.assetURL.pathExtension;
  //  歌曲地址，本地iTunes中地址，可用于导出歌曲
  NSURL *assetURL = [mediaItem valueForProperty:MPMediaItemPropertyAssetURL];
  //  add
  [mediaItems addObject:mediaItem];
}
</code></pre>

<h2>Play</h2>

<p>获取到<strong>MPMediaItemCollection</strong>后，可以选择使用iTunes直接播放该文件。</p>

<pre><code class="c">MPMediaItemCollection *mediaItemCollection = [mediaCollections firstObject];
MPMediaItem *selectedItem = [collection representativeItem];
[[MPMusicPlayerController iPodMusicPlayer] setQueueWithItemCollection:mediaItemCollection];
[[MPMusicPlayerController iPodMusicPlayer] setNowPlayingItem:selectedItem];
[[MPMusicPlayerController iPodMusicPlayer] play];
</code></pre>

<h2>Export Music to Local Sandbox</h2>

<p>导出音乐文件至本地沙盒目录下：</p>

<p>1、获取音乐文件名（title）及input地址（<strong>assetURL</strong>）；</p>

<p>2、获取沙盒目录，并创建output地址（<strong>outputURL</strong>）；</p>

<p>3、获取<strong>AVURLAsset</strong>；</p>

<p>4、使用<strong>AVAssetExportSession</strong>导出AVURLAsset。</p>

<pre><code class="c">for (MPMediaItem *musicItem in musicItems) {
    //  获取文件名及地址
    NSString *title = [mediaItem valueForProperty:MPMediaItemPropertyTitle];
    NSURL *assetURL = [mediaItem valueForProperty:MPMediaItemPropertyAssetURL];
    if (assetURL &amp;&amp; [self validIpodLibraryURL:assetURL]) {
      //  创建 output URL，存入沙盒目录下，以文件名为标识
      NSString *pathExtension = assetURL.pathExtension;
      NSArray *paths = NSSearchPathForDirectoriesInDomains(
          NSDocumentDirectory, NSUserDomainMask, YES);
      NSString *documentsDirectory = [paths firstObject];
      NSURL *outputURL =
          [[NSURL fileURLWithPath:[documentsDirectory
                                      stringByAppendingPathComponent:title]]
              URLByAppendingPathExtension:pathExtension];
      //  保证无重复路径
      [[NSFileManager defaultManager] removeItemAtURL:outputURL error:nil];
      //  获取Asset
      NSDictionary *options = [[NSDictionary alloc] init];
      AVURLAsset *asset = [AVURLAsset URLAssetWithURL:assetURL options:options];
      if (asset) {
        //  创建export session
        AVAssetExportSession *exportSession = [[AVAssetExportSession alloc]
            initWithAsset:asset
               presetName:AVAssetExportPresetPassthrough];
        if (exportSession) {
            //  导出类型
            if ([pathExtension compare:@"m4a"] == NSOrderedSame) {
              exportSession.outputFileType = AVFileTypeAppleM4A;
            } else if ([pathExtension compare:@"wav"] == NSOrderedSame) {
              exportSession.outputFileType = AVFileTypeWAVE;
            } else if ([pathExtension compare:@"aif"] == NSOrderedSame) {
              exportSession.outputFileType = AVFileTypeAIFF;
            } else if ([pathExtension compare:@"m4v"] == NSOrderedSame) {
              exportSession.outputFileType = AVFileTypeAppleM4V;
            }
            //  导出地址
            exportSession.outputURL = outputURL;
            //  导出
            [exportSession exportAsynchronouslyWithCompletionHandler:^{
              //  状态回调
              if (completion) {
                switch (exportSession.status) {
                case AVAssetExportSessionStatusFailed:
                  NSLog(@"Failed");
                  break;
                case AVAssetExportSessionStatusCancelled:
                  NSLog(@"Cancelled");
                  break;
                case AVAssetExportSessionStatusCompleted:
                  NSLog(@"Completed");
                  break;
                default:
                  break;
                }
              }
            }];
        }
      }
    }
  }
</code></pre>

<pre><code class="c">- (BOOL)validIpodLibraryURL:(NSURL *)url {
  NSString *IPOD_SCHEME = @"ipod-library";
  if (nil == url)
    return NO;
  if (nil == url.scheme)
    return NO;
  if ([url.scheme compare:IPOD_SCHEME] != NSOrderedSame)
    return NO;
  if ([url.pathExtension compare:@"aif"] != NSOrderedSame &amp;&amp;
      [url.pathExtension compare:@"m4a"] != NSOrderedSame &amp;&amp;
      [url.pathExtension compare:@"wav"] != NSOrderedSame &amp;&amp;
      [url.pathExtension compare:@"m4v"] != NSOrderedSame) {
    return NO;
  }
  return YES;
}
</code></pre>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/02/10/export-music-from-itunes-to-local-apps-sandbox-on-iphone/'>http://sxgfxm.github.io/blog/2017/02/10/export-music-from-itunes-to-local-apps-sandbox-on-iphone/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Core Data Tutorial iOS 10]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/01/23/core-data-tutorial-ios-10/"/>
    <updated>2017-01-23T16:40:01+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/01/23/core-data-tutorial-ios-10</id>
    <content type="html"><![CDATA[<p>iOS 10 CoreData使用总结。</p>

<!--more-->


<h2>Include Core Data</h2>

<p>创建工程时选择包含CoreData，系统会自动生成相关文件。</p>

<h2>Add Entity</h2>

<p>在xcdatamodeld文件中，添加Entity。<br/>
Entity相当于表，其中Attributes相当于表中的记录，对应需要存储的数据。</p>

<h2>Create NSManagedObject Subclass</h2>

<p>创建Entity对应的model。<br/>
在Xcode8中，创建方式为Editor ———— Create NSManagedObject Subclass。<br/>
注意，创建之前需要将数据库的Codegen设置为Manual/None，否则会报duplicate错误。</p>

<h2>Get NSPersistentContainer Object</h2>

<p>iOS 10 对Core Data做了很大的优化和改进，大大简化了Core Data的使用。<br/>
NSPersistentContainer是新添加的类，从此大部分情况下无需再和NSManagedObjectContext、NSPersistentStoreCoordinator打交道。<br/>
获取NSPersistentContainer</p>

<pre><code class="objective-c">#import 'AppDelegate.h'

@interface ViewController ()

@property(nonatomic, strong) NSPersistentContainer *container;

@end

@implementation ViewController

-(void)viewDidLoad{
  [super viewDidLoad];
  self.container = ((AppDelegate *)[UIApplication sharedApplication].delegate).persistentContainer;
}

@end
</code></pre>

<h2>Add Record</h2>

<p>导入通过系统创建的Create NSManagedObject Subclass，通过NSEntityDescription增添记录。</p>

<pre><code class="objective-c">#import "People+CoreDataProperties.h"

#define kEntityName @"People"

-(void)addRecord{
  People *people = [NSEntityDescription insertNewObjectForEntityForName:kEntityName inManagedObjectContext:self.container.viewContext];
  people.name = @"Tom";
  people.sex = YES;
  people.age = 23;
}
</code></pre>

<h2>Fetch Record</h2>

<p>通过NSFetchRequest查询记录。</p>

<pre><code class="objective-c">-(void)fetchRecord{
  NSFetchRequest *fetchRequest = [NSFetchRequest fetchRequestWithEntityName:kEntityName];
  NSArray&lt;People *&gt; *results = [self.container.viewContext executeFetchRequest:fetchRequest error:nil];
  for (People *people in results) {
    NSLog(@"name %@", people.name);
    NSLog(@"sex  %@", people.sex);
    NSLog(@"age  %@", people.age);
  }
}
</code></pre>

<h2>Update Record</h2>

<p>先fetch需要修改的记录，然后直接修改即可。</p>

<pre><code class="objective-c">-(void)updateRecord{
  NSFetchRequest *fetchRequest = [NSFetchRequest fetchRequestWithEntityName:kEntityName];
  NSPredicate *predicate = [NSPredicate predicateWithFormat:@"name == %@", @"Tom"];
  fetchRequest.predicate = predicate;
  NSArray&lt;People *&gt; *results = [self.container.viewContext executeFetchRequest:fetchRequest error:nil];
  for (People *people in results) {
    people.name = @"Lily";
  }
}
</code></pre>

<h2>Delete Record</h2>

<p>先fetch需要删除的记录，然后通过NSManagedObjectContext删除即可。</p>

<pre><code class="objective-c">-(void)deleteRecord{
  NSFetchRequest *fetchRequest = [NSFetchRequest fetchRequestWithEntityName:kEntityName];
  NSPredicate *predicate = [NSPredicate predicateWithFormat:@"name == %@", @"Lily"];
  fetchRequest.predicate = predicate;
  NSArray&lt;People *&gt; *results = [self.container.viewContext executeFetchRequest:fetchRequest error:nil];
  for (People *people in results) {
    [self.container.viewContext deleteObject:people];
  }
}
</code></pre>

<h2>GitHub源码</h2>

<p><a href="https://github.com/sxgfxm/CoreDataDemo">CoreDataDemo</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/01/23/core-data-tutorial-ios-10/'>http://sxgfxm.github.io/blog/2017/01/23/core-data-tutorial-ios-10/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prevent Duplicate Clicks]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/01/17/prevent-duplicate-clicks/"/>
    <updated>2017-01-17T16:19:36+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/01/17/prevent-duplicate-clicks</id>
    <content type="html"><![CDATA[<p>在应用开发过程中，点击事件为耗时操作或者延时响应，例如请求服务器数据，push至下一个界面，如果不处理用户重复点击事件，将会重复触发事件。下面介绍几种简单的处理方法。</p>

<!--more-->


<h2>Button</h2>

<p>点击后button状态置为disabled；
操作完成后button状态置为enabled；</p>

<h2>View</h2>

<p>根据处理状态设置userInteractiveEnable。</p>

<h2>Push</h2>

<p>方法一：
    点击后button状态置为disabled；
    viewDidDisappear置为enabled；</p>

<p>方法二：在push前添加判断：如果和上一个视图控制器一样，隔绝此次操作。</p>

<pre><code class="objective-c">if ([self.navigationController.topViewController isKindOfClass:[MyViewController class]]) {
    return;
}
</code></pre>

<h2>时间监听类</h2>

<p>用一个静态变量记录上一次点击的时间，每次点击check时间间隔是否达到要求。</p>

<h2>Runtime</h2>

<p>使用Runtime监听点击事件，忽略重复点击。
添加一个eventTimeInterval属性，使其规定时间内只能响应一次点击事件。</p>

<p>参考<a href="http://www.cnblogs.com/wanxudong/p/5984941.html">iOS防止重复点击button</a></p>

<p>.h</p>

<pre><code>#import &lt;UIKit/UIKit.h&gt;

@interface UIButton (WXD)

/**
*  为按钮添加点击间隔 eventTimeInterval秒
*/
@property (nonatomic, assign) NSTimeInterval eventTimeInterval;

@end
</code></pre>

<p>.m</p>

<pre><code class="objective-c">#import "UIButton+WXD.h"
#import &lt;objc/runtime.h&gt;
#define defaultInterval 1  //默认时间间隔

@interface UIButton ()

/**
*  bool YES 忽略点击事件   NO 允许点击事件
*/
@property (nonatomic, assign) BOOL isIgnoreEvent;

@end

@implementation UIButton (WXD)

static const char *UIControl_eventTimeInterval = "UIControl_eventTimeInterval";
static const char *UIControl_enventIsIgnoreEvent = "UIControl_enventIsIgnoreEvent";


// runtime 动态绑定 属性
- (void)setIsIgnoreEvent:(BOOL)isIgnoreEvent
{
    objc_setAssociatedObject(self, UIControl_enventIsIgnoreEvent, @(isIgnoreEvent), OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}
- (BOOL)isIgnoreEvent{
    return [objc_getAssociatedObject(self, UIControl_enventIsIgnoreEvent) boolValue];
}

- (NSTimeInterval)eventTimeInterval
{
  return [objc_getAssociatedObject(self, UIControl_eventTimeInterval) doubleValue];
}

- (void)setEventTimeInterval:(NSTimeInterval)eventTimeInterval
{
 objc_setAssociatedObject(self, UIControl_eventTimeInterval, @(eventTimeInterval), OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

+ (void)load
{
  // Method Swizzling
 static dispatch_once_t onceToken;
 dispatch_once(&amp;onceToken, ^{
       SEL selA = @selector(sendAction:to:forEvent:);
       SEL selB = @selector(_wxd_sendAction:to:forEvent:);
       Method methodA = class_getInstanceMethod(self,selA);
       Method methodB = class_getInstanceMethod(self, selB);

       BOOL isAdd = class_addMethod(self, selA, method_getImplementation(methodB), method_getTypeEncoding(methodB));

       if (isAdd) {
           class_replaceMethod(self, selB, method_getImplementation(methodA), method_getTypeEncoding(methodA));
       }else{
           //添加失败了 说明本类中有methodB的实现，此时只需要将methodA和methodB的IMP互换一下即可。
          method_exchangeImplementations(methodA, methodB);
      }
 });
}

- (void)_wxd_sendAction:(SEL)action to:(id)target forEvent:(UIEvent *)event
{
  self.eventTimeInterval = self.eventTimeInterval == 0 ? defaultInterval : self.eventTimeInterval;
  if (self.isIgnoreEvent){
      return;
  }else if (self.eventTimeInterval &gt; 0){
      dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(self.eventTimeInterval * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
       [self setIsIgnoreEvent:NO];
       });
  }

  self.isIgnoreEvent = YES;
  // 这里看上去会陷入递归调用死循环，但在运行期此方法是和sendAction:to:forEvent:互换的，相当于执行sendAction:to:forEvent:方法，所以并不会陷入死循环。
  [self _wxd_sendAction:action to:target forEvent:event];
}  
</code></pre>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/01/17/prevent-duplicate-clicks/'>http://sxgfxm.github.io/blog/2017/01/17/prevent-duplicate-clicks/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Smooth Gradient Polyline]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/27/smooth-gradient-polyline/"/>
    <updated>2016-10-27T15:47:23+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/27/smooth-gradient-polyline</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p>近年来，人们越来越注重运动锻炼，运动相关App层出不穷。其中运动路径追踪是一个重要的功能点。可以很容易的使用<strong>MKPolyline</strong>实现单色路径追踪。更进一步，如果想通过路径的不同颜色反映出运动过程中的速度变化，如<strong>Nike+</strong>类似的效果，需要更多的工作。本文主要讨论如何绘制<strong>平滑渐变</strong>的运动路径。</p>

<!-- more -->


<p><img src="http://ofj92itlz.bkt.clouddn.com/GradientPolyline:nike+.jpeg" alt="" /></p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/GradientPolyline:ditongfilter.jpeg" alt="" /></p>

<p>上图为优化后的渐变色路径，图下方红色曲线为运动过程的速度曲线。</p>

<h2>主要流程</h2>

<ol>
<li>获取运动过程中GPS信息及对应的速度值；</li>
<li>使用<strong>低通滤波</strong>处理速度数据；</li>
<li>通过<strong>MKMapView</strong>转换坐标至对应大小的UIView；</li>
<li>使用<strong>CAGradientLayer</strong>及<strong>CAShaperLayer</strong>分段绘制渐变路径；</li>
</ol>


<h2>获取运动过程中GPS信息及对应的速度值</h2>

<p>可以使用<strong>CoreLocation</strong>获取GPS信息并计算对应的速度值。关于GPS坐标在中国大陆偏移及GPS坐标是否在中国大陆的判断方法，请参考<a href="https://sxgfxm.github.io/blog/2016/10/19/iospan-duan-gpszuo-biao-shi-fou-zai-zhong-guo/">另一篇博文</a>。本文着重探讨路径的绘制，所以模拟产生随机的GPS和速度数据。</p>

<h2>使用<strong>低通滤波</strong>处理速度数据</h2>

<p>因为所绘路径的颜色不同，所以只能分段绘制。</p>

<p>如果各分段为纯色，则绘制出的路径略显生硬，无法体现出过渡效果（如下图）。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/GradientPolyline:pure.jpeg" alt="" /></p>

<p>如果根据速度直接绘制成渐变色，因为速度波动的原因，渐变效果并不理想（如下图）。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/GradientPolyline:Gradient.jpeg" alt="" /></p>

<p>所以需要预先处理速度数据，使速度数据变得平滑，渐变的效果才好。本人分别使用了<strong>滑动窗口滤波</strong>和<strong>低通滤波</strong>，对比之下，<strong>低通滤波</strong>表现更好。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/GradientPolyline:origin.jpeg" alt="" /></p>

<p>上图为原数据效果。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/GradientPolyline:smoothwindow.jpeg" alt="" /></p>

<p>上图为滑动窗口平滑效果。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/GradientPolyline:ditongfilter.jpeg" alt="" /></p>

<p>上图为低通滤波平滑效果，滤波参数可以根据需要调整。</p>

<h2>通过<strong>MKMapView</strong>转换坐标至对应大小的UIView</h2>

<p>首先需要说明的是，本文的方法将路径绘制在与MKMapView大小一致的UIView上，而非直接以MKOverlay的形式绘制在MKMapView上，所以只能看到路径大致的轮廓而不能像地图一样缩放。如果想要在地图上直接绘制渐变路径，需要自定义<strong>MKOverlayPathRenderer</strong>，如有需要我再放出来。</p>

<p>坐标转换方法，调用MKMapView的<code>convertCoordinate:toPointToView:</code>方法，即可把地图上的GPS坐标，转换为与地图大小相同的CGPoint，为绘制路径做准备。</p>

<h2>使用<strong>CAGradientLayer</strong>及<strong>CAShaperLayer</strong>分段绘制渐变路径</h2>

<h3>在<strong>CAGradientLayer</strong>上绘制对应的渐变颜色；</h3>

<p>1、渐变方向需要根据路径方向计算；</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">gradientLayer</span><span class="p">.</span><span class="n">startPoint</span> <span class="o">=</span>
</span><span class='line'>        <span class="n">CGPointMake</span><span class="p">(</span><span class="n">lastPoint</span><span class="p">.</span><span class="n">x</span> <span class="o">/</span> <span class="n">gradientView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">lastPoint</span><span class="p">.</span><span class="n">y</span> <span class="o">/</span> <span class="n">gradientView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'><span class="n">gradientLayer</span><span class="p">.</span><span class="n">endPoint</span> <span class="o">=</span>
</span><span class='line'>        <span class="n">CGPointMake</span><span class="p">(</span><span class="n">newPoint</span><span class="p">.</span><span class="n">x</span> <span class="o">/</span> <span class="n">gradientView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">newPoint</span><span class="p">.</span><span class="n">y</span> <span class="o">/</span> <span class="n">gradientView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>2、渐变颜色为路径两端速度值映射后的颜色，推荐使用HSB颜色值映射；</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">CGFloat</span> <span class="n">hue</span> <span class="o">=</span> <span class="n">points</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">speed</span> <span class="o">/</span> <span class="nb">self</span><span class="p">.</span><span class="n">maxSpeed</span> <span class="o">*</span> <span class="nb">self</span><span class="p">.</span><span class="n">maxHue</span><span class="p">;</span>
</span><span class='line'><span class="bp">UIColor</span> <span class="o">*</span><span class="n">newColor</span> <span class="o">=</span>
</span><span class='line'>        <span class="p">[</span><span class="bp">UIColor</span> <span class="nl">colorWithHue</span><span class="p">:</span><span class="n">hue</span> <span class="nl">saturation</span><span class="p">:</span><span class="mi">1</span> <span class="nl">brightness</span><span class="p">:</span><span class="mi">1</span> <span class="nl">alpha</span><span class="p">:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="n">gradientLayer</span><span class="p">.</span><span class="n">colors</span> <span class="o">=</span>
</span><span class='line'>        <span class="l">@[</span> <span class="p">(</span><span class="k">__bridge</span> <span class="kt">id</span><span class="p">)(</span><span class="n">lastColor</span><span class="p">.</span><span class="bp">CGColor</span><span class="p">),</span> <span class="p">(</span><span class="k">__bridge</span> <span class="kt">id</span><span class="p">)(</span><span class="n">newColor</span><span class="p">.</span><span class="bp">CGColor</span><span class="p">)</span> <span class="l">]</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3、渐变起止可按需要自行控制；</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">gradientLayer</span><span class="p">.</span><span class="n">locations</span> <span class="o">=</span> <span class="l">@[</span> <span class="l">@(</span><span class="mf">0.2</span><span class="l">)</span><span class="p">,</span> <span class="l">@(</span><span class="mf">0.8</span><span class="l">)</span> <span class="l">]</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>在<strong>CAShapeLayer</strong>上绘制对应的路径；</h3>

<p>1、路径的起止坐标为转换后的CGPoint；</p>

<p>2、注意设置<code>shapeLayer.lineCap = kCALineCapRound;</code>，否则路径会断；</p>

<p>3、注意<code>shapeLayer.strokeColor</code>不能为透明色，否则无法mask；</p>

<h3>设置<code>gradientLayer.mask = shapeLayer</code>；</h3>

<h2>总结</h2>

<p>绘制平滑渐变路径的关键在于速度数据的处理，大家可以尝试不同的滤波算法改进绘制效果。绘制路径的技巧也在文中列出，如有问题可以和我交流，大家共同探讨学习。</p>

<h2>Github源码</h2>

<p><a href="https://github.com/sxgfxm/SmoothGradientPolyline">SmoothGradientPolyline</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/27/smooth-gradient-polyline/'>http://sxgfxm.github.io/blog/2016/10/27/smooth-gradient-polyline/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XGChart_README]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/25/xgchart-readme/"/>
    <updated>2016-10-25T19:52:46+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/25/xgchart-readme</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p><a href="https://github.com/sxgfxm/XGChart">XGChart</a>是一个简洁的iOS 图表库，可以快速集成自定义折线图，曲线图和条形图。</p>

<!-- more -->


<h2>Install</h2>

<p>首先，下载<strong>XGChart</strong>，将<strong>XGChart</strong>文件夹拖入工程。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/XGChart:import2.jpeg" alt="import" /></p>

<p>然后，导入<strong>XGChart.h</strong>头文件，配置参数，创建即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;XGChart.h&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="c1">//  configuration</span>
</span><span class='line'>  <span class="n">XGChartConfiguration</span> <span class="o">*</span><span class="n">configuration</span> <span class="o">=</span> <span class="p">[[</span><span class="n">XGChartConfiguration</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">chartType</span> <span class="o">=</span> <span class="n">XGChartTypeLineChart</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">paddingTop</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">paddingLeft</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">paddingBottom</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">paddingRight</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">xGridCount</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">yGridCount</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">gridColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">grayColor</span><span class="p">];</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">xAxisLabelColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">];</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">xAxisLabelFontSize</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">yAxisLabelColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">];</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">yAxisLabelFontSize</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
</span><span class='line'>  <span class="bp">NSMutableArray</span><span class="o">&lt;</span><span class="n">XGChartPoint</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="n">chartPoints</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSMutableArray</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">31</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">XGChartPoint</span> <span class="o">*</span><span class="n">point</span> <span class="o">=</span>
</span><span class='line'>        <span class="p">[[</span><span class="n">XGChartPoint</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithX</span><span class="p">:</span><span class="n">i</span> <span class="nl">andY</span><span class="p">:</span><span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">100</span><span class="p">)];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">chartPoints</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">point</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">chartPoints</span> <span class="o">=</span> <span class="n">chartPoints</span><span class="p">;</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">strokeColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">];</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">fillColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">];</span>
</span><span class='line'>  <span class="n">configuration</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//  line chart</span>
</span><span class='line'>  <span class="n">XGChart</span> <span class="o">*</span><span class="n">lineChart</span> <span class="o">=</span> <span class="p">[[</span><span class="n">XGChart</span> <span class="n">alloc</span><span class="p">]</span>
</span><span class='line'>      <span class="nl">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span>
</span><span class='line'>                               <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">-</span> <span class="mi">64</span><span class="p">)</span> <span class="o">/</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>      <span class="nl">configuration</span><span class="p">:</span><span class="n">configuration</span><span class="p">];</span>
</span><span class='line'>  <span class="n">lineChart</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">blackColor</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">lineChart</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Result</h2>

<p><img src="http://ofj92itlz.bkt.clouddn.com/XGChart:result2.png" alt="" /></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/25/xgchart-readme/'>http://sxgfxm.github.io/blog/2016/10/25/xgchart-readme/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ShareSDK接入]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/21/sharesdkjie-ru/"/>
    <updated>2016-10-21T14:12:36+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/21/sharesdkjie-ru</id>
    <content type="html"><![CDATA[<h2>iOS接入ShareSDK实现第三方分享</h2>

<p>因为<strong>友盟</strong>被阿里收购在Android平台的各种令人不悦的后台操作，改用<strong>ShareSDK</strong>实现第三方分享。以下为简单接入流程。详情可参考官方文档<a href="http://wiki.mob.com/ios%E7%AE%80%E6%B4%81%E7%89%88%E5%BF%AB%E9%80%9F%E9%9B%86%E6%88%90/">http://wiki.mob.com/ios%E7%AE%80%E6%B4%81%E7%89%88%E5%BF%AB%E9%80%9F%E9%9B%86%E6%88%90/</a></p>

<!--more-->


<h2>获取AppKey</h2>

<p>在官网注册，并按要求创建应用，获取AppKey，比如为<strong>182947e7afac0</strong>。</p>

<h2>下载所需版本的ShareSDK</h2>

<p>解压后，将<strong>ShareSDK</strong>导入工程中，记得勾选<strong>Copy items into destination group&rsquo;s folder(if needed)</strong>。</p>

<h2>添加依赖库</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//   ShareSDK
</span><span class='line'>libicucore.dylib
</span><span class='line'>libz.dylib
</span><span class='line'>libstdc++.dylib
</span><span class='line'>JavaScriptCore.framework
</span><span class='line'>
</span><span class='line'>//    新浪微博SDK
</span><span class='line'>ImageIO.framework
</span><span class='line'>libsqlite3.dylib
</span><span class='line'>
</span><span class='line'>//    QQ空间SDK
</span><span class='line'>libsqlite3.dylib
</span><span class='line'>
</span><span class='line'>//    微信SDK
</span><span class='line'>libsqlite3.dylib
</span><span class='line'>
</span><span class='line'>//    根据需要添加</span></code></pre></td></tr></table></div></figure>


<h2>初始化对应的第三方平台</h2>

<p>在<strong>AppDelegate.m</strong>中，导入所需头文件。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;ShareSDK/ShareSDK.h&gt;</span>
</span><span class='line'><span class="cp">#import &lt;ShareSDKConnector/ShareSDKConnector.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//腾讯开放平台（对应QQ和QQ空间）SDK头文件</span>
</span><span class='line'><span class="cp">#import &lt;TencentOpenAPI/TencentOAuth.h&gt;</span>
</span><span class='line'><span class="cp">#import &lt;TencentOpenAPI/QQApiInterface.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//微信SDK头文件</span>
</span><span class='line'><span class="cp">#import &quot;WXApi.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//新浪微博SDK头文件</span>
</span><span class='line'><span class="cp">#import &quot;WeiboSDK.h&quot;</span>
</span><span class='line'><span class="c1">//新浪微博SDK需要在项目Build Settings中的Other Linker Flags添加&quot;-ObjC&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在<code>application:didFinishLaunchingWithOptions:</code>方法中初始化。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">application:</span><span class="p">(</span><span class="bp">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="nv">application</span>
</span><span class='line'>    <span class="nf">didFinishLaunchingWithOptions:</span><span class="p">(</span><span class="bp">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">launchOptions</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   *  设置ShareSDK的appKey，如果尚未在ShareSDK官网注册过App，请移步到http://mob.com/login</span>
</span><span class='line'><span class="cm">   * 登录后台进行应用注册</span>
</span><span class='line'><span class="cm">   *  在将生成的AppKey传入到此方法中。</span>
</span><span class='line'><span class="cm">   *  方法中的第二个第三个参数为需要连接社交平台SDK时触发，</span>
</span><span class='line'><span class="cm">   *  在此事件中写入连接代码。第四个参数则为配置本地社交平台时触发，根据返回的平台类型来配置平台信息。</span>
</span><span class='line'><span class="cm">   *  如果您使用的时服务端托管平台信息时，第二、四项参数可以传入nil，第三项参数则根据服务端托管平台来决定要连接的社交SDK。</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="p">[</span><span class="n">ShareSDK</span> <span class="nl">registerApp</span><span class="p">:</span><span class="s">@&quot;182947e7afac0&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nl">activePlatforms</span><span class="p">:</span><span class="l">@[</span>
</span><span class='line'>        <span class="l">@(</span><span class="n">SSDKPlatformTypeSinaWeibo</span><span class="l">)</span><span class="p">,</span>
</span><span class='line'>        <span class="l">@(</span><span class="n">SSDKPlatformTypeWechat</span><span class="l">)</span><span class="p">,</span>
</span><span class='line'>        <span class="l">@(</span><span class="n">SSDKPlatformTypeQQ</span><span class="l">)</span><span class="p">,</span>
</span><span class='line'>      <span class="l">]</span>
</span><span class='line'>      <span class="nl">onImport</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">SSDKPlatformType</span> <span class="n">platformType</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">platformType</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">SSDKPlatformTypeWechat</span><span class="p">:</span>
</span><span class='line'>          <span class="p">[</span><span class="n">ShareSDKConnector</span> <span class="nl">connectWeChat</span><span class="p">:[</span><span class="n">WXApi</span> <span class="k">class</span><span class="p">]];</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">SSDKPlatformTypeQQ</span><span class="p">:</span>
</span><span class='line'>          <span class="p">[</span><span class="n">ShareSDKConnector</span> <span class="nl">connectQQ</span><span class="p">:[</span><span class="n">QQApiInterface</span> <span class="k">class</span><span class="p">]</span>
</span><span class='line'>                     <span class="nl">tencentOAuthClass</span><span class="p">:[</span><span class="n">TencentOAuth</span> <span class="k">class</span><span class="p">]];</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">SSDKPlatformTypeSinaWeibo</span><span class="p">:</span>
</span><span class='line'>          <span class="p">[</span><span class="n">ShareSDKConnector</span> <span class="nl">connectWeibo</span><span class="p">:[</span><span class="n">WeiboSDK</span> <span class="k">class</span><span class="p">]];</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">default</span><span class="o">:</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nl">onConfiguration</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">SSDKPlatformType</span> <span class="n">platformType</span><span class="p">,</span>
</span><span class='line'>                        <span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">appInfo</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">platformType</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">SSDKPlatformTypeSinaWeibo</span><span class="p">:</span>
</span><span class='line'>          <span class="c1">//设置新浪微博应用信息,其中authType设置为使用SSO＋Web形式授权</span>
</span><span class='line'>          <span class="p">[</span><span class="n">appInfo</span>
</span><span class='line'>              <span class="nl">SSDKSetupSinaWeiboByAppKey</span><span class="p">:</span><span class="s">@&quot;3144028685&quot;</span>
</span><span class='line'>                               <span class="nl">appSecret</span><span class="p">:</span><span class="s">@&quot;11abfe456bc8eefbab49fe7bbcd90bf0&quot;</span>
</span><span class='line'>                             <span class="nl">redirectUri</span><span class="p">:</span><span class="s">@&quot;http://www.sharesdk.cn&quot;</span>
</span><span class='line'>                                <span class="nl">authType</span><span class="p">:</span><span class="n">SSDKAuthTypeBoth</span><span class="p">];</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">SSDKPlatformTypeWechat</span><span class="p">:</span>
</span><span class='line'>          <span class="p">[</span><span class="n">appInfo</span> <span class="nl">SSDKSetupWeChatByAppId</span><span class="p">:</span><span class="s">@&quot;wx4868b35061f87885&quot;</span>
</span><span class='line'>                                <span class="nl">appSecret</span><span class="p">:</span><span class="s">@&quot;64020361b8ec4c99936c0e3999a9f249&quot;</span><span class="p">];</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">SSDKPlatformTypeQQ</span><span class="p">:</span>
</span><span class='line'>          <span class="p">[</span><span class="n">appInfo</span> <span class="nl">SSDKSetupQQByAppId</span><span class="p">:</span><span class="s">@&quot;100371282&quot;</span>
</span><span class='line'>                               <span class="nl">appKey</span><span class="p">:</span><span class="s">@&quot;aed9b0303e3ed1e27bae87c33761161d&quot;</span>
</span><span class='line'>                             <span class="nl">authType</span><span class="p">:</span><span class="n">SSDKAuthTypeBoth</span><span class="p">];</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">default</span><span class="o">:</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}];</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接入不同的平台均需要注册并获取<strong>AppKey</strong>和<strong>AppSecret</strong>值。</p>

<h2>添加分享实现代码</h2>

<p>在<strong>ViewController.m</strong>中触发分享的方法中，添加分享代码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">shareAction</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">tf</span> <span class="nl">endEditing</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">// 1、创建分享参数</span>
</span><span class='line'>  <span class="bp">NSArray</span> <span class="o">*</span><span class="n">imageArray</span> <span class="o">=</span> <span class="l">@[</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;junxi5.jpg&quot;</span><span class="p">]</span> <span class="l">]</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">imageArray</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">shareParams</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableDictionary</span> <span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">shareParams</span> <span class="nl">SSDKSetupShareParamsByText</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">tf</span><span class="p">.</span><span class="n">text</span>
</span><span class='line'>                                     <span class="nl">images</span><span class="p">:</span><span class="n">imageArray</span>
</span><span class='line'>                                        <span class="nl">url</span><span class="p">:</span><span class="nb">nil</span>
</span><span class='line'>                                      <span class="nl">title</span><span class="p">:</span><span class="s">@&quot;Ticwatch Sport&quot;</span>
</span><span class='line'>                                       <span class="nl">type</span><span class="p">:</span><span class="n">SSDKContentTypeAuto</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 2、分享（可以弹出我们的分享菜单和编辑界面）</span>
</span><span class='line'>    <span class="p">[</span><span class="n">ShareSDK</span> <span class="nl">showShareActionSheet</span><span class="p">:</span><span class="nb">nil</span>
</span><span class='line'>                             <span class="nl">items</span><span class="p">:</span><span class="nb">nil</span>
</span><span class='line'>                       <span class="nl">shareParams</span><span class="p">:</span><span class="n">shareParams</span>
</span><span class='line'>               <span class="nl">onShareStateChanged</span><span class="p">:</span><span class="o">^</span><span class="p">(</span>
</span><span class='line'>                   <span class="n">SSDKResponseState</span> <span class="n">state</span><span class="p">,</span> <span class="n">SSDKPlatformType</span> <span class="n">platformType</span><span class="p">,</span>
</span><span class='line'>                   <span class="bp">NSDictionary</span> <span class="o">*</span><span class="n">userData</span><span class="p">,</span> <span class="n">SSDKContentEntity</span> <span class="o">*</span><span class="n">contentEntity</span><span class="p">,</span>
</span><span class='line'>                   <span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="n">end</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>                 <span class="k">switch</span> <span class="p">(</span><span class="n">state</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                 <span class="k">case</span> <span class="nl">SSDKResponseStateSuccess</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                   <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;分享成功&quot;</span><span class="p">);</span>
</span><span class='line'>                   <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                 <span class="p">}</span>
</span><span class='line'>                 <span class="k">case</span> <span class="nl">SSDKResponseStateFail</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                   <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;分享失败&quot;</span><span class="p">);</span>
</span><span class='line'>                   <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'>                   <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                 <span class="p">}</span>
</span><span class='line'>                 <span class="k">default</span><span class="o">:</span>
</span><span class='line'>                   <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                 <span class="p">}</span>
</span><span class='line'>               <span class="p">}];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>添加URL Schemes</h2>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/ShareSDK:WhiteList.jpeg" alt="urlscheme" /></p>

<h2>适配iOS 9问题</h2>

<h3>退回http协议，并设置域</h3>

<p><img src="http://ofj92itlz.bkt.clouddn.com/ShareSDK:Https.jpeg" alt="http" /></p>

<h3>添加scheme白名单</h3>

<p><img src="http://ofj92itlz.bkt.clouddn.com/ShareSDK:UrlScheme.jpeg" alt="白名单" /></p>

<h2>分享平台title为英文问题</h2>

<p>默认语言为英文，需要在项目中添加中文本地化。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/ShareSDK:Localization.jpeg" alt="localization" /></p>

<p>如需修改标题可以修改对应的本地化文件。</p>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/ShareSDK:CustomLocalization.jpeg" alt="customLocalization" /></p>

<h2>Github源码</h2>

<p><a href="https://github.com/sxgfxm/ShareSDKDemo">ShareSDKDemo</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/21/sharesdkjie-ru/'>http://sxgfxm.github.io/blog/2016/10/21/sharesdkjie-ru/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3D Touch]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/20/3d-touch/"/>
    <updated>2016-10-20T15:51:27+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/20/3d-touch</id>
    <content type="html"><![CDATA[<h2>3D Touch简介</h2>

<p>3D Touch是智能手机领域最先进技术之一，目前只有Apple在iPhone上构建了相对良好的生态，并在最新推出的iOS 10中进一步优化了用户体验，Android系统和手机厂商还未提供较为成熟的支持。 本文主要介绍3D Touch相关技术的基本实现方法，包括：</p>

<p>1、Home Screen Quick Actions，主屏幕快捷访问；</p>

<p>2、Peek and Pop，预览和进入；</p>

<p>3、3D Touch Force，3D touch压力值运用。</p>

<!--more-->


<h2>Home Screen Quick Action</h2>

<h3>显示效果</h3>

<p>在主屏幕按下应用图标，会弹出设定好的快捷访问入口。本文采用纯代码创建，也可以通过设置Info.plist实现。</p>

<h3>代码实现</h3>

<p>首先，在<strong>AppDelegate.m</strong>的<code>application:didFinishLaunchingWithOptions:</code>方法中添加<strong>UIApplicationShortcutItems</strong>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">application:</span><span class="p">(</span><span class="bp">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="nv">application</span>
</span><span class='line'>    <span class="nf">didFinishLaunchingWithOptions:</span><span class="p">(</span><span class="bp">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">launchOptions</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>  <span class="c1">//  主界面入口</span>
</span><span class='line'>  <span class="n">ViewController</span> <span class="o">*</span><span class="n">vc</span> <span class="o">=</span> <span class="p">[[</span><span class="n">ViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">mainNav</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UINavigationController</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithRootViewController</span><span class="p">:</span><span class="n">vc</span><span class="p">];</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">mainNav</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//  创建快捷访问Items</span>
</span><span class='line'>  <span class="n">UIApplicationShortcutIcon</span> <span class="o">*</span><span class="n">icon1</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIApplicationShortcutIcon</span>
</span><span class='line'>      <span class="nl">iconWithType</span><span class="p">:</span><span class="n">UIApplicationShortcutIconTypeTask</span><span class="p">];</span>
</span><span class='line'>  <span class="n">UIApplicationShortcutItem</span> <span class="o">*</span><span class="n">item1</span> <span class="o">=</span>
</span><span class='line'>      <span class="p">[[</span><span class="n">UIApplicationShortcutItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithType</span><span class="p">:</span><span class="s">@&quot;item1&quot;</span>
</span><span class='line'>                                       <span class="nl">localizedTitle</span><span class="p">:</span><span class="s">@&quot;item1&quot;</span>
</span><span class='line'>                                    <span class="nl">localizedSubtitle</span><span class="p">:</span><span class="s">@&quot;1&quot;</span>
</span><span class='line'>                                                 <span class="nl">icon</span><span class="p">:</span><span class="n">icon1</span>
</span><span class='line'>                                             <span class="nl">userInfo</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="n">UIApplicationShortcutIcon</span> <span class="o">*</span><span class="n">icon2</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIApplicationShortcutIcon</span>
</span><span class='line'>      <span class="nl">iconWithType</span><span class="p">:</span><span class="n">UIApplicationShortcutIconTypeMail</span><span class="p">];</span>
</span><span class='line'>  <span class="n">UIApplicationShortcutItem</span> <span class="o">*</span><span class="n">item2</span> <span class="o">=</span>
</span><span class='line'>      <span class="p">[[</span><span class="n">UIApplicationShortcutItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithType</span><span class="p">:</span><span class="s">@&quot;item2&quot;</span>
</span><span class='line'>                                       <span class="nl">localizedTitle</span><span class="p">:</span><span class="s">@&quot;item2&quot;</span>
</span><span class='line'>                                    <span class="nl">localizedSubtitle</span><span class="p">:</span><span class="s">@&quot;2&quot;</span>
</span><span class='line'>                                                 <span class="nl">icon</span><span class="p">:</span><span class="n">icon2</span>
</span><span class='line'>                                             <span class="nl">userInfo</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  添加快捷访问Items</span>
</span><span class='line'>  <span class="n">application</span><span class="p">.</span><span class="n">shortcutItems</span> <span class="o">=</span> <span class="l">@[</span> <span class="n">item1</span><span class="p">,</span> <span class="n">item2</span> <span class="l">]</span><span class="p">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后，在<strong>AppDelegate.m</strong>中添加如下方法，用于响应快捷访问事件。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">application:</span><span class="p">(</span><span class="bp">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="nv">application</span>
</span><span class='line'>    <span class="nf">performActionForShortcutItem:</span><span class="p">(</span><span class="n">UIApplicationShortcutItem</span> <span class="o">*</span><span class="p">)</span><span class="nv">shortcutItem</span>
</span><span class='line'>               <span class="nf">completionHandler:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="kt">BOOL</span><span class="p">))</span><span class="nv">completionHandler</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//  响应Item对应的操作，跳转至对应controller</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">shortcutItem</span><span class="p">.</span><span class="n">type</span> <span class="nl">isEqualToString</span><span class="p">:</span><span class="s">@&quot;item1&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">Item1ViewController</span> <span class="o">*</span><span class="n">vc</span> <span class="o">=</span> <span class="p">[[</span><span class="n">Item1ViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">mainNav</span> <span class="nl">pushViewController</span><span class="p">:</span><span class="n">vc</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">shortcutItem</span><span class="p">.</span><span class="n">type</span> <span class="nl">isEqualToString</span><span class="p">:</span><span class="s">@&quot;item2&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">Item2ViewController</span> <span class="o">*</span><span class="n">vc</span> <span class="o">=</span> <span class="p">[[</span><span class="n">Item2ViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">mainNav</span> <span class="nl">pushViewController</span><span class="p">:</span><span class="n">vc</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行效果：</p>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/3DTouch:step1.jpeg" alt="step1" /></p>

<h2>Peek and Pop</h2>

<p>3D Touch按压力度可以分为两级，一级力度触发<strong>peek</strong>，二级力度触发<strong>pop</strong>。</p>

<p><strong>peek</strong>相当于<strong>预览</strong>与按压view相关的<strong>view controller</strong>。<strong>pop</strong>相当于<strong>跳转</strong>至对应的<strong>view controller</strong>。</p>

<h3>为view添加3D Touch响应</h3>

<p>本文以UIImageView为例，实现图片的预览效果。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="c1">//  创建ImageView</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">imageView</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIImageView</span> <span class="n">alloc</span><span class="p">]</span>
</span><span class='line'>      <span class="nl">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span>
</span><span class='line'>                               <span class="mi">100</span><span class="p">)];</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;junxi3.jpeg&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  非常重要</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">.</span><span class="n">userInteractionEnabled</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  添加3D Touch 响应</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">traitCollection</span><span class="p">.</span><span class="n">forceTouchCapability</span> <span class="o">==</span>
</span><span class='line'>      <span class="n">UIForceTouchCapabilityAvailable</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="nl">registerForPreviewingWithDelegate</span><span class="p">:</span><span class="nb">self</span> <span class="nl">sourceView</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;您的设备不支持3D Touch&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过<strong>UIViewController</strong>的 <code>registerForPreviewingWithDelegate:sourceView:</code>方法添加3D Touch响应。需要遵守<strong>UIViewControllerPreviewingDelegate</strong>协议，并实现分别对应<strong>peek</strong>和<strong>pop</strong>的代理方法。</p>

<p>注意，添加3D Touch响应的view，一定要使<strong>userInteractionEnabled = YES</strong>，否则无法响应。</p>

<h3>peek相关代理方法实现</h3>

<p>实现代理方法<code>previewingContext:viewControllerForLocation:</code>，在该代理方法中创建并返回待预览的<strong>view controller</strong>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//  peek</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nf">previewingContext:</span>
</span><span class='line'>                          <span class="p">(</span><span class="kt">id</span><span class="o">&lt;</span><span class="n">UIViewControllerPreviewing</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">previewingContext</span>
</span><span class='line'>              <span class="nf">viewControllerForLocation:</span><span class="p">(</span><span class="bp">CGPoint</span><span class="p">)</span><span class="nv">location</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//  log信息</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;peek&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;point %@&quot;</span><span class="p">,</span> <span class="n">NSStringFromCGPoint</span><span class="p">(</span><span class="n">location</span><span class="p">));</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;rect %@&quot;</span><span class="p">,</span> <span class="n">NSStringFromCGRect</span><span class="p">(</span><span class="n">previewingContext</span><span class="p">.</span><span class="n">sourceRect</span><span class="p">));</span>
</span><span class='line'>  <span class="c1">//  创建待预览view controller</span>
</span><span class='line'>  <span class="n">PreviewViewController</span> <span class="o">*</span><span class="n">previewVC</span> <span class="o">=</span> <span class="p">[[</span><span class="n">PreviewViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  设置大小</span>
</span><span class='line'>  <span class="n">previewVC</span><span class="p">.</span><span class="n">preferredContentSize</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">(</span><span class="mf">0.0f</span><span class="p">,</span> <span class="mf">0.0f</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//  设置内容</span>
</span><span class='line'>  <span class="n">previewVC</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">.</span><span class="n">image</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//  设置高亮显示区域，其他区域会模糊显示</span>
</span><span class='line'>  <span class="n">previewingContext</span><span class="p">.</span><span class="n">sourceRect</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">.</span><span class="n">frame</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//  返回待预览view controller</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">previewVC</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中，previewingContext.sourceRect用于设置高亮区域，location为点击手势在view中的位置，preferredContentSize用于设置预览区域大小，为0时系统会设为最佳显示大小。</p>

<p>运行效果：</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/3DTouch:step2.jpeg" alt="step2" />      <img src="http://ofj92itlz.bkt.clouddn.com/3DTouch:step3.jpeg" alt="step3" /></p>

<h3>在PreviewViewController中添加预览状态快捷选项</h3>

<p>在<strong>peek</strong>状态下，向上滑动，即可弹出快捷选项。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">NSArray</span><span class="o">&lt;</span><span class="kt">id</span><span class="o">&lt;</span><span class="n">UIPreviewActionItem</span><span class="o">&gt;&gt;</span> <span class="o">*</span><span class="p">)</span><span class="nf">previewActionItems</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// setup a list of preview actions</span>
</span><span class='line'>  <span class="n">UIPreviewAction</span> <span class="o">*</span><span class="n">action1</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIPreviewAction</span>
</span><span class='line'>      <span class="nl">actionWithTitle</span><span class="p">:</span><span class="s">@&quot;Aciton1&quot;</span>
</span><span class='line'>                <span class="nl">style</span><span class="p">:</span><span class="n">UIPreviewActionStyleDefault</span>
</span><span class='line'>              <span class="nl">handler</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">UIPreviewAction</span> <span class="o">*</span><span class="n">_Nonnull</span> <span class="n">action</span><span class="p">,</span>
</span><span class='line'>                        <span class="bp">UIViewController</span> <span class="o">*</span><span class="n">_Nonnull</span> <span class="n">previewViewController</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Aciton1&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">UIPreviewAction</span> <span class="o">*</span><span class="n">action2</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIPreviewAction</span>
</span><span class='line'>      <span class="nl">actionWithTitle</span><span class="p">:</span><span class="s">@&quot;Aciton2&quot;</span>
</span><span class='line'>                <span class="nl">style</span><span class="p">:</span><span class="n">UIPreviewActionStyleDefault</span>
</span><span class='line'>              <span class="nl">handler</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">UIPreviewAction</span> <span class="o">*</span><span class="n">_Nonnull</span> <span class="n">action</span><span class="p">,</span>
</span><span class='line'>                        <span class="bp">UIViewController</span> <span class="o">*</span><span class="n">_Nonnull</span> <span class="n">previewViewController</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Aciton2&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">UIPreviewAction</span> <span class="o">*</span><span class="n">action3</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIPreviewAction</span>
</span><span class='line'>      <span class="nl">actionWithTitle</span><span class="p">:</span><span class="s">@&quot;Aciton3&quot;</span>
</span><span class='line'>                <span class="nl">style</span><span class="p">:</span><span class="n">UIPreviewActionStyleDefault</span>
</span><span class='line'>              <span class="nl">handler</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">UIPreviewAction</span> <span class="o">*</span><span class="n">_Nonnull</span> <span class="n">action</span><span class="p">,</span>
</span><span class='line'>                        <span class="bp">UIViewController</span> <span class="o">*</span><span class="n">_Nonnull</span> <span class="n">previewViewController</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Aciton3&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>  <span class="bp">NSArray</span> <span class="o">*</span><span class="n">actions</span> <span class="o">=</span> <span class="l">@[</span> <span class="n">action1</span><span class="p">,</span> <span class="n">action2</span><span class="p">,</span> <span class="n">action3</span> <span class="l">]</span><span class="p">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">actions</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行效果：</p>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/3DTouch:step5.jpeg" alt="step4" /></p>

<h3>pop相关代理方法</h3>

<p>实现代理方法<code>previewingContext:commitViewController:</code>，在该代理方法中跳转。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//  pop</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">previewingContext:</span><span class="p">(</span><span class="kt">id</span><span class="o">&lt;</span><span class="n">UIViewControllerPreviewing</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">previewingContext</span>
</span><span class='line'>     <span class="nf">commitViewController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">viewControllerToCommit</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//  log信息</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;pop&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//  跳转至对应view controller</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span> <span class="nl">showViewController</span><span class="p">:</span><span class="n">viewControllerToCommit</span> <span class="nl">sender</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行效果：</p>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/3DTouch:step4.jpeg" alt="step5" /></p>

<h2>3D Touch Force简单运用</h2>

<p>在<code>touchesMoved:withEvent:</code>方法中，获取touch对象，可以根据force属性值做相应操作。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchesMoved:</span><span class="p">(</span><span class="bp">NSSet</span><span class="o">&lt;</span><span class="bp">UITouch</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="p">)</span><span class="nv">touches</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span> <span class="p">{</span>
</span><span class='line'>  <span class="bp">NSArray</span> <span class="o">*</span><span class="n">arrayTouch</span> <span class="o">=</span> <span class="p">[</span><span class="n">touches</span> <span class="n">allObjects</span><span class="p">];</span>
</span><span class='line'>  <span class="bp">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="o">=</span> <span class="p">(</span><span class="bp">UITouch</span> <span class="o">*</span><span class="p">)[</span><span class="n">arrayTouch</span> <span class="n">lastObject</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;force = %f&quot;</span><span class="p">,</span> <span class="n">touch</span><span class="p">.</span><span class="n">force</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考资料</h2>

<p><a href="https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/Adopting3DTouchOniPhone/#//apple_ref/doc/uid/TP40016543-CH1-SW1">Adopting 3D Touch on iPhone</a></p>

<p><a href="http://www.tuicool.com/articles/auIJbiN">iOS9新特性 3DTouch 开发教程全解</a></p>

<h3>Github源码</h3>

<p><a href="https://github.com/sxgfxm/3DTouchDemo">3DTouchDemo</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/20/3d-touch/'>http://sxgfxm.github.io/blog/2016/10/20/3d-touch/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Today Extension - Widget]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/19/today-extension-widget/"/>
    <updated>2016-10-19T21:05:18+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/19/today-extension-widget</id>
    <content type="html"><![CDATA[<h2>Widget简介</h2>

<p>从iOS 8开始，引入<strong>widget</strong>特性。可以在通知中心的<strong>Today</strong>栏中添加widget。widget可以简单理解为一个小的扩展程序，可以展示相关应用的简略信息，提供快捷访问等功能。</p>

<p>widget的概念在Android中已经十分成熟，iOS widget与自由度相当高的Android widget有显著的区别。iOS widget的刷新时间为展示widget时，而不是像Android widget时刻保持在后台，消耗系统资源。iOS widget只是作为很小的配角存在，Apple的中心思想还是希望开发者关注App本身的设计和性能。</p>

<p>尽管iOS widget是一种约束状态下的自由，但已经逐渐改变用户的交互行为。</p>

<!--more-->


<h2>创建Widget</h2>

<p>1、创建工程；</p>

<p>2、为工程添加新<strong>Target</strong>，并选择<strong>Today Extension</strong>模板；</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/Widget:step1.jpeg" alt="step1" /> <img src="http://ofj92itlz.bkt.clouddn.com/Widget:step2.jpeg" alt="stept" /></p>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/Widget:step3.jpeg" alt="step3" /></p>

<p>3、改为纯代码创建界面，默认会创建<strong>MainInterface.storyboard</strong>设计界面。删除Info.plist文件中的字段，并添加<strong>NSExtensionPrincipalClass</strong>字段，设为对应的<strong>TodayViewController</strong>； <img src="http://ofj92itlz.bkt.clouddn.com/Widget:step5.jpeg" alt="step4" /></p>

<p>4、在TodayViewController中创建界面。</p>

<h2>点击Widget跳转至主应用</h2>

<p>为widget添加跳转至主应用的快捷入口。</p>

<p>为widget添加一层透明UIView，并添加tap手势，当点击widget时，执行下面方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">tapAction</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">extensionContext</span> <span class="nl">openURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="s">@&quot;customScheme://url&quot;</span><span class="p">]</span>
</span><span class='line'>               <span class="nl">completionHandler</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<strong>customScheme</strong>可以自定义为需要的名字，字符串整体一定要符合<strong>URL</strong>格式，否则无法跳转。</p>

<h2>主应用响应跳转</h2>

<p>tapAction方法发出打开URL请，系统会查找注册过相同scheme的应用，并对其通知。所以主应用要注册相同的scheme，并且实现对通知的响应。</p>

<p>首先，在主应用的<strong>Info.plist</strong>文件中，添加<strong>URL types</strong>字段，并最终添加对应的scheme。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/Widget:step4.jpeg" alt="step5" /></p>

<p>然后，在主应用<strong>AppDelegate.m</strong>中添加如下方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">application:</span><span class="p">(</span><span class="bp">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="nv">application</span>
</span><span class='line'>            <span class="nf">openURL:</span><span class="p">(</span><span class="bp">NSURL</span> <span class="o">*</span><span class="p">)</span><span class="nv">url</span>
</span><span class='line'>  <span class="nf">sourceApplication:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">sourceApplication</span>
</span><span class='line'>         <span class="nf">annotation:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">annotation</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([[</span><span class="n">url</span> <span class="n">scheme</span><span class="p">]</span> <span class="nl">isEqualToString</span><span class="p">:</span><span class="s">@&quot;customScheme&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//   scheme相同，打开应用</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// scheme不同，退出</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>不同应用间跳转</h2>

<p>大致过程与widget跳转至主应用相同，差别在于发送跳转请求的方法不同，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">jumpToApp2</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span>
</span><span class='line'>      <span class="nl">openURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:[</span><span class="bp">NSString</span> <span class="nl">stringWithFormat</span><span class="p">:</span><span class="s">@&quot;customScheme://&quot;</span>
</span><span class='line'>                                                              <span class="s">@&quot;www.ticwath.&quot;</span>
</span><span class='line'>                                                              <span class="s">@&quot;com?name=%@&quot;</span><span class="p">,</span>
</span><span class='line'>                                                              <span class="nb">self</span><span class="p">.</span><span class="n">tf</span><span class="p">.</span><span class="n">text</span><span class="p">]]</span>
</span><span class='line'>      <span class="nl">options</span><span class="p">:</span><span class="l">@{}</span>
</span><span class='line'>      <span class="nl">completionHandler</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">success</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">success</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;success&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;failed&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>一定要保持两者约定的scheme相同。跳转时传递的信息保存在<strong>URL</strong>中，按约定解析即可。</p>

<h2>Github源码</h2>

<p><a href="https://github.com/sxgfxm/WidgetDemo/tree/master">WidgetDemo</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/19/today-extension-widget/'>http://sxgfxm.github.io/blog/2016/10/19/today-extension-widget/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS判断GPS坐标是否在中国]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/19/iospan-duan-gpszuo-biao-shi-fou-zai-zhong-guo/"/>
    <updated>2016-10-19T10:29:23+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/19/iospan-duan-gpszuo-biao-shi-fou-zai-zhong-guo</id>
    <content type="html"><![CDATA[<h2>Background</h2>

<p>GPS定位已经深入生活的方方面面。现实生活中存在着多种GPS坐标系：</p>

<ul>
<li><strong>WGS-84坐标系</strong>（World Geodetic System——1984 Coordinate System），国际通用GPS坐标系。</li>
<li><strong>GCJ-02坐标系</strong>（Guojia Cehui Ju Coordinate System），中国专用坐标系，加入随机偏差，俗称火星坐标。</li>
<li><strong>百度坐标系</strong>，百度自己定义的坐标系。</li>
</ul>


<p>在iOS应用开发中，<strong>CoreLocation</strong>返回<strong>WGS坐标</strong>，当定位在中国时，如果直接用<strong>MKMapView</strong>显示位置，由于中国地图使用<strong>GCJ坐标</strong>，会使定位出现偏差，达不到预期效果。为解决这一问题，在显示位置之前，需要判断<strong>WGS坐标</strong>是否在中国，并作出相应的坐标转换。</p>

<p>该问题抽象为<strong>判断点是否在多边形内部</strong>。</p>

<!--more-->


<h2>判断点是否在多边形内部算法</h2>

<ul>
<li>面积和判别法：判断目标点与多边形的每条边组成的三角形面积和是否等于该多边形，相等则在多边形内部。</li>
<li>夹角和判别法：判断目标点与所有边的夹角和是否为360度，为360度则在多边形内部。</li>
<li>引射线法：从目标点出发引一条射线，看这条射线和多边形所有边的交点数目。如果有奇数个交点，则说明在内部，如果有偶数个交点，则说明在外部。</li>
</ul>


<p>算法原理在此不再赘述，主要关注算法的实现问题。</p>

<h2>采用引射线法判断GPS坐标是否在中国</h2>

<h4>构造中国大陆轮廓</h4>

<p>因为<strong>GCJ坐标系</strong>不包含港澳台地区，所有选取中国大陆地区的采样点。</p>

<p>本文使用的采样点有限，某些边界可能存在偏差，仅供参考。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//  中国大陆多边形，用于判断坐标是否在中国</span>
</span><span class='line'><span class="c1">//  因为港澳台地区使用WGS坐标，所以多边形不包含港澳台地区</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="bp">NSMutableArray</span> <span class="o">*</span><span class="p">)</span><span class="nf">polygonOfChina</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="bp">NSMutableArray</span> <span class="o">*</span><span class="n">polygonOfChina</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>  <span class="k">static</span> <span class="kt">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>  <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">polygonOfChina</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSMutableArray</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">49.1506690000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">87.4150810000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">48.3664501790</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">85.7527085300</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">47.0253058185</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">85.3847443554</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">45.2406550000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">82.5214000000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">44.8957121295</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">79.9392351487</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">43.1166843846</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">80.6751253982</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">41.8701690000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">79.6882160000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">39.2896190000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">73.6171080000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">34.2303430000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">78.9155300000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">31.0238860000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">79.0627080000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">27.9989800000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">88.7028920000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">27.1793590000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">88.9972480000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">28.0969170000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">89.7331400000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">26.9157800000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">92.1615830000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">28.1947640000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">96.0986050000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">27.4094760000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">98.6742270000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">23.9085500000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">97.5703890000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">24.0775830000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">98.7846100000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.1375640000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">99.1893510000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">21.1398950000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">101.7649720000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.2746220000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">101.7281780000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">23.2641940000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">105.3708430000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.7191200000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">106.6954480000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">21.9945711661</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">106.7256731791</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">21.4847050000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">108.0200530000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">20.4478440000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">109.3814530000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">18.6689850000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">108.2408210000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">17.4017340000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">109.9333720000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">19.5085670000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">111.4051560000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">21.2716775175</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">111.2514995205</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">21.9936323233</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">113.4625292629</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.1818312942</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">113.4258358111</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.2249729295</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">113.5913115000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.4501912753</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">113.8946844490</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.5959159322</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">114.3623797842</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.4334610000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">114.5194740000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">22.9680954377</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">116.8326939975</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">25.3788220000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">119.9667980000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">28.3261276204</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">121.7724402562</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">31.9883610000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">123.8808230000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">39.8759700000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">124.4695370000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">41.7350890000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">126.9531720000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">41.5142160000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">128.3145720000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">42.9842081790</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">131.0676468344</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">45.2690810000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">131.8468530000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">45.0608370000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">133.0610740000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">48.4480260000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">135.0111880000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">48.0054800000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">131.6628800000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">50.2270740000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">127.6890640000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">53.3516070000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">125.3710040000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">53.4176040000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">119.9254040000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">47.5590810000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">115.1421070000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">47.1339370000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">119.1159230000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">44.8256460000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">111.2786750000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">42.5293560000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">109.2549720000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">43.2598160000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">97.2967290000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">45.4247620000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">90.9680590000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">47.8075570000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">90.6737020000</span><span class="p">)]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">polygonOfChina</span>
</span><span class='line'>     <span class="nl">addObject</span><span class="p">:[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">49.1506690000</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="mf">87.4150810000</span><span class="p">)]];</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">polygonOfChina</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>采用引射线法判断</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> *  判断是不是在中国</span>
</span><span class='line'><span class="cm"> *  用引射线法判断 点是否在多边形内部</span>
</span><span class='line'><span class="cm"> *  算法参考：http://www.cnblogs.com/luxiaoxun/p/3722358.html</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isLocationOutOfChina:</span><span class="p">(</span><span class="n">CLLocationCoordinate2D</span><span class="p">)</span><span class="nv">location</span> <span class="p">{</span>
</span><span class='line'>  <span class="bp">CGPoint</span> <span class="n">point</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">location</span><span class="p">.</span><span class="n">latitude</span><span class="p">,</span> <span class="n">location</span><span class="p">.</span><span class="n">longitude</span><span class="p">);</span>
</span><span class='line'>  <span class="kt">BOOL</span> <span class="n">oddFlag</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>  <span class="bp">NSInteger</span> <span class="n">j</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">polygonOfChina</span><span class="p">].</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="bp">NSInteger</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="p">[</span><span class="nb">self</span> <span class="n">polygonOfChina</span><span class="p">].</span><span class="n">count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="bp">CGPoint</span> <span class="n">polygonPointi</span> <span class="o">=</span> <span class="p">[[</span><span class="nb">self</span> <span class="n">polygonOfChina</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="n">CGPointValue</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">CGPoint</span> <span class="n">polygonPointj</span> <span class="o">=</span> <span class="p">[[</span><span class="nb">self</span> <span class="n">polygonOfChina</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="n">CGPointValue</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(((</span><span class="n">polygonPointi</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;</span> <span class="n">point</span><span class="p">.</span><span class="n">y</span> <span class="o">&amp;&amp;</span> <span class="n">polygonPointj</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;=</span> <span class="n">point</span><span class="p">.</span><span class="n">y</span><span class="p">)</span> <span class="o">||</span>
</span><span class='line'>         <span class="p">(</span><span class="n">polygonPointj</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;</span> <span class="n">point</span><span class="p">.</span><span class="n">y</span> <span class="o">&amp;&amp;</span> <span class="n">polygonPointi</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;=</span> <span class="n">point</span><span class="p">.</span><span class="n">y</span><span class="p">))</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>        <span class="p">(</span><span class="n">polygonPointi</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;=</span> <span class="n">point</span><span class="p">.</span><span class="n">x</span> <span class="o">||</span> <span class="n">polygonPointj</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;=</span> <span class="n">point</span><span class="p">.</span><span class="n">x</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">oddFlag</span> <span class="o">^=</span> <span class="p">(</span><span class="n">polygonPointi</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span>
</span><span class='line'>                  <span class="p">(</span><span class="n">point</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">polygonPointi</span><span class="p">.</span><span class="n">y</span><span class="p">)</span> <span class="o">/</span>
</span><span class='line'>                  <span class="p">(</span><span class="n">polygonPointj</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">polygonPointi</span><span class="p">.</span><span class="n">y</span><span class="p">)</span> <span class="o">*</span>
</span><span class='line'>                  <span class="p">(</span><span class="n">polygonPointj</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">polygonPointi</span><span class="p">.</span><span class="n">x</span><span class="p">)</span> <span class="o">&lt;</span>
</span><span class='line'>                  <span class="n">point</span><span class="p">.</span><span class="n">x</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">!</span><span class="n">oddFlag</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>测试结果</h4>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/Map:Result.png" alt="result" /></p>

<p>如上图所示，红色多边形为所构造的中国大陆轮廓。随机生成经纬度坐标进行测试，如果在中国，标记为红色；如果不在中国，标记为蓝色。</p>

<h2>参考资料</h2>

<p><a href="http://www.cnblogs.com/luxiaoxun/p/3722358.html">阿凡卢博客</a></p>

<p><a href="https://github.com/TinyQ/TQLocationConverter">Github源码地址</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/19/iospan-duan-gpszuo-biao-shi-fou-zai-zhong-guo/'>http://sxgfxm.github.io/blog/2016/10/19/iospan-duan-gpszuo-biao-shi-fou-zai-zhong-guo/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UICollectionView iOS 10 New Features]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/18/uicollectionview-ios10-new-features/"/>
    <updated>2016-10-18T20:01:45+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/18/uicollectionview-ios10-new-features</id>
    <content type="html"><![CDATA[<h2>Background</h2>

<p>iPhone屏幕的刷新频率固定为60fps，为了达到流畅的滑动效果，iOS应用展示必须满足该条件。当帧率很低时，就会出现明显的卡顿现象。</p>

<p>60fps相当于每帧16.67毫秒，在这么短的时间内collection view可能并不能完成从相对较慢的数据源加载数据。为了提升collection view性能，一个常用的技巧是使<code>cellForItemAtIndexPath</code>尽可能快的返回cell，比如异步加载网络图片等。为了进一步提高collection view性能，并且尽量减少开发者的工作，在iOS 10中引入了新特性。</p>

<!--more-->


<h2>UICollectionView API变化</h2>

<h4>新增UICollectionViewDataSourcePrefetching协议</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@protocol</span> <span class="nc">UICollectionViewDataSourcePrefetching</span> <span class="o">&lt;</span><span class="bp">NSObject</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@required</span>
</span><span class='line'><span class="c1">// indexPaths are ordered ascending by geometric distance from the collection view</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">collectionView</span><span class="p">:(</span><span class="bp">UICollectionView</span> <span class="o">*</span><span class="p">)</span><span class="n">collectionView</span> <span class="nl">prefetchItemsAtIndexPaths</span><span class="p">:(</span><span class="bp">NSArray</span><span class="o">&lt;</span><span class="bp">NSIndexPath</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="p">)</span><span class="n">indexPaths</span> <span class="n">NS_AVAILABLE_IOS</span><span class="p">(</span><span class="mi">10</span><span class="n">_0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">@optional</span>
</span><span class='line'><span class="c1">// indexPaths that previously were considered as candidates for pre-fetching, but were not actually used; may be a subset of the previous call to -collectionView:prefetchItemsAtIndexPaths:</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">collectionView</span><span class="p">:(</span><span class="bp">UICollectionView</span> <span class="o">*</span><span class="p">)</span><span class="n">collectionView</span> <span class="nl">cancelPrefetchingForItemsAtIndexPaths</span><span class="p">:(</span><span class="bp">NSArray</span><span class="o">&lt;</span><span class="bp">NSIndexPath</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="p">)</span><span class="n">indexPaths</span>  <span class="n">NS_AVAILABLE_IOS</span><span class="p">(</span><span class="mi">10</span><span class="n">_0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>这两个方法均异步执行，可用于异步加载图片等。</p>

<h4>新增prefetchDataSource代理</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">,</span> <span class="n">nullable</span><span class="p">)</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">UICollectionViewDataSourcePrefetching</span><span class="o">&gt;</span> <span class="n">prefetchDataSource</span> <span class="n">NS_AVAILABLE_IOS</span><span class="p">(</span><span class="mi">10</span><span class="n">_0</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>新增prefetchingEnabled属性</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">getter</span><span class="o">=</span><span class="n">isPrefetchingEnabled</span><span class="p">)</span> <span class="kt">BOOL</span> <span class="n">prefetchingEnabled</span> <span class="n">NS_AVAILABLE_IOS</span><span class="p">(</span><span class="mi">10</span><span class="n">_0</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Prefetching</h2>

<p>当collection view滑动速率将要超过<code>cellForItemAtIndexPath</code>返回cell的速率时，collection view会调用<code>prefetchItemAtIndexPaths:</code>方法。</p>

<p>collection view会把<strong>可能</strong>即将需要展示的cell的IndexPath放入数组中传递给prefetch方法。这为我们提供了预处理数据机会。比如，当我们需要加载网络图片时，可以在prefetch方法中请求网络数据，并把下载的数据插入到<strong>data source</strong>中，为<code>cellForItemAtIndexPath</code>的使用做准备。</p>

<p>当collection view滑动方向改变时，collection view会调用<code>cancelPrefetchingForItemsAtIndexPaths</code>方法。</p>

<p>该方法的目的是取消<strong>原本可能</strong>即将展示的cell的预加载数据工作。参数同样是IndexPath的数组。</p>

<h2>UICollectionView Cell生命周期变化</h2>

<h4>UICollectionViewCell Lifecycle: iOS &lt;= 9</h4>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/UICollectionView:UICollectionViewLifecycle_iOS_9.jpeg" alt="UICollectionViewLifecycle_iOS_9" /></p>

<ol>
<li>首先，调用<code>cellForItemAtIndexPath:</code>，从复用队列中弹出一个<strong>cell</strong>，准备对其调用<code>prepareForReuse</code>。</li>
<li>然后，根据需求设置<strong>cell</strong>的内容，比如<strong>labels</strong>等。</li>
<li>当<strong>cell</strong>即将出现时，调用<code>collectionView:willDisplayCell:forItemAtindexPath:</code>。</li>
<li>当<strong>cell</strong>消失时，调用<code>collectionView:didEndDisplayingCell:forItemAtIndexPath:</code>。此时<strong>cell</strong>会重新进入复用队列，等待复用。</li>
<li>当用户向相反方向再次把<strong>cell</strong>滑回屏幕时，会重新从第一步开始执行。</li>
</ol>


<h4>UICollectionViewCell Lifecycle: iOS 10</h4>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/UICollectionView:UICollectionViewLifecycle_iOS_10.jpeg" alt="UICollectionViewLifecycle_iOS_10" /></p>

<p>在iOS 10中，前3个步骤与iOS 9是相同的，新的变化发生在<strong>cell</strong>滑出屏幕的时候。</p>

<p>当调用<code>collectionView:didEndDisplayingCell:forItemAtIndexPath:</code>后，<strong>cell</strong>不会立刻进入复用队列，系统会<strong>keeps it around for a bit</strong>。相当于会缓存该<strong>cell</strong>一小段时间，在这段时间内如果该<strong>cell</strong>再次回到屏幕中，便不会重新调用<code>cellForItemAtIndexPath:</code>，而是直接显示。</p>

<p>至于系统会缓存多久，官方并没有给出明确的时间，感觉跟程序运行时开销有关。</p>

<p>如果想关闭该功能，需要设置<code>collectionView.prefetchingEnabled = NO;</code>。</p>

<p> <img src="http://ofj92itlz.bkt.clouddn.com/UICollectionView:multiple_cells.jpeg" alt="multiple_cells" /></p>

<p>collection view包含多列的情况，主要体现cell的<strong>独立性</strong>。</p>

<p>当某一行需要展示时，每个cell独立出队并调用<code>cellForItemAtIndexPath:</code>方法；</p>

<p>当该行即将展示时，每个cell调用<code>willDisplayCell:atIndexPath:</code>。</p>

<h2>总结</h2>

<ul>
<li>这些变化对开发者都是透明的，对开发者来说只需利用好prefetch特性。</li>
<li>prefetch进一步提升了collection view的性能，尤其是获取cell数据开销比较大或者比较慢时。</li>
<li>每个cell独立出队，单独设置，确保cell在展示之前总是ready。</li>
<li>UITableView拥有相同的新特性。</li>
</ul>


<h2>参考资料：</h2>

<p><a href="https://developer.apple.com/videos/play/wwdc2016/219/">WWDC2016 UICollectionView相关视频</a></p>

<p><a href="https://adoptioncurve.net/archives/2016/06/collection-view-updates-in-ios10/">Adoption Curve Dot Net</a></p>

<p><a href="https://littlebitesofcocoa.com/241-uicollectionview-cell-pre-fetching">little bites of cocoa</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/18/uicollectionview-ios10-new-features/'>http://sxgfxm.github.io/blog/2016/10/18/uicollectionview-ios10-new-features/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Blog - 自定义]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/18/github-blog-zi-ding-yi/"/>
    <updated>2016-10-18T15:48:51+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/18/github-blog-zi-ding-yi</id>
    <content type="html"><![CDATA[<h2>Octopress目录结构</h2>

<h3>Rakefile</h3>

<p>rake的配置文件，类似于makefile。</p>

<h3>Gemfile</h3>

<p>bundle要下载需要的gem依赖关系的指定文件。</p>

<!--more-->


<h3>_config.yml</h3>

<p>站点的配置文件。</p>

<h3>public/</h3>

<p><code>rake generate</code>静态编译完成后的目录，该目录为网站展示的目录。</p>

<h3>_deploy/</h3>

<p><code>rake deploy</code>deploy时生成的缓存文件夹，内容和public目录一样。</p>

<p>该目录中内容由Octopress自动提交至Github远程仓库的<strong>master</strong>分支。</p>

<h3>sass/</h3>

<p>css文件的源文件目录。</p>

<h3>plugins/</h3>

<p>放置自带及第三方插件目录，ruby程序。</p>

<h3>source/</h3>

<p>站点的源文件目录，public目录就是根据该目录下数据生成的。</p>

<p>该目录中内容由用户手动提交至Github远程仓库的<strong>source</strong>分支。</p>

<h4>_includes/custom/</h4>

<p>自定义的模板目录。</p>

<h4>_includes/asides/</h4>

<p>边栏模板目录。</p>

<h4>_includes/post/</h4>

<p>文章页面相应模板目录。</p>

<h4>_layouts/</h4>

<p>默认网站html相关文件，最底层。</p>

<h4>_posts/</h4>

<p>文章源文件，由<code>rake new_post["article name"]</code>命令产生。</p>

<h4>_stylesheets/</h4>

<p>css文件目录。</p>

<h4>javascripts/</h4>

<p>js文件目录。</p>

<h4>images/</h4>

<p>图片目录。</p>

<h2>设置博客中的链接在新窗口中打开</h2>

<p>将如下代码添加到<strong>occtopress/source/_includes/custom/head.html</strong>文件末尾。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">addBlankTargetForLinks</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;a[href^=&quot;http&quot;]&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">,</span> <span class="s1">&#39;_blank&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;DOMNodeInserted&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">addBlankTargetForLinks</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>自定义侧边栏</h2>

<p>首先，在<strong>octopress/source/_includes/asides/</strong>目录下创建<strong>custom.html</strong>。</p>

<p>然后，在<strong>_config.yml</strong>的<strong>default_asides:</strong>设置中加入创建的自定义侧栏文件<strong>/asides/custom.html</strong>。</p>

<p>侧边栏顺序即为<strong>default_asides:</strong>中参数的顺序，可以自己设置。</p>

<h2>增加Google Analytics统计工具</h2>

<p>首先，在<a href="https://analytics.google.com/analytics/web/">Google Analytics</a>注册并按要求填写网站信息；</p>

<p>然后，获取<strong>Tracing Id</strong>，添加到<strong>_config.yml</strong>的<strong>google_analytics_tracking_id</strong>后面即可。</p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/GoogleAnalytics:trackingID1.jpeg" alt="" /></p>

<p><img src="http://ofj92itlz.bkt.clouddn.com/GoogleAnalytics:config1.jpeg" alt="" /></p>

<h2>列表排版的缩进问题</h2>

<p>列表默认会冲出文章主主体区块。</p>

<p>在<strong>octopress/sass/custom/_layout.sccs</strong>文件中找到<strong>#$indented-lists: true</strong>行，去掉<strong>#</strong>注释即可。</p>

<h2>公益404页面</h2>

<p>创建404.markdown，按如下编辑。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">---</span>
</span><span class='line'>
</span><span class='line'><span class="nx">layout</span><span class="o">:</span> <span class="nx">page</span>
</span><span class='line'>
</span><span class='line'><span class="nx">title</span><span class="o">:</span> <span class="s2">&quot;404 Error&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">date</span><span class="o">:</span> <span class="mi">2013</span><span class="o">-</span><span class="mi">4</span><span class="o">-</span><span class="mi">21</span> <span class="mi">02</span><span class="o">:</span><span class="mi">35</span>
</span><span class='line'>
</span><span class='line'><span class="nx">comments</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>
</span><span class='line'><span class="nx">sharing</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>
</span><span class='line'><span class="nx">footer</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>
</span><span class='line'><span class="o">---</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://www.qq.com/404/search_children.js&quot;</span> <span class="nx">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>博客末尾增加原文链接、版权等</h2>

<p>参考博客<a href="http://www.cnblogs.com/maoxiong/p/4298207.html">为octopress文章添加原文链接</a></p>

<h2>参考资料</h2>

<p><a href="http://foggry.com/blog/2014/04/28/custom-your-octopress-blog/">自定义你的Octopress博客</a></p>

<p><a href="http://blog.csdn.net/biaobiaoqi/article/details/9289563">定制Octopress</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/18/github-blog-zi-ding-yi/'>http://sxgfxm.github.io/blog/2016/10/18/github-blog-zi-ding-yi/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Blog - 基本操作]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/18/github-blog-ji-ben-cao-zuo/"/>
    <updated>2016-10-18T08:58:48+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/18/github-blog-ji-ben-cao-zuo</id>
    <content type="html"><![CDATA[<h2>创建博文</h2>

<p><code>rake new_post["article_name"]</code></p>

<p>默认会在octopress/source/_post/目录下生成.markdown文件。</p>

<h2>删除博文</h2>

<p>只需删除对应的markdown文件即可。</p>

<!--more-->


<h2>预览博文</h2>

<p><code>rake generate</code></p>

<p>默认会在octopress/public/blog/目录下生成<strong>HTML</strong>页面。</p>

<p><code>rake preview</code></p>

<p>本地预览，地址为 <a href="http://localhost:4000">http://localhost:4000</a> ，必须使用<code>ctrl+c</code>终止预览，<code>ctrl+z</code>只起到挂起作用，当再次预览时会提示socket端口被占用。</p>

<h2>发布博文</h2>

<p><code>rake deploy</code></p>

<p>先将本地博客存放至octopress/_deploy目录下，然后push至github上远程仓库的<strong>master</strong>分支。</p>

<p>可以在_deploy目录下执行<code>git reset --hard origin master</code>强制同步远程仓库master分支内容，已解决不能push的问题。</p>

<h2>push至Github</h2>

<p>手动push源代码至github上远程仓库的<strong>source</strong>分支。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m "commit message"
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/18/github-blog-ji-ben-cao-zuo/'>http://sxgfxm.github.io/blog/2016/10/18/github-blog-ji-ben-cao-zuo/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Blog - 搭建]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/18/github-blog-da-jian/"/>
    <updated>2016-10-18T08:44:43+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/18/github-blog-da-jian</id>
    <content type="html"><![CDATA[<h2>安装Git</h2>

<h2>安装Ruby</h2>

<p>推荐使用RVM。</p>

<!--more-->


<h2>安装DevKit</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install devkit</span></code></pre></td></tr></table></div></figure>


<h2>克隆Octopress库</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git </span></code></pre></td></tr></table></div></figure>


<h2>安装Octopress依赖项</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundler install</span></code></pre></td></tr></table></div></figure>


<h2>安装Octopress默认主题</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h2>关联Octopress至Github</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>在Repository url中输入对应的仓库地址。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/18/github-blog-da-jian/'><a href="http://sxgfxm.github.io/blog/2016/10/18/github-blog-da-jian/">http://sxgfxm.github.io/blog/2016/10/18/github-blog-da-jian/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown Syntax]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/17/markdown-syntax/"/>
    <updated>2016-10-17T20:34:29+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/17/markdown-syntax</id>
    <content type="html"><![CDATA[<h2>Format</h2>

<table>
<thead>
<tr>
<th style="text-align:left;"> 语法                                       </th>
<th style="text-align:left;"> 效果                         </th>
<th style="text-align:left;"> 快捷键         </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> **strong**                              </td>
<td style="text-align:left;"> <strong>strong</strong>                 </td>
<td style="text-align:left;"> ⌘ + B       </td>
</tr>
<tr>
<td style="text-align:left;"> *emphasis*                              </td>
<td style="text-align:left;"> <em>emphasis</em>                 </td>
<td style="text-align:left;"> ⌘ + I       </td>
</tr>
<tr>
<td style="text-align:left;"> \<u>underline</u>                        </td>
<td style="text-align:left;"> <u>underline</u>           </td>
<td style="text-align:left;"> ⌘ + U       </td>
</tr>
<tr>
<td style="text-align:left;"> `code`                     </td>
<td style="text-align:left;"> <code>code</code>                     </td>
<td style="text-align:left;"> ⌘ + shift + ` |                            |             </td>
</tr>
<tr>
<td style="text-align:left;"> \<del>strike</del>                              </td>
<td style="text-align:left;"> <del>strike</del>                 </td>
<td style="text-align:left;">             </td>
</tr>
<tr>
<td style="text-align:left;"> [百度](<a href="http://www.baidu.com">http://www.baidu.com</a>)              </td>
<td style="text-align:left;"> <a href="http://www.baidu.com">百度</a> </td>
<td style="text-align:left;"> ⌘ + K       </td>
</tr>
<tr>
<td style="text-align:left;"> <img src="imageSource" alt="imageName" />                </td>
<td style="text-align:left;">                            </td>
<td style="text-align:left;"> ⌘ + alt + I </td>
</tr>
<tr>
<td style="text-align:left;"> \                                       </td>
<td style="text-align:left;"> clear format               </td>
<td style="text-align:left;"> ⌘ + \       </td>
</tr>
</tbody>
</table>


<!--more-->


<h2>Paragraph</h2>

<h3>Heading</h3>

<ul>
<li><p>语法</p>

<ul>
<li>#h1</li>
<li>##h2</li>
<li>###h3</li>
<li>####h4</li>
<li>#####h5</li>
<li>######h6</li>
</ul>
</li>
<li><p>效果</p>

<ul>
<li><h1>h1</h1></li>
<li><h2>h2</h2></li>
<li><h3>h3</h3></li>
<li><h4>h4</h4></li>
<li><h5>h5</h5></li>
<li><h6>h6</h6></li>
</ul>
</li>
<li><p>快捷键</p>

<ul>
<li>⌘ + 数字键</li>
</ul>
</li>
</ul>


<h3>Code Block</h3>

<ul>
<li><p>语法</p>

<ul>
<li>\~~~</li>
</ul>
</li>
<li><p>效果</p>

<ul>
<li><pre><code>code block
</code></pre></li>
</ul>
</li>
<li><p>快捷键</p>

<ul>
<li>⌘ + alt + C</li>
</ul>
</li>
</ul>


<h3>Quote</h3>

<ul>
<li><p>语法</p>

<ul>
<li>>引用</li>
</ul>
</li>
<li><p>效果</p>

<ul>
<li><blockquote><p>引用</p></blockquote></li>
</ul>
</li>
<li><p>快捷键</p>

<ul>
<li>⌘ + alt +Q</li>
</ul>
</li>
</ul>


<h3>Horizontal Line</h3>

<ul>
<li><p>语法</p>

<ul>
<li>-&ndash;</li>
</ul>
</li>
<li><p>效果</p>

<hr /></li>
<li><p>快捷键</p>

<ul>
<li>⌘ + shift + -</li>
</ul>
</li>
</ul>


<h3>Ordered List</h3>

<ul>
<li>语法

<ul>
<li>\1. Item</li>
<li>\2. Item</li>
<li>\3. Item</li>
</ul>
</li>
<li>效果

<ul>
<li><ol>
<li>Item</li>
</ol>
</li>
<li><ol>
<li>Item</li>
</ol>
</li>
<li><ol>
<li>Item</li>
</ol>
</li>
</ul>
</li>
<li>快捷键

<ul>
<li>⌘ + alt + O</li>
</ul>
</li>
</ul>


<h3>Unordered List</h3>

<ul>
<li>语法

<ul>
<li>* Item</li>
<li>* Item</li>
<li>* Item</li>
</ul>
</li>
<li>效果

<ul>
<li><ul>
<li>Item</li>
</ul>
</li>
<li><ul>
<li>Item</li>
</ul>
</li>
<li><ul>
<li>Item</li>
</ul>
</li>
</ul>
</li>
<li>快捷键

<ul>
<li>⌘ + alt + U</li>
</ul>
</li>
</ul>


<h3>Table List</h3>

<ul>
<li><p>快捷键</p>

<ul>
<li>⌘ + T</li>
</ul>
</li>
<li><p>效果</p>

<ul>
<li>| 1    | 2    | 3    |
| &mdash;- | &mdash;- | &mdash;- |
| 4    | 5    | 6    |
| 7    | 8    | 9    |<p class='post-footer'>
原始地址：
<a href='http://sxgfxm.github.io/blog/2016/10/17/markdown-syntax/'><a href="http://sxgfxm.github.io/blog/2016/10/17/markdown-syntax/">http://sxgfxm.github.io/blog/2016/10/17/markdown-syntax/</a></a><br/>
written by <a href='http://sxgfxm.github.io'>Light</a>
&nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
</p></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Github Blog]]></title>
    <link href="http://sxgfxm.github.io/blog/2016/10/16/hello-github-blog/"/>
    <updated>2016-10-16T20:45:37+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2016/10/16/hello-github-blog</id>
    <content type="html"><![CDATA[<p><strong>Hello world !</strong></p>

<p>以此纪念独立搭建的<strong>Github Blog</strong>。</p>

<p>感谢<strong>Github Pages</strong>免费空间，感谢<strong>Octopress</strong>静态化博客系统。</p>

<p>感谢带我入门的Web前端工程师<strong>bounlusin</strong>（ 博客：<a href="http://bounlusin.github.io">http://bounlusin.github.io</a> ）</p>

<p>感谢极客学院建立<strong>Github Blog</strong>教程 <a href="http://wiki.jikexueyuan.com/project/github-page/">http://wiki.jikexueyuan.com/project/github-page/</a></p>

<p><strong>If you really want it , just make everyday count !</strong></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2016/10/16/hello-github-blog/'>http://sxgfxm.github.io/blog/2016/10/16/hello-github-blog/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
</feed>
