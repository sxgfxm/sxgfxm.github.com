<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Light's Blog]]></title>
  <link href="http://sxgfxm.github.io/atom.xml" rel="self"/>
  <link href="http://sxgfxm.github.io/"/>
  <updated>2017-09-22T10:57:33+08:00</updated>
  <id>http://sxgfxm.github.io/</id>
  <author>
    <name><![CDATA[Light]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170918]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/09/22/ioszhi-shi-xiao-ji-170918/"/>
    <updated>2017-09-22T10:50:20+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/09/22/ioszhi-shi-xiao-ji-170918</id>
    <content type="html"><![CDATA[<h2>UIButton Gestures</h2>

<p><code>UIControlEventTouchDown</code>：按下button；<br/>
<code>UIControlEventTouchDragExit</code>：拖动至button范围（button四周有一定范围）外；<br/>
<code>UIControlEventTouchDragEnter</code>：拖动至button范围（button四周有一定范围）内。<br/>
<code>UIControlEventTouchUpInside</code>：在button内松手；<br/>
<code>UIControlEventTouchUpOutside</code>：在button外松手；<br/>
<code>UIControlEventTouchDragOutside</code>：在button外拖动。<br/>
<code>UIControlEventTouchDragInside</code>：在button内拖动；<br/>
<code>UIControlEventTouchCancel</code>：系统行为取消touch；</p>

<!-- more -->


<h2>UIGraphics Image Context</h2>

<p>参考<a href="https://onevcat.com/2013/04/using-blending-in-ios/">这篇文章</a>。</p>

<p>关于blend mode参数解释：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>R is the premultiplied result
</span><span class='line'>S is the source color, and includes alpha
</span><span class='line'>D is the destination color, and includes alpha
</span><span class='line'>Ra, Sa, and Da are the alpha components of R, S, and D</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//  UIImage+Tint.m</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;UIImage+Tint.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="bp">UIImage</span> <span class="nl">(Tint)</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span> <span class="nf">imageWithTintColor:</span><span class="p">(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="nv">tintColor</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="nb">self</span> <span class="nl">imageWithTintColor</span><span class="p">:</span><span class="n">tintColor</span> <span class="nl">blendMode</span><span class="p">:</span><span class="n">kCGBlendModeDestinationIn</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span> <span class="nf">imageWithGradientTintColor:</span><span class="p">(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="nv">tintColor</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="nb">self</span> <span class="nl">imageWithTintColor</span><span class="p">:</span><span class="n">tintColor</span> <span class="nl">blendMode</span><span class="p">:</span><span class="n">kCGBlendModeOverlay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span> <span class="nf">imageWithTintColor:</span><span class="p">(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="nv">tintColor</span> <span class="nf">blendMode:</span><span class="p">(</span><span class="bp">CGBlendMode</span><span class="p">)</span><span class="nv">blendMode</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">//We want to keep alpha, set opaque to NO; Use 0.0f for scale to use the scale factor of the device’s main screen.</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mf">0.0f</span><span class="p">);</span>
</span><span class='line'>    <span class="p">[</span><span class="n">tintColor</span> <span class="n">setFill</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">CGRect</span> <span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="nb">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'>    <span class="n">UIRectFill</span><span class="p">(</span><span class="n">bounds</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Draw the tinted image in context</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="nl">drawInRect</span><span class="p">:</span><span class="n">bounds</span> <span class="nl">blendMode</span><span class="p">:</span><span class="n">blendMode</span> <span class="nl">alpha</span><span class="p">:</span><span class="mf">1.0f</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">blendMode</span> <span class="o">!=</span> <span class="n">kCGBlendModeDestinationIn</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span> <span class="nl">drawInRect</span><span class="p">:</span><span class="n">bounds</span> <span class="nl">blendMode</span><span class="p">:</span><span class="n">kCGBlendModeDestinationIn</span> <span class="nl">alpha</span><span class="p">:</span><span class="mf">1.0f</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">tintedImage</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">tintedImage</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>正五边形</h2>

<p>绘制正五边形步骤：</p>

<ol>
<li>初始化数据；</li>
<li>计算各个顶点坐标，18° + 54° = 72°，通过三角函数计算；</li>
<li>使用UIBezierPath绘制五边形path，使用CAShapeLayer渲染五边形；</li>
</ol>


<p>注：可使用matrix优化缩放。</p>

<h2>返回手势</h2>

<ol>
<li>如果无leftBarButtonItem，点击返回及右滑返回均系统支持；</li>
<li>如果有leftBarButtonItem，点击返回逻辑需自己添加，右滑返回默认不支持。如果想支持右滑返回，需要设置<code>navigationController.interactivePopGestureRecognizer.delegate</code>，并实现<code>-gestureRecognizerShouldBegin</code>代理方法。注意右滑时需要判断当前栈中是否有足够的viewController以供pop。</li>
</ol>


<h2>View与View的参数分离</h2>

<p>自定义view时，将参数与view本身分离，并用常量定义参数，节省代码量，且易于统一修改处理。</p>

<h2>UIWebView</h2>

<p>如果webView加载的内容被卡住，<code>[self.webView canGoBack]</code>不能立即返回，如果使用该方法判断是否可以pop页面，可能会造成卡顿。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/09/22/ioszhi-shi-xiao-ji-170918/'><a href="http://sxgfxm.github.io/blog/2017/09/22/ioszhi-shi-xiao-ji-170918/">http://sxgfxm.github.io/blog/2017/09/22/ioszhi-shi-xiao-ji-170918/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170911]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170911/"/>
    <updated>2017-09-15T17:20:49+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170911</id>
    <content type="html"><![CDATA[<h2>长按语音控制</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">setupBtn</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//  按下按钮</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">voiceBtn</span> <span class="nl">addTarget</span><span class="p">:</span><span class="n">self</span> <span class="nl">action</span><span class="p">:</span><span class="err">@</span><span class="n">selector</span><span class="p">(</span><span class="nl">btnTouchBegin</span><span class="p">:)</span> <span class="nl">forControlEvents</span><span class="p">:</span><span class="n">UIControlEventTouchDown</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  立刻松开</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">voiceBtn</span> <span class="nl">addTarget</span><span class="p">:</span><span class="n">self</span> <span class="nl">action</span><span class="p">:</span><span class="err">@</span><span class="n">selector</span><span class="p">(</span><span class="nl">btnTouchEnd</span><span class="p">:)</span> <span class="nl">forControlEvents</span><span class="p">:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  上划取消</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">voiceBtn</span> <span class="nl">addTarget</span><span class="p">:</span><span class="n">self</span> <span class="nl">action</span><span class="p">:</span><span class="err">@</span><span class="n">selector</span><span class="p">(</span><span class="n">cancelSpeak</span><span class="p">)</span> <span class="nl">forControlEvents</span><span class="p">:</span><span class="n">UIControlEventTouchDragExit</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  外部松开</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">voiceBtn</span> <span class="nl">addTarget</span><span class="p">:</span><span class="n">self</span> <span class="nl">action</span><span class="p">:</span><span class="err">@</span><span class="n">selector</span><span class="p">(</span><span class="nl">btnTouchEnd</span><span class="p">:)</span> <span class="nl">forControlEvents</span><span class="p">:</span><span class="n">UIControlEventTouchUpOutside</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//  通过计时器区分“点击”还是“长按”</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">btnTouchBegin</span><span class="p">:(</span><span class="n">UIButton</span> <span class="o">*</span><span class="p">)</span><span class="n">button</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">countNum</span> <span class="o">=</span> <span class="mf">0.0f</span><span class="p">;</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">timer</span> <span class="o">=</span>
</span><span class='line'>      <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval</span><span class="p">:</span><span class="mf">0.1</span> <span class="nl">target</span><span class="p">:</span><span class="n">self</span> <span class="nl">selector</span><span class="p">:</span><span class="err">@</span><span class="n">selector</span><span class="p">(</span><span class="n">handleTimer</span><span class="p">)</span> <span class="nl">userInfo</span><span class="p">:</span><span class="n">nil</span> <span class="nl">repeats</span><span class="p">:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">timer</span> <span class="n">fire</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">btnTouchEnd</span><span class="p">:(</span><span class="n">UIButton</span> <span class="o">*</span><span class="p">)</span><span class="n">button</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">timer</span> <span class="n">invalidate</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">self</span> <span class="n">isLongPressGesture</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//  执行长按操作</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//  执行点击操作</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 处理时间</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">handleTimer</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">countNum</span> <span class="o">+=</span> <span class="mf">0.1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">self</span> <span class="n">isLongPressGesture</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">timer</span> <span class="n">invalidate</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">longPressVoiceBegin</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 判断是否为长按手势</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="n">isLongPressGesture</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">countNum</span> <span class="o">&gt;=</span> <span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 上划取消语音输入</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">cancelSpeak</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">voiceEnd</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>长按手势控制</h2>

<p>添加长按手势</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">addLongPressGesture</span><span class="p">{</span>
</span><span class='line'>  <span class="bp">UILongPressGestureRecognizer</span> <span class="o">*</span><span class="n">longPressGesture</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UILongPressGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget</span><span class="p">:</span><span class="nb">self</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">longPressGestureAction</span><span class="p">:)];</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">voiceBtn</span> <span class="nl">addGestureRecognizer</span><span class="p">:</span><span class="n">longPressGesture</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>处理长按手势</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">longPressGestureAction:</span><span class="p">(</span><span class="bp">UILongPressGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">longPress</span> <span class="p">{</span>
</span><span class='line'>  <span class="bp">CGPoint</span> <span class="n">point</span> <span class="o">=</span> <span class="p">[</span><span class="n">longPress</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">voiceBtn</span><span class="p">];</span>
</span><span class='line'>  <span class="k">switch</span> <span class="p">(</span><span class="n">longPress</span><span class="p">.</span><span class="n">state</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">UIGestureRecognizerStateBegan</span><span class="p">:</span>
</span><span class='line'>      <span class="c1">//  长按手势开始</span>
</span><span class='line'>      <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">UIGestureRecognizerStateChanged</span><span class="p">:</span>
</span><span class='line'>      <span class="c1">//  长按滑动</span>
</span><span class='line'>      <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">UIGestureRecognizerStateEnded</span><span class="p">:</span>
</span><span class='line'>      <span class="c1">//  长按手势结束</span>
</span><span class='line'>      <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span>
</span><span class='line'>      <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//  判断触点是否在特定区域内</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isInViewAreaWithTouchPoint:</span><span class="p">(</span><span class="bp">CGPoint</span><span class="p">)</span><span class="nv">touchPoint</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">touchPoint</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170911/'>http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170911/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170904]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170904/"/>
    <updated>2017-09-15T17:19:17+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170904</id>
    <content type="html"><![CDATA[<h2>Git Delete Branch</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">a</span>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">d</span> <span class="o">&lt;</span><span class="n">branch_name</span><span class="o">&gt;</span>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">D</span> <span class="o">&lt;</span><span class="n">branch_name</span><span class="o">&gt;</span> <span class="c1">// force delete</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>MVC</h2>

<h2>&lt;> &amp; &ldquo;&rdquo;<p class='post-footer'></h2>

<p>  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170904/'><a href="http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170904/">http://sxgfxm.github.io/blog/2017/09/15/ioszhi-shi-xiao-ji-170904/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170828]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/09/04/ioszhi-shi-xiao-ji-170828/"/>
    <updated>2017-09-04T14:12:44+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/09/04/ioszhi-shi-xiao-ji-170828</id>
    <content type="html"><![CDATA[<h2>TableView Header / Footer Height</h2>

<p>UITableView默认有section header/footer高度，设为0无效，最小可设为1。</p>

<h2>CNContactPickerViewController</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-(</span><span class="kt">void</span><span class="p">)</span><span class="nf">pickContact</span><span class="p">{</span>
</span><span class='line'>  <span class="n">CNContactPickerViewController</span> <span class="o">*</span><span class="n">controller</span> <span class="o">=</span> <span class="p">[[</span><span class="n">CNContactPickerViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="n">controller</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span> <span class="nl">presentViewController</span><span class="p">:</span><span class="n">controller</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">contactPicker:</span><span class="p">(</span><span class="n">CNContactPickerViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">picker</span>
</span><span class='line'>    <span class="nf">didSelectContactProperty:</span><span class="p">(</span><span class="n">CNContactProperty</span> <span class="o">*</span><span class="p">)</span><span class="nv">contactProperty</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">CNContact</span> <span class="o">*</span><span class="n">contact</span> <span class="o">=</span> <span class="n">contactProperty</span><span class="p">.</span><span class="n">contact</span><span class="p">;</span>
</span><span class='line'>  <span class="bp">NSString</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="p">[</span><span class="n">CNContactFormatter</span> <span class="nl">stringFromContact</span><span class="p">:</span><span class="n">contact</span> <span class="nl">style</span><span class="p">:</span><span class="n">CNContactFormatterStyleFullName</span><span class="p">];</span>
</span><span class='line'>  <span class="n">CNPhoneNumber</span> <span class="o">*</span><span class="n">phoneValue</span> <span class="o">=</span> <span class="n">contactProperty</span><span class="p">.</span><span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="bp">NSString</span> <span class="o">*</span><span class="n">phoneNumber</span> <span class="o">=</span> <span class="n">phoneValue</span><span class="p">.</span><span class="n">stringValue</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@--%@&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>CNContactStore</h2>

<p>info.plist添加<code>Privacy - Contacts Usage Description</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">checkAuthorization</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Contact - Check Authorization&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//  status</span>
</span><span class='line'>  <span class="n">CNAuthorizationStatus</span> <span class="n">status</span> <span class="o">=</span>
</span><span class='line'>      <span class="p">[</span><span class="n">CNContactStore</span> <span class="nl">authorizationStatusForEntityType</span><span class="p">:</span><span class="n">CNEntityTypeContacts</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  check authorization</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">status</span> <span class="o">!=</span> <span class="n">CNAuthorizationStatusAuthorized</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Contact - Not Authorized&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">//  request access</span>
</span><span class='line'>    <span class="n">CNContactStore</span> <span class="o">*</span><span class="n">store</span> <span class="o">=</span> <span class="p">[</span><span class="n">CNContactStore</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Contact - Request Authorization&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">[</span><span class="n">store</span>
</span><span class='line'>        <span class="nl">requestAccessForEntityType</span><span class="p">:</span><span class="n">CNEntityTypeContacts</span>
</span><span class='line'>                 <span class="nl">completionHandler</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">granted</span><span class="p">,</span> <span class="bp">NSError</span> <span class="o">*</span><span class="n">_Nullable</span> <span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                   <span class="k">if</span> <span class="p">(</span><span class="n">granted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                     <span class="c1">//  YES</span>
</span><span class='line'>                     <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Contact - Authorized&quot;</span><span class="p">);</span>
</span><span class='line'>                     <span class="p">[</span><span class="nb">self</span> <span class="n">fetchContact</span><span class="p">];</span>
</span><span class='line'>                   <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                     <span class="c1">//  No</span>
</span><span class='line'>                     <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Contact - Not Authorized&quot;</span><span class="p">);</span>
</span><span class='line'>                   <span class="p">}</span>
</span><span class='line'>                 <span class="p">}];</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Contact - Authorized&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">fetchContact</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">fetchContact</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Contact - Fetch Contact&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//  keys</span>
</span><span class='line'>  <span class="bp">NSArray</span> <span class="o">*</span><span class="n">keys</span> <span class="o">=</span> <span class="l">@[</span>
</span><span class='line'>    <span class="n">CNContactPhoneNumbersKey</span><span class="p">,</span>
</span><span class='line'>    <span class="n">CNContactGivenNameKey</span><span class="p">,</span>
</span><span class='line'>    <span class="n">CNContactFamilyNameKey</span>
</span><span class='line'>  <span class="l">]</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//  request</span>
</span><span class='line'>  <span class="n">CNContactFetchRequest</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span>
</span><span class='line'>      <span class="p">[[</span><span class="n">CNContactFetchRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithKeysToFetch</span><span class="p">:</span><span class="n">keys</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//  store</span>
</span><span class='line'>  <span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>  <span class="n">CNContactStore</span> <span class="o">*</span><span class="n">store</span> <span class="o">=</span> <span class="p">[</span><span class="n">CNContactStore</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">store</span>
</span><span class='line'>      <span class="nl">enumerateContactsWithFetchRequest</span><span class="p">:</span><span class="n">request</span>
</span><span class='line'>                                  <span class="nl">error</span><span class="p">:</span><span class="o">&amp;</span><span class="n">error</span>
</span><span class='line'>                             <span class="nl">usingBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">CNContact</span> <span class="o">*</span><span class="n">_Nonnull</span> <span class="n">contact</span><span class="p">,</span>
</span><span class='line'>                                          <span class="kt">BOOL</span> <span class="o">*</span><span class="n">_Nonnull</span> <span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                               <span class="c1">//  contact</span>
</span><span class='line'>                               <span class="bp">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="n">contact</span><span class="p">.</span><span class="n">familyName</span><span class="p">;</span>
</span><span class='line'>                               <span class="bp">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="n">contact</span><span class="p">.</span><span class="n">givenName</span><span class="p">;</span>
</span><span class='line'>                               <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ %@&quot;</span><span class="p">,</span> <span class="n">firstName</span><span class="p">,</span> <span class="n">lastName</span><span class="p">);</span>
</span><span class='line'>                               <span class="c1">//  phone number</span>
</span><span class='line'>                               <span class="k">for</span> <span class="p">(</span><span class="n">CNLabeledValue</span> <span class="o">*</span><span class="n">labeledValue</span> <span class="k">in</span> <span class="n">contact</span>
</span><span class='line'>                                        <span class="p">.</span><span class="n">phoneNumbers</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                 <span class="n">CNPhoneNumber</span> <span class="o">*</span><span class="n">phoneValue</span> <span class="o">=</span> <span class="n">labeledValue</span><span class="p">.</span><span class="n">value</span><span class="p">;</span>
</span><span class='line'>                                 <span class="bp">NSString</span> <span class="o">*</span><span class="n">phoneNumber</span> <span class="o">=</span> <span class="n">phoneValue</span><span class="p">.</span><span class="n">stringValue</span><span class="p">;</span>
</span><span class='line'>                                 <span class="bp">NSString</span> <span class="o">*</span><span class="n">label</span> <span class="o">=</span> <span class="p">[</span><span class="n">CNLabeledValue</span>
</span><span class='line'>                                     <span class="nl">localizedStringForLabel</span><span class="p">:</span><span class="n">labeledValue</span>
</span><span class='line'>                                                                 <span class="p">.</span><span class="n">label</span><span class="p">];</span>
</span><span class='line'>                                 <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ : %@&quot;</span><span class="p">,</span> <span class="n">label</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">);</span>
</span><span class='line'>                               <span class="p">}</span>
</span><span class='line'>                               <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>                             <span class="p">}];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>iOS本地化</h2>

<ol>
<li>Project -> Localizations -> Add Chinese</li>
<li>New File -> Strings File</li>
<li>Strings File -> Utities -> Localization -> Add Chinese</li>
<li>Add Localized String</li>
</ol>


<h2>灯效说明</h2>

<p>继承</p>

<h2>智能家居控制</h2>

<p>分解<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/09/04/ioszhi-shi-xiao-ji-170828/'><a href="http://sxgfxm.github.io/blog/2017/09/04/ioszhi-shi-xiao-ji-170828/">http://sxgfxm.github.io/blog/2017/09/04/ioszhi-shi-xiao-ji-170828/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170821]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/08/28/ioszhi-shi-xiao-ji-170821/"/>
    <updated>2017-08-28T11:39:03+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/08/28/ioszhi-shi-xiao-ji-170821</id>
    <content type="html"><![CDATA[<h2>ipa架构</h2>

<pre><code>IPA File
  Payload
    {appname}.app
      Application Binary
      Mobile Provision File
      Code Signature
      Bundled Resource File
  iTunesArtwork
  iTunesMetadata.plist
</code></pre>

<!-- more -->


<h2>Insecure Local Data Storage</h2>

<ol>
<li>PropertyList files</li>
<li>NSUserDefaults class</li>
<li>KeyChain</li>
<li>CoreData and SQLite databases</li>
</ol>


<h2>Apple Data Protection API</h2>

<ol>
<li>Complete Protection (NSFileProtectionComplete)</li>
<li>Protected Unless Open (NSFileProtectionCompleteUnlessOpen)</li>
<li>Protected Until First User Authentication (NSFileProtectionCompleteUntilFirstUserAuthentication)</li>
<li>No Protection (NSFileProtectionNone)</li>
</ol>


<h2>NSTimeZone</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="bp">NSTimeZone</span> <span class="o">*</span><span class="n">timeZone</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSTimeZone</span> <span class="n">localTimeZone</span><span class="p">];</span>
</span><span class='line'><span class="c1">//  Asia/Shanghai</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">timeZone</span><span class="p">.</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'><span class="c1">//  GMT+8</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span><span class="n">abbreviation</span> <span class="o">=</span> <span class="n">timeZone</span><span class="p">.</span><span class="n">abbreviation</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Prevent Buffer Overflows</h2>

<ol>
<li>Address Space Layout Randomization (ASLR)</li>
<li>Automatic Reference Counting (ARC)</li>
<li>Stack Protectors</li>
</ol>


<h2>System Call</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-(</span><span class="kt">void</span><span class="p">)</span><span class="nf">makeCall:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">phone</span><span class="p">{</span>
</span><span class='line'>  <span class="bp">NSString</span> <span class="o">*</span><span class="n">phoneNumber</span> <span class="o">=</span> <span class="p">[</span><span class="s">@&quot;telprompt://&quot;</span> <span class="nl">stringByAppendingString</span><span class="p">:</span><span class="n">phone</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="nl">openURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="n">phoneNumber</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>NSString to NSURL</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="bp">NSString</span> <span class="o">*</span><span class="n">encodeURL</span> <span class="o">=</span> <span class="p">[</span><span class="n">string</span> <span class="nl">stringByAddingPercentEncodingWithAllowedCharacters</span><span class="p">:[</span><span class="bp">NSCharacterSet</span> <span class="n">URLQueryAllowedCharacterSet</span><span class="p">]];</span>
</span><span class='line'><span class="bp">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="n">encodeURL</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/08/28/ioszhi-shi-xiao-ji-170821/'>http://sxgfxm.github.io/blog/2017/08/28/ioszhi-shi-xiao-ji-170821/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170814]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/08/22/iosxiao-ji-170814/"/>
    <updated>2017-08-22T10:13:36+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/08/22/iosxiao-ji-170814</id>
    <content type="html"><![CDATA[<h2>使用Xcode查看代码作者和提交信息</h2>

<p>切换为“Blame”和“Log”模式即可。</p>

<h2>AVAudioSession</h2>

<p>AVAudioSessionCategoryOptionDefaultToSpeaker：通过扬声器播放声音。<br/>
AVAudioSessionCategoryOptionMixWithOthers：不打断其他App音频播放。</p>

<h2>JSONModel</h2>

<p>下划线key转驼峰key。
<code>[JSONKeyMapper mapperFromUnderscoreCaseToCamelCase]</code>已废弃，
现在使用<code>[JSONKeyMapper mapperForSnakeCase]</code>。</p>

<h2>Acoustic Echo Cancellation</h2>

<p>Audio Unit回声消除。<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/08/22/iosxiao-ji-170814/'><a href="http://sxgfxm.github.io/blog/2017/08/22/iosxiao-ji-170814/">http://sxgfxm.github.io/blog/2017/08/22/iosxiao-ji-170814/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170807]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/08/22/ioszhi-shi-xiao-ji-170807/"/>
    <updated>2017-08-22T10:12:54+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/08/22/ioszhi-shi-xiao-ji-170807</id>
    <content type="html"><![CDATA[<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/08/22/ioszhi-shi-xiao-ji-170807/'>http://sxgfxm.github.io/blog/2017/08/22/ioszhi-shi-xiao-ji-170807/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170731]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/08/07/ioszhi-shi-xiao-ji-170731/"/>
    <updated>2017-08-07T10:03:41+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/08/07/ioszhi-shi-xiao-ji-170731</id>
    <content type="html"><![CDATA[<h2>UIImage Tint Color</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">cell</span><span class="p">.</span><span class="n">icon</span> <span class="nl">sd_setImageWithURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="n">myURL</span><span class="p">]</span> <span class="nl">placeholderImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="n">imageName</span><span class="p">]</span> <span class="nl">options</span><span class="p">:</span><span class="n">SDWebImageRefreshCached</span> <span class="nl">completed</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span><span class="p">,</span> <span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="n">SDImageCacheType</span> <span class="n">cacheType</span><span class="p">,</span> <span class="bp">NSURL</span> <span class="o">*</span><span class="n">imageURL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">cell</span><span class="p">.</span><span class="n">icon</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">image</span> <span class="nl">imageWithRenderingMode</span><span class="p">:</span><span class="n">UIImageRenderingModeAlwaysTemplate</span><span class="p">];</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>调整屏幕亮度</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[[</span><span class="bp">UIScreen</span> <span class="n">mainScreen</span><span class="p">]</span> <span class="nl">setBrightness</span><span class="p">:</span><span class="mf">0.5</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>保持屏幕常亮</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">idleTimerDisabled</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>cell.contentView VS cell</h2>

<p>If you want to customize cells by simply adding additional views, you should add them to the content view so they will be positioned appropriately as the cell transitions into and out of editing mode.</p>

<h2>NSURLSession</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="bp">NSURLSessionConfiguration</span> <span class="o">*</span><span class="n">config</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSURLSessionConfiguration</span> <span class="n">defaultSessionConfiguration</span><span class="p">];</span>
</span><span class='line'><span class="bp">NSURLSession</span> <span class="o">*</span><span class="n">session</span> <span class="o">=</span>
</span><span class='line'>      <span class="p">[</span><span class="bp">NSURLSession</span> <span class="nl">sessionWithConfiguration</span><span class="p">:</span><span class="n">config</span> <span class="nl">delegate</span><span class="p">:</span><span class="nb">self</span> <span class="nl">delegateQueue</span><span class="p">:[</span><span class="bp">NSOperationQueue</span> <span class="n">mainQueue</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">session</span> <span class="nl">dataTaskWithRequest</span><span class="p">:</span><span class="n">request</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">URLSession:</span><span class="p">(</span><span class="bp">NSURLSession</span> <span class="o">*</span><span class="p">)</span><span class="nv">session</span>
</span><span class='line'>                          <span class="nf">task:</span><span class="p">(</span><span class="bp">NSURLSessionTask</span> <span class="o">*</span><span class="p">)</span><span class="nv">task</span>
</span><span class='line'>    <span class="nf">willPerformHTTPRedirection:</span><span class="p">(</span><span class="bp">NSHTTPURLResponse</span> <span class="o">*</span><span class="p">)</span><span class="nv">response</span>
</span><span class='line'>                    <span class="nf">newRequest:</span><span class="p">(</span><span class="bp">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="nv">request</span>
</span><span class='line'>             <span class="nf">completionHandler:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="bp">NSURLRequest</span> <span class="o">*</span><span class="n">_Nullable</span><span class="p">))</span><span class="nv">completionHandler</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;urlsession request %@&quot;</span><span class="p">,</span> <span class="n">request</span><span class="p">.</span><span class="n">URL</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>后台运行</h2>

<p>Target -> Capabilities -> Background Modes -> Audio；<br/>
在info.plist中 添加<code>Required background modes</code> = <code>App plays audio or streams audio/video using AirPlay</code>。<br/>
如果启用后台录音，会有红色显示条。</p>

<h2>应用进入前台或后台通知</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// app启动或者app从后台进入前台都会调用这个方法</span>
</span><span class='line'><span class="p">[[</span><span class="bp">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nl">addObserver</span><span class="p">:</span><span class="nb">self</span> <span class="nl">selector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">applicationBecomeActive</span><span class="p">)</span> <span class="nl">name</span><span class="p">:</span><span class="n">UIApplicationDidBecomeActiveNotification</span> <span class="nl">object</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="c1">// app从后台进入前台都会调用这个方法</span>
</span><span class='line'><span class="p">[[</span><span class="bp">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nl">addObserver</span><span class="p">:</span><span class="nb">self</span> <span class="nl">selector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">applicationBecomeActive</span><span class="p">)</span> <span class="nl">name</span><span class="p">:</span><span class="n">UIApplicationWillEnterForegroundNotification</span> <span class="nl">object</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="c1">// 添加检测app进入后台的观察者</span>
</span><span class='line'><span class="p">[[</span><span class="bp">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nl">addObserver</span><span class="p">:</span><span class="nb">self</span> <span class="nl">selector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">applicationEnterBackground</span><span class="p">)</span> <span class="nl">name</span><span class="p">:</span> <span class="n">UIApplicationDidEnterBackgroundNotification</span> <span class="nl">object</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Logging Malloc Stack</h2>

<p>如果不关闭，会导致大量无法自动清除的系统log，占用巨大磁盘空间。  <p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/08/07/ioszhi-shi-xiao-ji-170731/'><a href="http://sxgfxm.github.io/blog/2017/08/07/ioszhi-shi-xiao-ji-170731/">http://sxgfxm.github.io/blog/2017/08/07/ioszhi-shi-xiao-ji-170731/</a></a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'><a href="http://sxgfxm.github.io">http://sxgfxm.github.io</a></a>
  </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170724]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/07/31/ioszhi-shi-xiao-ji-170724/"/>
    <updated>2017-07-31T10:17:32+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/07/31/ioszhi-shi-xiao-ji-170724</id>
    <content type="html"><![CDATA[<h2>JavaScriptCore</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">webView</span> <span class="nl">stringByEvaluatingJavaScriptFromString</span><span class="p">:</span><span class="s">@&quot;document.getElementsByTagName(&#39;audio&#39;)[0].play()&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>调整button点击区域</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">playBtn</span><span class="p">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="n">UIViewContentModeScaleAspectFit</span><span class="p">;</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">closeBtn</span><span class="p">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="n">UIViewContentModeScaleAspectFit</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">playBtn</span> <span class="nl">setImageEdgeInsets</span><span class="p">:</span><span class="n">UIEdgeInsetsMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">closeBtn</span> <span class="nl">setImageEdgeInsets</span><span class="p">:</span><span class="n">UIEdgeInsetsMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>判断网络状态</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">connected</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NetworkStatus</span> <span class="n">internetStatus</span> <span class="o">=</span> <span class="p">[[</span><span class="n">Reachability</span> <span class="n">reachabilityForInternetConnection</span><span class="p">]</span> <span class="n">currentReachabilityStatus</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">internetStatus</span> <span class="o">!=</span> <span class="n">NotReachable</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/07/31/ioszhi-shi-xiao-ji-170724/'>http://sxgfxm.github.io/blog/2017/07/31/ioszhi-shi-xiao-ji-170724/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170717]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/07/24/ioszhi-shi-xiao-ji-170717/"/>
    <updated>2017-07-24T09:36:53+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/07/24/ioszhi-shi-xiao-ji-170717</id>
    <content type="html"><![CDATA[<h2>Set UITableViewHeaderFooterView backgroundColor transparent</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">backgroundView</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="n">new</span><span class="p">]];</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/07/24/ioszhi-shi-xiao-ji-170717/'>http://sxgfxm.github.io/blog/2017/07/24/ioszhi-shi-xiao-ji-170717/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170710]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/07/15/ioszhi-shi-xiao-ji-170710/"/>
    <updated>2017-07-15T15:08:46+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/07/15/ioszhi-shi-xiao-ji-170710</id>
    <content type="html"><![CDATA[<h2><a href="https://github.com/airbnb/lottie-ios">Lottie</a></h2>

<p>Lottie is a mobile library for Android and iOS that parses Adobe After Effects animations exported as json with bodymovin and renders the vector animations natively on mobile and through React Native!<br/>
Common Animations</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">LOTAnimationView</span> <span class="o">*</span><span class="n">animation</span> <span class="o">=</span> <span class="p">[</span><span class="n">LOTAnimationView</span> <span class="nl">animationNamed</span><span class="p">:</span><span class="s">@&quot;Lottie&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">animation</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">animation</span> <span class="nl">playWithCompletion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">animationFinished</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Do Something</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>UIViewController Transition</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">id</span><span class="o">&lt;</span><span class="bp">UIViewControllerAnimatedTransitioning</span><span class="o">&gt;</span><span class="p">)</span><span class="nf">animationControllerForPresentedController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">presented</span>
</span><span class='line'>                                                                  <span class="nf">presentingController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">presenting</span>
</span><span class='line'>                                                                      <span class="nf">sourceController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">source</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">LOTAnimationTransitionController</span> <span class="o">*</span><span class="n">animationController</span> <span class="o">=</span> <span class="p">[[</span><span class="n">LOTAnimationTransitionController</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithAnimationNamed</span><span class="p">:</span><span class="s">@&quot;vcTransition1&quot;</span>
</span><span class='line'>                                                                                                          <span class="nl">fromLayerNamed</span><span class="p">:</span><span class="s">@&quot;outLayer&quot;</span>
</span><span class='line'>                                                                                                            <span class="nl">toLayerNamed</span><span class="p">:</span><span class="s">@&quot;inLayer&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">animationController</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">id</span><span class="o">&lt;</span><span class="bp">UIViewControllerAnimatedTransitioning</span><span class="o">&gt;</span><span class="p">)</span><span class="nf">animationControllerForDismissedController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">dismissed</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">LOTAnimationTransitionController</span> <span class="o">*</span><span class="n">animationController</span> <span class="o">=</span> <span class="p">[[</span><span class="n">LOTAnimationTransitionController</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithAnimationNamed</span><span class="p">:</span><span class="s">@&quot;vcTransition2&quot;</span>
</span><span class='line'>                                                                                                          <span class="nl">fromLayerNamed</span><span class="p">:</span><span class="s">@&quot;outLayer&quot;</span>
</span><span class='line'>                                                                                                            <span class="nl">toLayerNamed</span><span class="p">:</span><span class="s">@&quot;inLayer&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">animationController</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>导航栏设为透明</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">navigationBar</span> <span class="nl">setBackgroundImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="n">new</span><span class="p">]</span> <span class="nl">forBarMetrics</span><span class="p">:</span><span class="n">UIBarMetricsDefault</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">navigationBar</span> <span class="nl">setShadowImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="n">new</span><span class="p">]];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>导航栏还原</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">navigationBar</span> <span class="nl">setBackgroundImage</span><span class="p">:</span><span class="nb">nil</span> <span class="nl">forBarMetrics</span><span class="p">:</span><span class="n">UIBarMetricsDefault</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">navigationBar</span> <span class="nl">setShadowImage</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Change UITextField Placeholder Color</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="bp">NSString</span> <span class="o">*</span><span class="n">string</span> <span class="o">=</span> <span class="s">@&quot;请输入Wi-Fi名称&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="bp">NSMutableAttributedString</span> <span class="o">*</span><span class="n">attributedString</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSMutableAttributedString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithString</span><span class="p">:</span><span class="n">string</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">attributedString</span> <span class="nl">addAttribute</span><span class="p">:</span><span class="n">NSForegroundColorAttributeName</span> <span class="nl">value</span><span class="p">:[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">]</span> <span class="nl">range</span><span class="p">:</span><span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">string</span><span class="p">.</span><span class="n">length</span><span class="p">)];</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">wifiNameTF</span><span class="p">.</span><span class="n">attributedPlaceholder</span> <span class="o">=</span> <span class="n">attributedString</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>KVO NSKeyValueObservingOptions</h2>

<p>NSKeyValueObservingOptionNew：获取新值<br/>
NSKeyValueObservingOptionOld：获取旧值<br/>
NSKeyValueObservingOptionInitial：获取初始值<br/>
NSKeyValueObservingOptionPrior：获取新旧值</p>

<h2>UITextField nil While Editing</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">textField:</span><span class="p">(</span><span class="bp">UITextField</span><span class="o">*</span><span class="p">)</span><span class="nv">textField</span> <span class="nf">shouldChangeCharactersInRange:</span><span class="p">(</span><span class="n">NSRange</span><span class="p">)</span><span class="nv">range</span> <span class="nf">replacementString:</span><span class="p">(</span><span class="bp">NSString</span><span class="o">*</span><span class="p">)</span><span class="nv">string</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">range</span><span class="p">.</span><span class="n">location</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">string</span><span class="p">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//textField is empty</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>UIKeyboardAppearance</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">textField</span><span class="p">.</span><span class="n">keyboardAppearance</span> <span class="o">=</span> <span class="n">UIKeyboardAppearanceDark</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>UIView Transition Animation</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="bp">UIView</span> <span class="nl">transitionFromView</span><span class="p">:</span><span class="n">view1</span>
</span><span class='line'>                   <span class="nl">toView</span><span class="p">:</span><span class="n">view2</span>
</span><span class='line'>                 <span class="nl">duration</span><span class="p">:</span><span class="mi">2</span>
</span><span class='line'>                  <span class="nl">options</span><span class="p">:</span><span class="n">animationTransitionType</span>
</span><span class='line'>               <span class="nl">completion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">finished</span><span class="p">){</span>
</span><span class='line'>                            <span class="p">[</span><span class="n">view1</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'>                          <span class="p">}];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">view2</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>UIView Fade In Fade Out</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">view</span> <span class="nl">setAlpha</span><span class="p">:</span><span class="mf">0.f</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="bp">UIView</span> <span class="nl">animateWithDuration</span><span class="p">:</span><span class="mf">2.f</span> <span class="nl">delay</span><span class="p">:</span><span class="mf">0.f</span> <span class="nl">options</span><span class="p">:</span><span class="n">UIViewAnimationOptionCurveEaseIn</span> <span class="nl">animations</span><span class="p">:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="c1">//  fade in</span>
</span><span class='line'>    <span class="p">[</span><span class="n">view</span> <span class="nl">setAlpha</span><span class="p">:</span><span class="mf">1.f</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span> <span class="nl">completion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">finished</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="bp">UIView</span> <span class="nl">animateWithDuration</span><span class="p">:</span><span class="mf">2.f</span> <span class="nl">delay</span><span class="p">:</span><span class="mf">0.f</span> <span class="nl">options</span><span class="p">:</span><span class="n">UIViewAnimationOptionCurveEaseInOut</span> <span class="nl">animations</span><span class="p">:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="c1">//  fade out</span>
</span><span class='line'>        <span class="p">[</span><span class="n">view</span> <span class="nl">setAlpha</span><span class="p">:</span><span class="mf">0.f</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reachability</h2>

<p>ReachableViaWiFi</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">reachability</span> <span class="o">=</span> <span class="p">[</span><span class="n">Reachability</span> <span class="n">reachabilityForInternetConnection</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">reachability</span> <span class="n">startNotifier</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">reachability</span> <span class="n">stopNotifier</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wi-Fi Name</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">+</span> <span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">currentWifiName</span> <span class="p">{</span>
</span><span class='line'>  <span class="bp">NSArray</span> <span class="o">*</span><span class="n">ifs</span> <span class="o">=</span> <span class="p">(</span><span class="k">__bridge_transfer</span> <span class="bp">NSArray</span> <span class="o">*</span><span class="p">)</span><span class="n">CNCopySupportedInterfaces</span><span class="p">();</span>
</span><span class='line'>  <span class="bp">NSString</span> <span class="o">*</span><span class="n">ifnam</span> <span class="o">=</span> <span class="p">[</span><span class="n">ifs</span> <span class="n">firstObject</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ifnam</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="bp">NSDictionary</span> <span class="o">*</span><span class="n">info</span> <span class="o">=</span> <span class="p">(</span><span class="k">__bridge_transfer</span> <span class="bp">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="n">CNCopyCurrentNetworkInfo</span><span class="p">((</span><span class="k">__bridge</span> <span class="n">CFStringRef</span><span class="p">)</span><span class="n">ifnam</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">info</span><span class="p">[</span><span class="s">@&quot;SSID&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>NetworkExtension</h2>

<p>Configure VPN tunnels. Customize and extend core networking features.</p>

<h3>Personal VPN</h3>

<p><code>NEVPNManager</code>: is used to create and manage VPN configurations and to control the resulting VPN tunnel connections.<br/>
Non-Personal VPN configurations take precedence over Personal VPN configurations.<br/>
Enable the &ldquo;Personal VPN&rdquo; capability for your app in Xcode.</p>

<h2>UIViewController</h2>

<h2>UINavigationController</h2>

<h2>UITabBarController</h2>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/07/15/ioszhi-shi-xiao-ji-170710/'>http://sxgfxm.github.io/blog/2017/07/15/ioszhi-shi-xiao-ji-170710/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170703]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/07/10/ioszhi-shi-xiao-ji-170703/"/>
    <updated>2017-07-10T11:09:16+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/07/10/ioszhi-shi-xiao-ji-170703</id>
    <content type="html"><![CDATA[<h2>CAKeyFrameAnimation</h2>

<pre><code>- (CAKeyframeAnimation *)circleShake {
  if (!_circleShake) {
    CGFloat baseX = self.circleMask.position.x;
    _circleShake = [CAKeyframeAnimation animationWithKeyPath:@"position.x"];
    _circleShake.keyTimes = @[
      @0,
      @(0.1 / 0.8),
      @(0.2 / 0.8),
      @(0.3 / 0.8),
      @(0.5 / 0.8),
      @(0.76 / 0.8)
    ];
    _circleShake.values = @[
      @(baseX),
      @(baseX - 11),
      @(baseX + 11),
      @(baseX - 11),
      @(baseX + 11),
      @(baseX)
    ];
    _circleShake.duration = 0.8;
    _circleShake.removedOnCompletion = YES;
    _circleShake.fillMode = kCAFillModeForwards;
  }
  return _circleShake;
}
</code></pre>

<!-- more -->


<h2>Identify CAAnimation within the aniamtionDidStop delegate</h2>

<p>The animation is <strong>copied</strong> before being added to the layer, so any subsequent modifications to <code>anim</code> will have no affect unless it is added to another layer.<br/>
Use <code>animationForKey:</code> to identify.<br/>
Create one animation and add to multiple layers.</p>

<h2>Apply changes when animation finished</h2>

<pre><code>animation.removedOnCompletion = NO;
animation.fillMode = kCAFillModeForwards;
</code></pre>

<h2>Resume changes when animation finished</h2>

<pre><code>animation.removedOnCompletion = NO;
animation.fillMode = kCAFillModeBackwards;
</code></pre>

<h2>Use CAAnimationGroup to run animations cocurrently</h2>

<pre><code>- (CAAnimationGroup *)circleBig {
  if (!_circleBig) {
    _circleBig = [CAAnimationGroup animation];
    CABasicAnimation *circleBig =
        [CABasicAnimation animationWithKeyPath:@"path"];
    circleBig.fromValue = (__bridge id)self.circleMask.path;
    circleBig.toValue =
        (__bridge id)[UIBezierPath bezierPathWithArcCenter:self.centerPoint
                                                    radius:12.5
                                                startAngle:0
                                                  endAngle:M_PI * 2
                                                 clockwise:YES]
            .CGPath;
    circleBig.duration = self.spreadDuration;
    circleBig.removedOnCompletion = NO;
    circleBig.fillMode = kCAFillModeForwards;
    circleBig.timingFunction = [CAMediaTimingFunction
        functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
    CABasicAnimation *changeWidth =
        [CABasicAnimation animationWithKeyPath:@"lineWidth"];
    changeWidth.fromValue = @(self.circleMask.lineWidth);
    changeWidth.toValue = @(5);
    changeWidth.duration = self.spreadDuration;
    changeWidth.removedOnCompletion = NO;
    changeWidth.fillMode = kCAFillModeForwards;
    _circleBig.animations = @[ circleBig, changeWidth ];
  }
  return _circleBig;
}
</code></pre>

<h2>TabBar背景设为透明色</h2>

<pre><code>[[UITabBar appearance] setShadowImage:[WWImageUtil imageWithColor:[UIColor clearColor]]];
[[UITabBar appearance] setBackgroundImage:[WWImageUtil imageWithColor:[UIColor clearColor]]];
[UITabBar appearance].translucent = YES;
</code></pre>

<h2>TabBar去除黑线</h2>

<pre><code>[[UITabBar appearance] setClipsToBounds:YES];
</code></pre>

<h2>self.title</h2>

<p><code>self.title</code>：同时设置导航栏和tabBar的title；<br/>
<code>self.navigationItem.title</code>：设置导航栏title；<br/>
<code>self.tabBarItem.title</code>：设置tabBartitle。</p>

<h2>InHouse 和 Debug配置不同</h2>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/07/10/ioszhi-shi-xiao-ji-170703/'>http://sxgfxm.github.io/blog/2017/07/10/ioszhi-shi-xiao-ji-170703/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170626]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/07/03/ioszhi-shi-xiao-ji-170626/"/>
    <updated>2017-07-03T09:09:47+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/07/03/ioszhi-shi-xiao-ji-170626</id>
    <content type="html"><![CDATA[<h2>隐藏tabBar</h2>

<p><code>self.tabBarController.tabBar.hidden=YES;</code></p>

<h2>UIView animate height from bottom to top</h2>

<p>Increase the height while decreasing the origin.y by the same amount.</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/07/03/ioszhi-shi-xiao-ji-170626/'>http://sxgfxm.github.io/blog/2017/07/03/ioszhi-shi-xiao-ji-170626/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170619]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/06/26/ioszhi-shi-xiao-ji-170619/"/>
    <updated>2017-06-26T11:57:15+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/06/26/ioszhi-shi-xiao-ji-170619</id>
    <content type="html"><![CDATA[<h2>Enable file sharing</h2>

<p>Application Supports iTunes file sharing = YES</p>

<h2>Image Slicing</h2>

<p>使用Xcode Image Slicing图片需为标准的PNG图片。</p>

<h2>TabBar</h2>

<p>高度49</p>

<!-- more -->


<h2>UIPageViewController</h2>

<p>子controller并不会被缩放，而是从上到下布局，可能被截断。</p>

<pre><code>-(void)setupPageController{
  self.pageController =
      [[UIPageViewController alloc] initWithTransitionStyle:UIPageViewControllerTransitionStyleScroll
                                      navigationOrientation:UIPageViewControllerNavigationOrientationVertical
                                                    options:options];
  self.pageController.view.frame = CGRectMake(0, 64, kScreen_Width, kScreen_Height - 64 - 49);
  self.pageController.dataSource = self;
  self.pages = @[ self.mainVC, self.bottomVC ];
  [self.pageController setViewControllers:@[ self.pages.firstObject ]
                                direction:UIPageViewControllerNavigationDirectionForward
                                 animated:YES
                               completion:nil];
  [self addChildViewController:self.pageController];
  [self.view addSubview:self.pageController.view];
}

#pragma mark - UIPageViewControllerDataSource
- (UIViewController *)pageViewController:(UIPageViewController *)pageViewController
      viewControllerBeforeViewController:(UIViewController *)viewController {
  if ([viewController isKindOfClass:[ViewController1 class]]) {
    return nil;
  }
  if ([viewController isKindOfClass:[ViewController2 class]]) {
    return self.pages[0];
  }
  return nil;
}

- (UIViewController *)pageViewController:(UIPageViewController *)pageViewController
       viewControllerAfterViewController:(UIViewController *)viewController {
  if ([viewController isKindOfClass:[ViewController1 class]]) {
    return self.pages[1];
  }
  if ([viewController isKindOfClass:[ViewController2 class]]) {
    return nil;
  }
  return nil;
}
</code></pre>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/06/26/ioszhi-shi-xiao-ji-170619/'>http://sxgfxm.github.io/blog/2017/06/26/ioszhi-shi-xiao-ji-170619/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170612]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/06/16/ioszhi-shi-xiao-ji-170612/"/>
    <updated>2017-06-16T14:08:12+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/06/16/ioszhi-shi-xiao-ji-170612</id>
    <content type="html"><![CDATA[<h2>MBProgressHUD需要在主线程调用</h2>

<p>UI在主线程操作。</p>

<!-- more -->


<h2>引入库</h2>

<p><code>#import &lt;&gt;</code>: global include<br/>
<code>#import ""</code>: local include<br/>
<code>#import</code>: only include once<br/>
<code>#include</code>: may recursive include<br/>
<code>@import</code>: done automatically</p>

<h2>Edit Scheme</h2>

<p>定义不同的宏</p>

<h2>NSAssert</h2>

<p>多用断言</p>

<h2>打包和解包</h2>

<p>打包：头 + 长度 + 内容。</p>

<pre><code>- (NSData *)packageData:(NSData *)data {
  NSAssert(data &amp;&amp; data.length &gt; 0, @"Data cannot be empty");

  NSMutableData *payload = [NSMutableData data];
  int length = (int)data.length;
  [payload appendBytes:kMagicHeader length:4];
  [payload appendBytes:&amp;length length:4];
  [payload appendData:data];

  return payload;
}
</code></pre>

<p>解包：取头 + 取长度 + 取内容。</p>

<pre><code>- (void)parseData:(NSData *)data {
  @synchronized(self) {
    [self.writeBuffer appendData:data];
    while (self.writeBuffer.length - self.writeBufferOffset &gt; 8) {
      // Parse header
      char header[4];
      [self.writeBuffer getBytes:header range:NSMakeRange(self.writeBufferOffset, 4)];
      if (header[0] != kMagicHeader[0] || header[1] != kMagicHeader[1] || header[2] != kMagicHeader[2] ||
          header[3] != kMagicHeader[3]) {
        NSLog(@"Invalid magic header");
        self.writeBufferOffset += 1;
        continue;
      }

      // Parse length
      int length;
      [self.writeBuffer getBytes:&amp;length range:NSMakeRange(self.writeBufferOffset + 4, 4)];

      // Parse payload
      if (self.writeBuffer.length - self.writeBufferOffset - 8 &lt; length) {
        break;
      }
      NSData *payload = [NSData dataWithBytes:[self.writeBuffer bytes] + self.writeBufferOffset + 8 length:length];
      if (self.delegate) {
        [self.delegate onIncomingData:payload];
      }
      self.writeBufferOffset = self.writeBufferOffset + 8 + length;
      if (self.writeBufferOffset &gt;= self.writeBuffer.length) {
        self.writeBuffer = [[NSMutableData alloc] init];
        self.writeBufferOffset = 0;
      }
    }
  }
}
</code></pre>

<h2>NSNetServiceBrowser</h2>

<p>扫描service。</p>

<pre><code>-(void)start{
  NSNetServiceBrowser *browser = [[NSNetServiceBrowser alloc] init];
  browser.delegate = self;
  [browser searchForServicesOfType:@"_http._tcp." inDomain:@""];
}

- (void)netServiceBrowser:(NSNetServiceBrowser *)aNetServiceBrowser
           didFindService:(NSNetService *)aNetService
               moreComing:(BOOL)moreComing {
  if ([self.serviceTypes containsObject:aNetService.name]) {
    NSLog(@"Found a service: %@", aNetService);
    aNetService.delegate = self;
    [aNetService resolveWithTimeout:5];
  }
}

- (void)netServiceBrowser:(NSNetServiceBrowser *)aNetServiceBrowser
         didRemoveService:(NSNetService *)aNetService
               moreComing:(BOOL)moreComing {
}

- (void)netServiceDidResolveAddress:(NSNetService *)netService {
  if ([self.serviceTypes containsObject:netService.name]) {
    [self.delegate serviceAdded:netService];
  }
  NSURL *serviceURL = [NSURL URLWithString:[NSString stringWithFormat:@"http://%@:%li", netService.hostName, (long)netService.port]];
  NSLog(@"Resolved address for service %@: %@", netService, serviceURL);
}

- (void)netService:(NSNetService *)sender didNotResolve:(NSDictionary *)errorDict {
  NSLog(@"Couldn't resolve address for service %@: %@", sender, errorDict);
}
</code></pre>

<h2>Compress files and folder</h2>

<p><strong>Zip</strong></p>

<pre><code>zip -r -X archive_name.zip folder_to_compress
unzip archive_name.zip
</code></pre>

<h2>Upload a file to Google Drive from the command line</h2>

<p>Install <a href="https://github.com/prasmussen/gdrive">gdrive</a>, a command line utility for interacting with Google Drive.</p>

<pre><code>brew install gdrive
</code></pre>

<pre><code>gdrive list
gdrive download file_name
gdrive upload file_name
</code></pre>

<h2>Open a certain folder in Atom</h2>

<pre><code>cd folder_path
atom .
</code></pre>

<h2>AFHTTPSessionManager</h2>

<pre><code>AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
  manager.responseSerializer = [AFHTTPResponseSerializer serializer];
  [manager GET:kXGFeedbackURL
      parameters:nil
      success:^(NSURLSessionDataTask *_Nonnull task, id _Nonnull responseObject) {
        NSError *error = nil;
        self.dataSource = [[XGFeedbackResponse alloc] initWithData:responseObject error:&amp;error];
        if (error) {
          DDLogDebug(@"XG - Feedback response error %@", error.localizedDescription);
        }
        DDLogDebug(@"XG - Feedback response %@", self.dataSource);
      }
      failure:^(NSURLSessionDataTask *_Nullable task, NSError *_Nonnull error) {
        DDLogDebug(@"XG - Feedback fail %@", error.localizedDescription);
      }];
</code></pre>

<h2>JSONModel</h2>

<pre><code>#import &lt;JSONModel/JSONModel.h&gt;

@protocol XGFeedbackItem;
@protocol XGFeedbackCategory;

@interface XGFeedbackItem : JSONModel

@property(nonatomic, strong) NSString *cn;
@property(nonatomic, strong) NSString *en;
@property(nonatomic, strong) NSString *tw;

@end

@interface XGFeedbackCategory : JSONModel

@property(nonatomic, strong) XGFeedbackItem *title;
@property(nonatomic, strong) NSArray&lt;XGFeedbackItem *&gt;&lt;XGFeedbackItem&gt; *detail;
@property(nonatomic, assign) BOOL multiple;

@end

@interface XGFeedbackResponse : JSONModel

@property(nonatomic, strong) NSString *product;
@property(nonatomic, strong) NSArray&lt;XGFeedbackCategory *&gt;&lt;XGFeedbackCategory&gt; *content;

@end
</code></pre>

<h2>获取系统语言</h2>

<pre><code>NSString *language = [[NSLocale preferredLanguages] firstObject];
  if ([language hasPrefix:@"zh-Hans"]) {
    return self.cn;
  } else if ([language hasPrefix:@"zh-Hant"]) {
    return self.tw;
  } else {
    return self.en;
  }
</code></pre>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/06/16/ioszhi-shi-xiao-ji-170612/'>http://sxgfxm.github.io/blog/2017/06/16/ioszhi-shi-xiao-ji-170612/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ComponentKit Tutorial]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/06/13/componentkit-tutorial/"/>
    <updated>2017-06-13T16:23:00+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/06/13/componentkit-tutorial</id>
    <content type="html"><![CDATA[<h2>What&rsquo;s Component ?</h2>

<p>Components are <strong>immutable objects</strong> that specify how to configure views.<br/>
A component is a fixed description that can be used to paint a view but that is <strong>not a view itself</strong>.</p>

<!-- more -->


<h2>What&rsquo;s Special ?</h2>

<p><strong>Declarative</strong>: You directly declare the hierarchy of the component from up to down. It&rsquo;s different from what we used to layout views. It turns to <strong>layout your children</strong>, not <strong>layout yourself</strong>.<br/>
<strong>Functional</strong>: Data flows in one direction. Methods take data models and return totally <strong>immutable</strong> components. When state changes, ComponentKit re-renders from the root and reconciles the two component trees from the top with as few changes to the view hierarchy as possible. Cause of one direction data flow, you can focus on how to display the model and simply write unit test for the component.<br/>
<strong>Composable</strong>: A component is ofen composed of other components, building up a component hierarchy that describes a user interface. You can esaily reuse a component just in one line.</p>

<h2>What&rsquo;s Limitation ？</h2>

<p><strong>ListViews</strong>: ComponetKit is optimized to work well with a <strong>UICollectionView</strong>, and with more effort for <strong>UITableView</strong>. It&rsquo;s not efficient in other situation.<br/>
<strong>Gestures</strong>: ComponetKit can simply handle tap gesture but it&rsquo;s hard to implement more complicated gestures like panning, pinching, swiping and so on.<br/>
<strong>Animation</strong>: CKComponent forms a declarative mapping from model to view configuration. Animations should be handled fullyi n the view layer instead of inside Components.<br/>
<strong>LearningCost</strong>: ComponetKit is developed in C++. It will be difficult when you dig into if you are not familiar with C++. You have to get used to <strong>Reactive Philosophy</strong>.</p>

<h2>How to Define a Component ?</h2>

<p>Avoid subclassing <code>CKComponent</code> directly. Instead, subclassing <code>CKCompositeComponent</code>.<br/>
A &ldquo;composite component&rdquo; simply wraps another component, hiding its implementation details from the outside world.<br/>
Steps to define a component:  <br/>
1. Define the model;<br/>
2. Define a class inherit from <code>CKCompositeComponent</code>, and change the suffix from <code>.m</code> to <code>.mm</code>, because ComponetKit is developed in C++;<br/>
3. Add a constructor method use <code>+newWith...</code>;<br/>
4. Implement the <code>+newWith...</code> method by directly declare the hierarchy of the component.<br/>
5. Anywhere using component, the suffix of the implementation file should also be <code>.mm</code>.</p>

<p>An example to implement a custom VPADateComponent.</p>

<pre><code>@implementation VPADateComponent

//  Data flows in one direction. Component is immutable.
+(instancetype)newWithDateModel:(VPADateModel *)dateModel{
  if (!dateModel) {
    return nil;
  }
  //  Directly declare the hierarchy of the component from up to down.
  //  VPADateComponent is composed of CKInsetComponent, CKCenterLayoutComponent and CKLabelComponent and they are alse reuseable.
  return [super newWithComponent:[CKInsetComponent
                                  newWithInsets:{.left = 10, .top = 10, .right = 10, .bottom = 10}
                                  component:[CKCenterLayoutComponent
                                             newWithCenteringOptions:CKCenterLayoutComponentCenteringXY
                                             sizingOptions:CKCenterLayoutComponentSizingOptionDefault
                                             child:[CKLabelComponent
                                                    newWithLabelAttributes:{
                                                      .string = formatDate(dateModel.date),
                                                      .font = [UIFont systemFontOfSize:12],
                                                      .color = [UIColor whiteColor]
                                                    }
                                                    viewAttributes:{
                                                      {@selector(setBackgroundColor:),[UIColor clearColor]},
                                                      {@selector(setUserInteractionEnabled:), @NO}
                                                    }
                                                    size:{}]
                                             size:{}]]];
}

static NSString* formatDate(NSDate* date){
  NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
  formatter.dateFormat = @"yyyy-MM-dd hh:mm:ss";
  return [formatter stringFromDate:date];
}

@end
</code></pre>

<h2>Common UI Components</h2>

<h3>CKComponent</h3>

<p>The base class of all Components. You can never directly subclass <code>CKComponent</code>.<br/>
Constructor:</p>

<pre><code>/**
 @param view A struct describing the view for this component. Pass {} to specify that no view should be created.
 @param size A size constraint that should apply to this component. Pass {} to specify no size constraint.
 */
+ (instancetype)newWithView:(const CKComponentViewConfiguration &amp;)view
                       size:(const CKComponentSize &amp;)size;
</code></pre>

<p>Exmaple:</p>

<pre><code>CKComponent *component = [CKComponent
  newWithView:{
    [UIView class],
    {
      //  set common properties of the view
      {@selector(setBackgroundColor:),[UIColor redColor]},
      //  set user interaction
      {@selector(setUserInteractionEnabled:), @YES},
      //  set tap gesture
      {CKComponentTapGestureAttribute(@selector(tapAction))},
      //  set layer properties
      {CKComponentViewAttribute::LayerAttribute(@selector(setCornerRadius:)), @10.0}
    }
  }
  size:{50,50}];

- (void)tapAction{
  //  add tap action here
}
</code></pre>

<h3>CKCompositeComponent</h3>

<p><code>CKCompositeComponent</code> allows you to hide your implementation details and avoid subclassing layout components like <code>CKStackLayoutComponent</code>. In almost all cases, you should subclass <code>CKCompositeComponent</code> instead of subclassing any other class directly. This hides your layout implementation details from the outside world.</p>

<h3>CKLabelComponent</h3>

<p>CKLabelComponent is a simplified text component that just displays NSStrings.<br/>
Constructor:</p>

<pre><code>/**
 @param attributes The content and styling information for the text component.
 @param viewAttributes These are passed directly to CKTextComponent and its backing view.
 @param size The component size or {} for the default which is for the layout to take the maximum space available.
 */
+ (instancetype)newWithLabelAttributes:(const CKLabelAttributes &amp;)attributes
                        viewAttributes:(const CKViewComponentAttributeValueMap &amp;)viewAttributes
                                  size:(const CKComponentSize &amp;)size;
</code></pre>

<p>Example:</p>

<pre><code>CKLabelComponent *labelComponent = [CKLabelComponent
  newWithLabelAttributes:{
    .string = @"Lable Component",
    .color = [UIColor blackColor],
    .font = [UIFont systemFontOfSize:17],
    .alignment = NSTextAlignmentLeft
  }
  viewAttributes:{
    {@selector(setBackgroundColor:),[UIColor clearColor]},
    {@selector(setUserInteractionEnabled:), @NO}
  }
  size:{.maxWidth = 250}]
</code></pre>

<h3>CKButtonCompoent</h3>

<p>A component that creates a UIButton.<br/>
Constructor:</p>

<pre><code>/**
 This component chooses the smallest size within its SizeRange that will fit its content. If its max size is smaller
 than the size required to fit its content, it will be truncated.
 */
+ (instancetype)newWithTitles:(CKContainerWrapper&lt;std::unordered_map&lt;UIControlState, NSString *&gt;&gt; &amp;&amp;)titles
                  titleColors:(CKContainerWrapper&lt;std::unordered_map&lt;UIControlState, UIColor *&gt;&gt; &amp;&amp;)titleColors
                       images:(CKContainerWrapper&lt;std::unordered_map&lt;UIControlState, UIImage *&gt;&gt; &amp;&amp;)images
             backgroundImages:(CKContainerWrapper&lt;std::unordered_map&lt;UIControlState, UIImage *&gt;&gt; &amp;&amp;)backgroundImages
                    titleFont:(UIFont *)titleFont
                     selected:(BOOL)selected
                      enabled:(BOOL)enabled
                       action:(const CKTypedComponentAction&lt;UIEvent *&gt; &amp;)action
                         size:(const CKComponentSize &amp;)size
   accessibilityConfiguration:(CKButtonComponentAccessibilityConfiguration)accessibilityConfiguration;
</code></pre>

<p>Example:</p>

<pre><code>CKButtonComponent *buttonComponent = [CKButtonComponent
  newWithTitles:{
    {UIControlStateNormal,@"button"}
  }
  titleColors:{
    {UIControlStateNormal,[UIColor whiteColor]}
  }
  images:{}
  backgroundImages:{}
  titleFont:[UIFont systemFontOfSize:20]
  selected:NO
  enabled:YES
  action:{scope,@selector(tapAction)}
  size:{}
  attributes:{
    {@selector(setBackgroundColor:),[UIColor yellowColor]}
  }
  accessibilityConfiguration:{}]

- (void)tapAction{
  //  add tap action here
}
</code></pre>

<h3>CKImageComponent</h3>

<p>A component that displays an image using UIImageView.<br/>
Constructor:</p>

<pre><code>/**
 Uses a static layout with the given image size and applies additional attributes.
 */
+ (instancetype)newWithImage:(UIImage *)image
                  attributes:(const CKViewComponentAttributeValueMap &amp;)attributes
                        size:(const CKComponentSize &amp;)size;
</code></pre>

<p>Example:</p>

<pre><code>CKImageComponent *imageComponent = [CKImageComponent
  newWithImage:[UIImage imageNamed:imageName]
  attributes:{
    {@selector(setUserInteractionEnabled:), @NO}
  }
  size:{40, 40}]]
</code></pre>

<h2>Common Layout Components</h2>

<p>ComponentKit includes a library of components that can be composed to declaratively specify a layout.</p>

<h3>CKStackLayoutComponent</h3>

<p>A simple layout component that stacks a list of children vertically or horizontally.</p>

<p>Constructor:</p>

<pre><code>/**
 @param view A view configuration, or {} for no view.
 @param size A size, or {} for the default size.
 @param style Specifies how children are laid out.
 @param children A vector of children components.
 */
+ (instancetype)newWithView:(const CKComponentViewConfiguration &amp;)view
                       size:(const CKComponentSize &amp;)size
                      style:(const CKStackLayoutComponentStyle &amp;)style
                   children:(CKContainerWrapper&lt;std::vector&lt;CKStackLayoutComponentChild&gt;&gt; &amp;&amp;)children;
</code></pre>

<p>Exmaple:</p>

<pre><code>CKStackLayoutComponent *stackComponent = [CKStackLayoutComponent
  newWithView:{}
  size:{}
  style:{.direction = CKStackLayoutDirectionVertical, .alignItems = CKStackLayoutAlignItemsStretch}
  children:{
    {labelComponent},
    {buttonComponent},
    {imageComponent}
  }];
</code></pre>

<h3>CKInsetComponent</h3>

<p>A component that wraps another component, applying insets around it.<br/>
If the child component has a size specified as a percentage, the percentage is resolved against this component&rsquo;s parent size <strong>after</strong> applying insets.<br/>
CKInsetComponent&rsquo;s child behaves similarly to &ldquo;box-sizing: border-box&rdquo;. <br/>
Constructor:</p>

<pre><code>/**
 @param view Passed to CKComponent +newWithView:size:. The view, if any, will extend outside the insets.
 @param insets The amount of space to inset on each side.
 @param component The wrapped child component to inset. If nil, this method returns nil.
 */
+ (instancetype)newWithView:(const CKComponentViewConfiguration &amp;)view
                     insets:(UIEdgeInsets)insets
                  component:(CKComponent *)component;
</code></pre>

<p>Example:</p>

<pre><code>CKInsetComponent *insetComponent = [CKInsetComponent
  newWithView:{}
  insets:{.left = 10, .top = 10, .right = 10, .bottom = 10}
  component: labelComponent];
</code></pre>

<h3>CKCenterLayoutComponent</h3>

<p>Lays out a single child component and position it so that it is centered into the layout bounds.<br/>
Constructor:</p>

<pre><code>/**
 @param centeringOptions, see CKCenterLayoutComponentCenteringOptions.
 @param sizingOptions, see CKCenterLayoutComponentSizingOptions.
 @param child The child to center.
 @param size The component size or {} for the default which is for the layout to take the maximum space available.
 */
+ (instancetype)newWithCenteringOptions:(CKCenterLayoutComponentCenteringOptions)centeringOptions
                          sizingOptions:(CKCenterLayoutComponentSizingOptions)sizingOptions
                                  child:(CKComponent *)child
                                   size:(const CKComponentSize &amp;)size;
</code></pre>

<p>Exmaple:</p>

<pre><code>CKCenterLayoutComponent * centerComponent = [CKCenterLayoutComponent
  newWithCenteringOptions:CKCenterLayoutComponentCenteringXY
  sizingOptions:CKCenterLayoutComponentSizingOptionDefault
  child:labelComponent
  size:{}];
</code></pre>

<h3>CKOverlayLayoutComponent</h3>

<p>This component lays out a single component and then overlays a component on top of it streched to its size.<br/>
Constructor:</p>

<pre><code>+ (instancetype)newWithComponent:(CKComponent *)component
                         overlay:(CKComponent *)overlay;
</code></pre>

<p>Exmaple:</p>

<pre><code>CKOverlayLayoutComponent *overlayComponent = [CKOverlayLayoutComponent
  newWithComponent: imageComponent
  overlay: labelComponent];
</code></pre>

<h3>CKBackgroundLayoutComponent</h3>

<p>Lays out a single child component, then lays out a background component behind it stretched to its size.<br/>
Constructor:</p>

<pre><code>/**
 @param component A child that is laid out to determine the size of this component. If this is nil, then this method
        returns nil.
 @param background A child that is laid out behind it. May be nil, in which case the background is omitted.
 */
+ (instancetype)newWithComponent:(CKComponent *)component
                      background:(CKComponent *)background;
</code></pre>

<p>Exmaple:</p>

<pre><code>CKBackgroundLayoutComponent *backgroundComponent = [CKBackgroundLayoutComponent
  newWithComponent: labelComponent
  background: imageComponent];
</code></pre>

<h3>CKStaticLayoutComponent</h3>

<p>A component that positions children at fixed positions.<br/>
Computes a size that is the union of all childrens' frames.<br/>
Constructor:</p>

<pre><code>@param view Passed to the super class initializer.
@param children Children to be positioned at fixed positions.
*/
+ (instancetype)newWithView:(const CKComponentViewConfiguration &amp;)view
                      size:(const CKComponentSize &amp;)size
                  children:(CKContainerWrapper&lt;std::vector&lt;CKStaticLayoutComponentChild&gt;&gt; &amp;&amp;)children;
</code></pre>

<p>Exmaple:</p>

<pre><code>CKStaticLayoutComponent *staticComponent = [CKStaticLayoutComponent
  newWithView:{}
  size:{}
  children:{
    {labelComponent},
    {buttonComponent},
    {imageComponent}
  }];
</code></pre>

<h3>CKRatioLayoutComponent</h3>

<p>For when the content should respect a certain inherent ratio but can be scaled (think photos or videos).<br/>
The ratio passed is the ratio of height / width you expect.<br/>
Constructor:</p>

<pre><code>+ (instancetype)newWithRatio:(CGFloat)ratio
                        size:(const CKComponentSize &amp;)size
                   component:(CKComponent *)component;
</code></pre>

<p>Exmaple:</p>

<pre><code>CKRatioLayoutComponent *ratioComponent = [CKRatioLayoutComponent
  newWithRatio:0.5
  size:{}
  component:imageComponent];
</code></pre>

<h2>Apply in UICollectionView</h2>

<p>The collection view in ComponentKit is really different from the collection view in UIKit.</p>

<p>The UIKit way to add content to a collection view is:  <br/>
1. Tell the <code>UICollectionView</code> to add/insert/update items or sections.<br/>
2. Synchronously, the <code>UICollectionView</code> ask its data source for number of items, sections and layout info.<br/>
3. Depending on whether or not the updated index paths are visible the <code>UICollectionView</code> will Synchronously call <code>cellForItemAtIndexPath:</code>.<br/>
4. Finally, the data source returns a configured cell for this index path.</p>

<p>The ComponentKit uses an idiom that is more &ldquo;reactive&rdquo;:  <br/>
1. Tell the <code>CKCollectionViewTransactionalDataSource</code> to add/insert/update items or sections.<br/>
2. Asynchronously, and in the background, computes the corresponding components.<br/>
3. When the computation is done, apply the changes to the  <code>UICollectionView</code>.</p>

<p>ComponentKit really shines when used with a <code>UICollectionView</code>:  <br/>
1. <strong>Automatic reuse</strong>. You just need to setup the components and ComponentKit will automaitc reuse and reconfiguration.<br/>
2. <strong>Flexible height</strong>. You don&rsquo;t have to compute the height of each items yourself.<br/>
3. <strong>Scroll performance</strong>. ComponentKit addresses common scroll performance issues holistically.<br/>
4. <strong>Simple to use</strong>. You just need to care about two things, <strong>manipulating data</strong> and <strong>providing components</strong>.</p>

<p>Steps to use ComponentKit in <code>UICollectionView</code>:</p>

<p>1、ViewController()<CKComponentProvider>
ViewController需要遵守<code>CKComponentProvider</code>协议，实现<code>+componentForModel: context:</code>方法，将model转换为component。<br/>
在该方法中，通过不同类型的model返回不同类型的component。</p>

<pre><code>+ (CKComponent *)componentForModel:(id&lt;NSObject&gt;)model
                           context:(id&lt;NSObject&gt;)context {
  if ([model isKindOfClass:[NewsModel class]]) {
    return [NewsComponent newWithNewsModel:model context:context];
  }
  return nil;
}
</code></pre>

<p>2、FlowLayout
创建<code>UICollectionViewFlowLayout</code>对象，设置滑动方向、间距参数等。</p>

<pre><code>UICollectionViewFlowLayout *flowLayout = [[UICollectionViewFlowLayout alloc] init];
[flowLayout setScrollDirection:UICollectionViewScrollDirectionVertical];
[flowLayout setMinimumInteritemSpacing:0];
[flowLayout setMinimumLineSpacing:0];
</code></pre>

<p>3、CollectionView
创建<code>UICollectionView</code>。</p>

<pre><code>self.collectionView = [[UICollectionView alloc] initWithFrame:self.view.bounds collectionViewLayout:flowLayout];
self.collectionView.delegate = self;
self.collectionView.backgroundColor = [UIColor blackColor];
[self.view addSubview:self.collectionView];
</code></pre>

<p>4、Item size range
Item size range。通过设置<code>CKComponentSizeRangeFlexibleHeight</code>使item的高度自适应。</p>

<pre><code>const CKSizeRange sizeRange = [[CKComponentFlexibleSizeRangeProvider
      providerWithFlexibility:CKComponentSizeRangeFlexibleHeight]
     sizeRangeForBoundingSize:self.collectionView.bounds.size];
</code></pre>

<p>5、Context
Context可以是任何不可变对象，创建component时的不可变上下文信息，比如设备类型，图片下载器。<br/>
<code>MyContext *context = [MyContext new];</code><br/>
预先在主线程加载图片。</p>

<p>6、Configuration
<code>CKTransactionalComponentDataSourceConfiguration</code>，需要 <strong>ComponentProvider</strong>，<strong>sizeRange</strong>，<strong>context</strong> 三个参数。</p>

<pre><code>CKTransactionalComponentDataSourceConfiguration *configuration =
      [[CKTransactionalComponentDataSourceConfiguration alloc]
          initWithComponentProvider:[self class]
                            context:context
                          sizeRange:sizeRange];
</code></pre>

<p>7、DataSource
<code>CKCollectionViewTransactionalDataSource</code>,需要 <strong>collectionView</strong>，<strong>supplementaryViewDataSource</strong>，<strong>configuration</strong> 三个参数。</p>

<pre><code>self.dataSource = [[CKCollectionViewTransactionalDataSource alloc]
           initWithCollectionView:self.collectionView
      supplementaryViewDataSource:nil
                    configuration:configuration];
</code></pre>

<p>8、Initial changeset
需要初始化DataSource，即向DataSource中添加Section。</p>

<pre><code>CKTransactionalComponentDataSourceChangeset *initialChangeset =
  [[[CKTransactionalComponentDataSourceChangesetBuilder
      transactionalComponentDataSourceChangeset]
      withInsertedSections:[NSIndexSet indexSetWithIndex:0]] build];
[self.dataSource applyChangeset:initialChangeset
                           mode:CKUpdateModeAsynchronous
                       userInfo:nil];
</code></pre>

<p>9、Insert/Update items
向DataSource中插入Items才能显示。</p>

<pre><code>NSMutableDictionary&lt;NSIndexPath *, NewsModel *&gt; *items = [NSMutableDictionary new];
for (NSInteger i = 0; i &lt; 50; i++) {
  NewsModel *newsModel = [[NewsModel alloc] init];
  newsModel.title = [NSString stringWithFormat:@"News Title: Title %ld", i];
  newsModel.category = @"科技";
  newsModel.updateTime = [NSDate date];
  newsModel.source = @"网易新闻";
  [items setObject:newsModel
            forKey:[NSIndexPath indexPathForRow:i inSection:0]];
}
CKTransactionalComponentDataSourceChangeset *changeset =
  [[[CKTransactionalComponentDataSourceChangesetBuilder
      transactionalComponentDataSourceChangeset]
      withInsertedItems:items] build];
[self.dataSource applyChangeset:changeset
                           mode:CKUpdateModeAsynchronous
                       userInfo:nil];
</code></pre>

<p>10、ViewController()&lt;UICollectionViewDelegate, UICollectionViewDelegateFlowLayout></p>

<pre><code>- (CGSize)collectionView:(UICollectionView *)collectionView
                  layout:(UICollectionViewLayout *)collectionViewLayout
  sizeForItemAtIndexPath:(NSIndexPath *)indexPath {
  return [self.dataSource sizeForItemAtIndexPath:indexPath];
}

- (void)collectionView:(UICollectionView *)collectionView
       willDisplayCell:(UICollectionViewCell *)cell
    forItemAtIndexPath:(NSIndexPath *)indexPath {
  [self.dataSource announceWillDisplayCell:cell];
}

- (void)collectionView:(UICollectionView *)collectionView
  didEndDisplayingCell:(UICollectionViewCell *)cell
    forItemAtIndexPath:(NSIndexPath *)indexPath {
  [self.dataSource announceDidEndDisplayingCell:cell];
}
</code></pre>

<h2>Flexbox layout</h2>

<p><strong>flex container</strong>：容器。<br/>
main axis：main start， main end。<br/>
cross axis：cross start， cross end。<br/>
<strong>flex item</strong>：成员。<br/>
main size。<br/>
cross size。</p>

<h3>Container Properties</h3>

<p>flex-direction：决定主轴方向。</p>

<pre><code>typedef NS_ENUM(NSUInteger, CKStackLayoutDirection) {
  //  垂直方向
  CKStackLayoutDirectionVertical,
  //  水平方向
  CKStackLayoutDirectionHorizontal,
};
</code></pre>

<p>flex-wrap：决定如何换行。<br/>
flex-flow：flex-direction和flex-wrap的简写形式。<br/>
<strong>justify-content</strong>：决定items在主轴上的对齐方式。</p>

<pre><code>/** If no children are flexible, how should this component justify its children in the available space? */
typedef NS_ENUM(NSUInteger, CKStackLayoutJustifyContent) {
  /**
   On overflow, children overflow out of this component's bounds on the right/bottom side.
   On underflow, children are left/top-aligned within this component's bounds.
   */
  //  左对齐
  CKStackLayoutJustifyContentStart,
  /**
   On overflow, children are centered and overflow on both sides.
   On underflow, children are centered within this component's bounds in the stacking direction.
   */
  //  居中
  CKStackLayoutJustifyContentCenter,
  /**
   On overflow, children overflow out of this component's bounds on the left/top side.
   On underflow, children are right/bottom-aligned within this component's bounds.
   */
  //  右对齐
  CKStackLayoutJustifyContentEnd,
};
</code></pre>

<p><strong>align-items</strong>：决定items在交叉轴上的对齐方式。</p>

<pre><code>typedef NS_ENUM(NSUInteger, CKStackLayoutAlignItems) {
  /** Align children to start of cross axis */
  //  交叉轴起点对齐
  CKStackLayoutAlignItemsStart,
  /** Align children with end of cross axis */
  CKStackLayoutAlignItemsEnd,
  //  交叉轴终点对齐
  /** Center children on cross axis */
  //  交叉轴居中对齐
  CKStackLayoutAlignItemsCenter,
  /** Expand children to fill cross axis */
  //  交叉轴方向拉伸
  CKStackLayoutAlignItemsStretch,
};
</code></pre>

<h3>Item Properties</h3>

<p>order：决定item排列顺序，数值越小，排位越靠前。<br/>
<strong>flex-grow</strong>：决定item主轴方向的放大比例，默认为0，即如果存在剩余空间，也不放大。<br/>
如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。<br/>
<strong>flex-shrink</strong>：决定item主轴方向的缩小比例，默认为1，即如果空间不足，该item将缩小。<br/>
如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。<br/>
<strong>flex-basis</strong>：决定了在分配多余空间之前，item的main size大小，根据该值计算主轴是否有多余空间。<br/>
flex：flex-grow, flex-shrink 和 flex-basis的简写。<br/>
<strong>align-self</strong>：决定item单独的对齐方式，可以覆盖 <strong>align-items</strong> 属性。<br/>
默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p>

<pre><code>/**
 Each child may override their parent stack's cross axis alignment.
 @see CKStackLayoutAlignItems
 */
typedef NS_ENUM(NSUInteger, CKStackLayoutAlignSelf) {
  /** Inherit alignment value from containing stack. */
  CKStackLayoutAlignSelfAuto,
  CKStackLayoutAlignSelfStart,
  CKStackLayoutAlignSelfEnd,
  CKStackLayoutAlignSelfCenter,
  CKStackLayoutAlignSelfStretch,
};
</code></pre>

<h2>FBSnapshotTestCase</h2>

<p><code>FBSnapshotTestCase</code> takes a configured <code>UIView</code> or <code>CALayer</code> and uses the <code>renderInContext:</code> method to get an image snapshot of its contents. It compares this snapshot to a &ldquo;reference image&rdquo; stored in your source code repository and fails the test if the two images don&rsquo;t match.<br/>
It makes the comparison by drawing both the view or layer and the existing snapshot into two <code>CGContextRefs</code> and doing a memory comparison of them with the C function <code>memcmp()</code>.</p>

<h3>Features</h3>

<ol>
<li>It is esay to understand and visible and quickly.</li>
<li>Automatically names reference images on disk according to test class and selector.</li>
<li>Prints a descriptive error message to the console on failure.</li>
<li>Supply an optional &ldquo;identifier&rdquo; if you want to perform multiple snapshots in a single test method.</li>
<li>Support for <code>UIView</code> via <code>FBSnapshotVerifyView</code>.</li>
<li>Support for <code>CALayer</code> via <code>FBSnapshotVerifyLayer</code>.</li>
<li>Support for <code>CKComponent</code> via <code>FBSnapshotVerifyComponent</code>.</li>
<li><code>isDeviceAgnostic</code> to allow appending the device model (iPhone, etc), OS version and screen size to the images (allowing to have multiple tests for the same «snapshot» for different OSs and devices).</li>
<li>Provide a diff image to show the difference when test failed.</li>
<li>It&rsquo;s esay to test different state of the view.</li>
<li>Snapshot tests are run at the same time as the rest of your tests. They can mostly be run without pushing the view to the screen.</li>
<li>Snapshots give code reviews a narrative.</li>
<li>Snapshot tests are fast.</li>
</ol>


<h3>Disadvantages</h3>

<ol>
<li>Testing asynchronous code is hard.</li>
<li>Some components can be hard to test.</li>
<li>Apple’s OS patches can change the way their stock components are rendered.</li>
<li>Each snapshot is a PNG file stored in your repository, and together they average out at about 30-100kb per file.</li>
</ol>


<h3>Install</h3>

<ol>
<li><code>pod 'FBSnapshotTestCase'</code>.</li>
<li>Define <code>FB_REFERENCE_IMAGE_DIR</code> and <code>IMAGE_DIFF_DIR</code> in scheme(Edit Scheme -> Run -> Arguments -> Environment Variables).<br/>
<code>FB_REFERENCE_IMAGE_DIR</code> = <code>$(SOURCE_ROOT)/$(PROJECT_NAME)Tests/ReferenceImages</code><br/>
<code>IMAGE_DIFF_DIR</code> = <code>$(SOURCE_ROOT)/$(PROJECT_NAME)Tests/FailureDiffs</code></li>
</ol>


<h3>Create a snapshot test</h3>

<ol>
<li>Subclass <code>FBSnapshotTestCase</code> instead of <code>XCTestCase</code>.</li>
<li>From within your test, use <code>FBSnapshotVerifyComponent</code>.</li>
<li>Run the test once with <code>self.recordMode = YES;</code> in the test&rsquo;s <code>-setup</code> method. (This creates the reference images on disk)</li>
<li>Run the test again with <code>self.recordMode = NO;</code>.</li>
</ol>


<h3>Notes</h3>

<p>Your unit test must be an &ldquo;application test&rdquo;, not a &ldquo;logic test.&rdquo; (That is, it must be run within the Simulator so that it has access to <code>UIKit</code>.)</p>

<h3>Reference</h3>

<p><a href="https://github.com/facebook/ios-snapshot-test-case">FBSnapshotTestCase</a><br/>
<a href="https://www.objc.io/issues/15-testing/snapshot-testing/">Snapshot Testing</a><br/>
<a href="https://github.com/orta/snapshots">Snapshot Plugin</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/06/13/componentkit-tutorial/'>http://sxgfxm.github.io/blog/2017/06/13/componentkit-tutorial/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170605]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/06/12/ioszhi-shi-xiao-ji-170605/"/>
    <updated>2017-06-12T09:42:42+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/06/12/ioszhi-shi-xiao-ji-170605</id>
    <content type="html"><![CDATA[<h2>fopen时路径名为日文时崩溃</h2>

<p>路径中尽量不要出现特殊字符。</p>

<!-- more -->


<h2>显示 &lt; 号</h2>

<p>居然因为是字体原因</p>

<pre><code>      CGFloat width = kScaleFrom_iPhone6_Desgin(5);
      CAShapeLayer *shapeLayer = [CAShapeLayer layer];
      shapeLayer.frame = CGRectMake(CGRectGetMinX(textLayer.frame) - kScaleFrom_iPhone6_Desgin(9), 0, width, width);
      shapeLayer.position = CGPointMake(shapeLayer.position.x, point.y);
      UIBezierPath *path = [UIBezierPath bezierPath];
      [path moveToPoint:CGPointMake(0, width / 2)];
      [path addLineToPoint:CGPointMake(width, 0)];
      [path moveToPoint:CGPointMake(0, width / 2)];
      [path addLineToPoint:CGPointMake(width, width)];
      shapeLayer.path = path.CGPath;
      shapeLayer.strokeColor = UIColorFromRGBA(0xff959595).CGColor;
      shapeLayer.fillColor = [UIColor clearColor].CGColor;
      shapeLayer.lineWidth = 1;
      shapeLayer.lineCap = kCALineCapButt;
      shapeLayer.lineJoin = kCALineJoinMiter;
      [self.yAxisLayer addSublayer:shapeLayer];
</code></pre>

<h2>Register DDLog</h2>

<pre><code>  // Register DDLog
  [DDLog addLogger:[DDTTYLogger sharedInstance]];  // TTY = Xcode console
  [DDLog addLogger:[DDASLLogger sharedInstance]];  // ASL = File log
</code></pre>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/06/12/ioszhi-shi-xiao-ji-170605/'>http://sxgfxm.github.io/blog/2017/06/12/ioszhi-shi-xiao-ji-170605/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170529]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/06/09/ioszhi-shi-xiao-ji-170529/"/>
    <updated>2017-06-09T10:08:09+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/06/09/ioszhi-shi-xiao-ji-170529</id>
    <content type="html"><![CDATA[<h2>Open system wifi settings</h2>

<p><code>[[UIApplication sharedApplication] openURL:[NSURL URLWithString:@"App-Prefs:root=WIFI"]];</code></p>

<!-- more -->


<h2>UITextField</h2>

<pre><code>-(void)setupTextField{
  self.wifiNameTF =
      [[UITextField alloc] initWithFrame:CGRectMake(kScaleFrom_iPhone6_Desgin(16), 0,
                                                    self.view.bounds.size.width - kScaleFrom_iPhone6_Desgin(32),
                                                    kScaleFrom_iPhone6_Desgin(54))];
  self.wifiNameTF.placeholder = @"请输入Wi-Fi名称";
  self.wifiNameTF.font = [UIFont systemFontOfSize:kScaleFrom_iPhone6_Desgin(16)];
  self.wifiNameTF.textColor = UIColorFromRGBA(0xff16181d);
  self.wifiNameTF.clearButtonMode = UITextFieldViewModeWhileEditing;
  self.wifiNameTF.autocapitalizationType = UITextAutocapitalizationTypeNone;
  self.wifiNameTF.returnKeyType = UIReturnKeyDone;
  self.wifiNameTF.delegate = self;
  self.wifiNameTF.secureTextEntry = YES;
  self.wifiNameTF.rightView = secureBtn;
  self.wifiNameTF.rightViewMode = UITextFieldViewModeAlways;
  [self.view addSubview:self.wifiNameTF];
}
</code></pre>

<h2>Gradient flow animation</h2>

<p>两倍长度，添加左右移动动画，并添加左右两边覆盖层。</p>

<pre><code>  //  progress bar
  self.progressBar =
      [[UIView alloc] initWithFrame:CGRectMake((self.view.bounds.size.width - kScaleFrom_iPhone6_Desgin(120)) / 2,
                                               kScaleFrom_iPhone6_Desgin(360), kScaleFrom_iPhone6_Desgin(120),
                                               kScaleFrom_iPhone6_Desgin(4))];
  [self.view addSubview:self.progressBar];
  self.gradientLayer = [CAGradientLayer layer];
  self.gradientLayer.frame =
      CGRectMake(-kScaleFrom_iPhone6_Desgin(120), 0, kScaleFrom_iPhone6_Desgin(240), kScaleFrom_iPhone6_Desgin(4));
  self.gradientLayer.locations = @[ @0, @0.15, @0.3, @0.5, @0.65, @0.8, @1 ];
  self.gradientLayer.colors = @[
    (__bridge id)UIColorFromRGBA(0xff1af28f)
        .CGColor,
    (__bridge id)UIColorFromRGBA(0xff0de9c5).CGColor,
    (__bridge id)UIColorFromRGBA(0xff3293fe).CGColor,
    (__bridge id)UIColorFromRGBA(0xff1af28f).CGColor,
    (__bridge id)UIColorFromRGBA(0xff0de9c5).CGColor,
    (__bridge id)UIColorFromRGBA(0xff3293fe).CGColor,
    (__bridge id)UIColorFromRGBA(0xff1af28f).CGColor
  ];
  self.gradientLayer.startPoint = CGPointMake(0, 0);
  self.gradientLayer.endPoint = CGPointMake(1, 0);
  [self.progressBar.layer addSublayer:self.gradientLayer];
  CALayer *leftMask = [CALayer layer];
  leftMask.frame =
      CGRectMake(-kScaleFrom_iPhone6_Desgin(120), 0, kScaleFrom_iPhone6_Desgin(120), kScaleFrom_iPhone6_Desgin(4));
  leftMask.backgroundColor = [UIColor whiteColor].CGColor;
  [self.progressBar.layer addSublayer:leftMask];
  CALayer *rightMask = [CALayer layer];
  rightMask.frame =
      CGRectMake(kScaleFrom_iPhone6_Desgin(120), 0, kScaleFrom_iPhone6_Desgin(120), kScaleFrom_iPhone6_Desgin(4));
  rightMask.backgroundColor = [UIColor whiteColor].CGColor;
  [self.progressBar.layer addSublayer:rightMask];
  CABasicAnimation *moveAnimation = [CABasicAnimation animationWithKeyPath:@"position.x"];
  moveAnimation.fromValue = @(self.gradientLayer.position.x);
  moveAnimation.toValue = @(self.gradientLayer.position.x + kScaleFrom_iPhone6_Desgin(120));
  moveAnimation.repeatCount = 100;
  moveAnimation.duration = 2;
  moveAnimation.autoreverses = NO;
  [self.gradientLayer addAnimation:moveAnimation forKey:@"animation"];
</code></pre>

<h2>Alert with text field</h2>

<pre><code>- (void)changeName {
  // 修改昵称提示框
  UIAlertController *alertController =
      [UIAlertController alertControllerWithTitle:@"Title"
                                          message:nil
                                   preferredStyle:UIAlertControllerStyleAlert];
  // 添加输入框
  [alertController addTextFieldWithConfigurationHandler:^(UITextField *_Nonnull textField) {
    textField.placeholder = @"Please input";
  }];
  // 添加确定按钮
  [alertController addAction:[UIAlertAction actionWithTitle:@"Done"
                                                      style:UIAlertActionStyleDefault
                                                    handler:^(UIAlertAction *_Nonnull action) {
                                                      // 获得当前输入的字符串
                                                      NSString *name = alertController.textFields[0].text;
                                                      self.tichomeNameLbl.text = name;
                                                    }]];
  // 添加取消按钮
  [alertController addAction:[UIAlertAction actionWithTitle:@"Cancel"
                                                      style:UIAlertActionStyleCancel
                                                    handler:^(UIAlertAction *_Nonnull action){
                                                    }]];
  [self presentViewController:alertController animated:YES completion:nil];
}
</code></pre>

<h2>UISlider</h2>

<pre><code>-(void)setupSlider{
  self.volumeSlider = [UISlider new];
  [self.volumeSlider addTarget:self action:@selector(changeVolumeAction) forControlEvents:UIControlEventTouchUpInside];
  self.volumeSlider.minimumValueImage = [UIImage imageNamed:@"icVolumeDown"];
  self.volumeSlider.maximumValueImage = [UIImage imageNamed:@"icVolumeUp"];
  [self.volumeSlider setThumbImage:[UIImage imageNamed:@"icVolumeBtn"] forState:UIControlStateNormal];
  [self.volumeSlider setMinimumTrackImage:[UIImage imageNamed:@"minTrackBg"] forState:UIControlStateNormal];
  [self.volumeSlider setMaximumTrackImage:[UIImage imageNamed:@"maxTrackBg"] forState:UIControlStateNormal];
  [self.contentView addSubview:self.volumeSlider];
  [self.volumeSlider mas_makeConstraints:^(MASConstraintMaker *make) {
    make.centerX.equalTo(self.contentView.mas_centerX);
    make.bottom.equalTo(self.contentView.mas_bottom).offset(-kScaleFrom_iPhone6_Desgin(15));
    make.width.equalTo(@(kScaleFrom_iPhone6_Desgin(270)));
  }];
}
</code></pre>

<h2>UITextView</h2>

<pre><code>-(void)setupTextView{
  self.textView = [UITextView new];
  self.textView.backgroundColor = [UIColor clearColor];
  self.textView.text = @"placeholder";
  self.textView.textColor = [[UIColor whiteColor] colorWithAlphaComponent:0.2];
  self.textView.font = [UIFont systemFontOfSize:14];
  self.textView.delegate = self;
  self.textView.autocapitalizationType = UITextAutocapitalizationTypeNone;
  self.textView.returnKeyType = UIReturnKeyDone;
  [self.contentView addSubview:self.textView];
}

//  实现placeholder功能
- (BOOL)textViewShouldBeginEditing:(UITextView *)textView {
  if (self.isEmpty) {
    textView.textColor = [UIColor whiteColor];
    textView.text = @"";
    self.isEmpty = NO;
  }
  return YES;
}

- (void)textViewDidEndEditing:(UITextView *)textView {
  if (textView.text.length == 0) {
    self.isEmpty = YES;
    textView.text = @"placeholder";
    textView.textColor = [[UIColor whiteColor] colorWithAlphaComponent:0.2];
  }
  [textView resignFirstResponder];
}

//  实现换行替换为结束编辑
- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text {
  if ([text isEqualToString:@"\n"]) {
    [textView resignFirstResponder];
    return NO;
  }
  return YES;
}
</code></pre>

<h2>IQActionSheetPickerView</h2>

<pre><code>-(void)setupPickerView{
  NSArray *dataSource = @[@"item1",@"item2",@"item3"];
  IQActionSheetPickerView *categoryPicker = [[IQActionSheetPickerView alloc] initWithTitle:@"选择" delegate:self];
  //  tool bar
  [categoryPicker setTitleFont:[UIFont systemFontOfSize:17]];
  [categoryPicker setTitleColor:[UIColor whiteColor]];
  [categoryPicker setToolbarTintColor:[UIColorFromRGBA(0xff26272e) colorWithAlphaComponent:0.6]];
  [categoryPicker setDoneButtonAttributes:@{
    kIQActionSheetAttributesForNormalStateKey : @{
      NSForegroundColorAttributeName : [[UIColor whiteColor] colorWithAlphaComponent:0.5],
      NSFontAttributeName : [UIFont systemFontOfSize:15]
    }
  }];
  [categoryPicker setCancelButtonAttributes:@{
    kIQActionSheetAttributesForNormalStateKey : @{
      NSForegroundColorAttributeName : [[UIColor grayColor] colorWithAlphaComponent:0.5],
      NSFontAttributeName : [UIFont systemFontOfSize:15]
    }
  }];
  //  component
  [categoryPicker setPickerViewBackgroundColor:UIColorFromRGBA(0xff1c1d24)];
  [categoryPicker setPickerComponentsFont:[UIFont systemFontOfSize:16]];
  [categoryPicker setPickerComponentsColor:[UIColor whiteColor]];
  //  data source
  [categoryPicker setTitlesForComponents:@[ dataSource ]];
  if (self.category) {
    [categoryPicker setSelectedTitles:@[ @"item2" ]];
  }
  //  show
  [categoryPicker show];
}

- (void)actionSheetPickerView:(IQActionSheetPickerView *)pickerView didSelectTitles:(NSArray *)titles {
  //  do something with selected item
}
</code></pre>

<h2>NSURLSession</h2>

<p>completion handler 并非在主线程回调。<br/>
UI相关操作必须在主线程执行。</p>

<h2>Protocol Buffers</h2>

<p>Protocol buffers – a language-neutral, platform-neutral, extensible way of serializing structured data for use in communications protocols, data storage, and more.<br/>
Protocol buffers have many advantages over XML for serializing structured data. Protocol buffers:<br/>
  are simpler<br/>
  are 3 to 10 times smaller<br/>
  are 20 to 100 times faster<br/>
  are less ambiguous<br/>
  generate data access classes that are easier to use programmatically</p>

<ol>
<li>protoc</li>
<li>build rules</li>
<li>build phases</li>
</ol>


<h2>Undefined symbols for architecture arm64</h2>

<p>build phases -> compile source</p>

<h2>NSError</h2>

<p>error.localizedDescription</p>

<h2>block</h2>

<p>循环引用。</p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/06/09/ioszhi-shi-xiao-ji-170529/'>http://sxgfxm.github.io/blog/2017/06/09/ioszhi-shi-xiao-ji-170529/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170522]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/06/09/ioszhi-shi-xiao-ji-170522/"/>
    <updated>2017-06-09T09:57:35+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/06/09/ioszhi-shi-xiao-ji-170522</id>
    <content type="html"><![CDATA[<h2>Networking Concepts</h2>

<p><a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/NetworkingConcepts/Introduction/Introduction.html#//apple_ref/doc/uid/TP40012487">Networking Concepts</a></p>

<!-- more -->


<h3>Networking Terminology</h3>

<p><strong>host</strong>: a host is any device that is connected to a network and provides an endpoint for networked communication.It is called a host because it hosts the applications and daemons that run on it.<br/>
<strong>nfrastructure device</strong>: an infrastructure device is any piece of equipment that is responsible for making the network function.
When one host sends data across a network, it divides the data into small pieces called packets.
A packet generally contains three basic parts: a <strong>header</strong> that tells where the packet should be sent, a <strong>payload</strong> that contains the actual data, and a <strong>trailer</strong> that contains checksum information to ensure that the packet was received correctly.<br/>
<strong>encapsulation</strong>: When one packet contains another packet (generally of a different type), this is called encapsulation.</p>

<h3>Networking Layers</h3>

<p><strong>Link Layer</strong>: The bottommost layer is the link layer, or <strong>physical layer</strong>.This layer of the networking stack involves the actual hardware used to communicate with nearby physically connected hosts.A network interface is a piece of hardware that provides a link-layer interconnect.<br/>
<strong>IP Layer</strong>: Sitting on top of the link layer is the IP layer. The IP layer provides packet transport from one host to another in such a way that the packets can pass across multiple physical networks. The path your packets take is called a route, and each link that the packets follow from one router to another along the route is called a hop.To hide this difference, the IP layer splits packets into multiple pieces—a process known as fragmentation—and reassembles them at the other end.<br/>
<strong>Transport Layer</strong>: On top of the IP layer, you’ll find several transport layers. The two most common protocols at this layer are the transmission control protocol (TCP) and the user datagram protocol (UDP). Both TCP and UDP provide basic data transport from one host to another, much like IP, but add the notion of port numbers.<br/>
<strong>UDP</strong><br/>
  No guarantee &mdash;- Like the layers below it, UDP provides no guarantee that the data will ever reach its destination.<br/>
  Low latency &mdash;- UDP may be a good choice for situations where low latency is required.<br/>
  Broadcast messages in IPv4 &mdash;- packets sent to a broadcast address are received by every host within its broadcast domain.<br/>
  Multicast messages &mdash;- UDP packets sent to a multicast address are sent out to any host that subscribes to them.<br/>
  Preservation of record (packet) boundaries &mdash;- With UDP, the receiver sees each message individually instead of as a continuous stream of bytes.<br/>
<strong>TCP </strong> <br/>
  Delivery guarantees &mdash;- Data transmitted using TCP is guaranteed to be received in the order in which it was sent and (connection failures notwithstanding) in its entirety.<br/>
  Congestion control &mdash;- Sending hosts back off the speed of transmission (and retransmission) if data is getting dropped along the way due to an over-utilized link.<br/>
  Flow control &mdash;- When busy, receiving hosts tell sending hosts to wait until they are ready to handle more data.<br/>
  Stream-based data flow &mdash;- Your software sees the data as a series of bytes instead of as a series of discrete records (messages, in UDP parlance)<br/>
  Path MTU discovery &mdash;- TCP chooses the largest packet size that avoids fragmentation en route.<br/>
<strong>Application Layer</strong>: The application layer sits at the top of the protocol stack. This layer includes such protocols as hypertext transfer protocol (HTTP) and file transfer protocol (FTP).</p>

<h3>Understanding Latency</h3>

<p>Latency refers to the round-trip time for a request. Every network has latency.<br/>
The minimum latency between two points on the earth can be calculated by dividing the distance by the speed at which light or electricity moves in a particular medium.<br/>
Routing delays.<br/>
Retransmission and exponential backoff.<br/>
Signal propagation delays within hardware that receives, transmits, forwards, or repeats packets.</p>

<h3>Addressing Schemes and Domain Names</h3>

<p>At every level of networking, each host is assigned one or more numeric identifiers that uniquely represent it within a particular network.<br/>
<strong>Link-Layer Addressing</strong>: At the link layer (physical layer), each network interface is usually identified by a globally unique hardware ID: Ethernet—MAC address etc.The hardware ID is used to determine whether a particular device should listen to a packet or ignore it.<br/>
<strong>IP-Layer Addressing</strong>: At the IP layer and above, hosts are identified by an IP address. An IP address can be in one of two forms: IPv4 or IPv6.<br/>
  <strong>IPv4</strong>: An IPv4 address consists of four bytes, and is usually represented to the user as a series of four numbers separated by decimal points.<br/>
  <strong>IPv6</strong>: An IPv6 address is a 128-bit value, and is usually written as eight groups of 16-bit hexadecimal numbers separated by colons. Leading zeros in each group can be omitted as long as there is at least one digit in each group.<br/>
<strong>Domain Name System (DNS)</strong>:
A domain name is a human-readable name that describes a particular host. Each domain name is made up of a series of parts separated by periods.<br/>
Features:<br/>
  Minimize service disruption when an IP address changes.<br/>
  Allow a host to be accessed by more than one address.<br/>
  Allow multiple physical hosts to pretend to be a single host.<br/>
  Can adapt to changes in the underlying technology.<br/>
  Being easier to remember.</p>

<h3>Packet Routing and Delivery</h3>

<p>Each packet contains a the link-layer address of its intended recipient.</p>

<h2>Networking Overview</h2>

<p><a href="https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/NetworkingOverview/Introduction/Introduction.html#//apple_ref/doc/uid/TP40010220">Networking Overview</a></p>

<h2>Bonjour Overview</h2>

<p><a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/NetServices/Introduction.html#//apple_ref/doc/uid/10000119i">Bonjour Overview</a></p>

<p>The Bonjour zero-configuration networking architecture provides support for publishing and discovering TCP/IP-based services on a local area or wide area network.<br/>
Bonjour is Apple’s implementation of a suite of zero-configuration networking protocols. Bonjour is designed to make network configuration easier for users.</p>

<h2>NSNetServices and CFNetworkServices Programming Guide</h2>

<p><a href="https://developer.apple.com/library/content/documentation/Networking/Conceptual/NSNetServiceProgGuide/Introduction.html#//apple_ref/doc/uid/TP40002736">NSNetServices and CFNetworkServices Programming Guide</a></p>

<h2>DNS Service Discovery Programming Guide</h2>

<p><a href="https://developer.apple.com/library/content/documentation/Networking/Conceptual/dns_discovery_api/Introduction.html#//apple_ref/doc/uid/TP30000964">DNS Service Discovery Programming Guide</a></p>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/06/09/ioszhi-shi-xiao-ji-170522/'>http://sxgfxm.github.io/blog/2017/06/09/ioszhi-shi-xiao-ji-170522/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-170515]]></title>
    <link href="http://sxgfxm.github.io/blog/2017/05/17/ioszhi-shi-xiao-ji-170515/"/>
    <updated>2017-05-17T16:57:00+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2017/05/17/ioszhi-shi-xiao-ji-170515</id>
    <content type="html"><![CDATA[<h2>更新cocoapods版本</h2>

<p>正式版：<code>sudo gem install cocoapods</code><br/>
开发版：<code>sudo gem install cocoapods --pre </code></p>

<!-- more -->


<h2>Get local bundle</h2>

<p>通过<code>frameworkName</code>和<code>bundleName</code>获取对应bundle。</p>

<pre><code class="c">+ (NSBundle *)getBundleWithFrameworkName:(NSString *)frameworkName bundleName:(NSString *)bundleName {
  NSString *tmpBundleName = [bundleName copy];
  if (![bundleName hasSuffix:@".bundle"]) {
    tmpBundleName = [NSString stringWithFormat:@"%@.bundle", tmpBundleName];
  }

  NSString *mainBundlePath = [[NSBundle mainBundle] resourcePath];
  NSString *bundlePath = [mainBundlePath stringByAppendingPathComponent:tmpBundleName];
  NSBundle *bundle = [NSBundle bundleWithPath:bundlePath];
  if (bundle) {
    return bundle;
  }

  NSString *tempFramework = [frameworkName copy];
  NSString *frameExtension = @".framework";
  if (![tempFramework hasSuffix:frameExtension]) {
    tempFramework = [tempFramework stringByAppendingString:frameExtension];
  }

  NSString *path = [[[NSBundle mainBundle] privateFrameworksPath] stringByAppendingPathComponent:tempFramework];
  return [NSBundle bundleWithPath:[path stringByAppendingPathComponent:tmpBundleName]];
}
</code></pre>

<h2>Localized string in cocoapods</h2>

<p>在自定义pod中添加语言本地化：<br/>
1. 为<code>MyPod</code>添加语言路径<code>MyPod/Languages/**/*</code>,pod中使用的不同语言的<code>.strings</code>存放在该目录下；<br/>
2. 在<code>MyPod.podspec</code>文件中添加语言bundle：<code>s.resource_bundles = {'LanguageBundle' =&gt; ['MyPod/Languages/**/*']}</code>；<br/>
3. 添加简便调用方法：</p>

<pre><code class="c">NSString *XGLocalizedString(NSString *key, NSString *comment) {
  return [XGFitnessLocalize localizedString:key];
}

+ (NSString *)localizedString:(NSString *)key {
  //  key == nil, return nil;
  if (!key) {
    return key;
  }
  //  system language
  NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
  NSArray *languages = [defaults objectForKey:kAppleLanguageKey];
  NSString *language = [languages firstObject];
  //  set default language
  NSString *fileNamePrefix = language;
  if (!([fileNamePrefix isEqualToString:kLanguageEnglish] ||
        [fileNamePrefix isEqualToString:kLanguageSimplifiedChinese] ||
        [fileNamePrefix isEqualToString:kLanguageTraditionalChinese])) {
    fileNamePrefix = kDefaultLanguage;
  }
  //  language bundle
  NSBundle *languageBundle =
      [WWFitnessBundleUtil getBundleWithFrameworkName:kFrameworkName bundleName:kLanguageBundleName];
  //  lproj bundle
  NSString *path = [languageBundle pathForResource:fileNamePrefix ofType:@"lproj"];
  NSBundle *lprojBundle = [NSBundle bundleWithPath:path];
  //  localized string
  NSString *localizedString = [lprojBundle localizedStringForKey:key value:@"" table:@"Localizable"];
  if (!localizedString) {
    localizedString = key;
  }
  return localizedString;
}
</code></pre>

<h2>Image in cocoapods</h2>

<p>在自定义pod中添加图片步骤：<br/>
1. 为<code>MyPod</code>添加图片路径<code>MyPod/Assets/Images</code>,pod中使用的图片存放在该目录下；<br/>
2. 在<code>MyPod.podspec</code>文件中添加图片bundle：<code>s.resource_bundles = {'ImageBundle' =&gt; ['MyPod/Assets/Images/**/*']}</code>；<br/>
3. 为<code>UIImage</code>添加类别方法<code>bundleImageNamed:</code></p>

<pre><code class="objective-c">@implementation UIImage (BundleImage)

+ (UIImage *)bundleImageNamed:(NSString *)name {
  NSBundle *imageBundle = [WWFitnessBundleUtil getBundleWithFrameworkName:@"MyPod" bundleName:@"ImageBundle"];
  return [UIImage imageNamed:name inBundle:imageBundle compatibleWithTraitCollection:nil];
}

@end
</code></pre>

<h2>Font in cocoapods</h2>

<p>自定义字体无法静态添加到自定义pod中，需要动态注册字体才能使用。<br/>
1. 为<code>MyPod</code>添加字体路径<code>MyPod/Fonts</code>,pod中使用的字体存放在该目录下；<br/>
2. 在<code>MyPod.podspec</code>文件中添加字体bundle：<code>s.resource_bundles = {'FontBundle' =&gt; ['MyPod/Fonts/*']}</code>；<br/>
3. 创建注册字体方法，并在使用前仅调用一次。</p>

<pre><code class="objective-c">#import &lt;CoreText/CTFontManager.h&gt;

+ (void)registerFitnessFont {
  [self registerFitnessFont:@"DIN-Regular"];
  [self registerFitnessFont:@"DIN-Medium"];
  [self registerFitnessFont:@"DIN-Bold"];
}

+ (void)registerFitnessFont:(NSString *)fontName {
  NSBundle *fontBundle = [WWFitnessBundleUtil getBundleWithFrameworkName:@"MyPod" bundleName:@"FontBundle"];
  NSURL *fontURL = [fontBundle URLForResource:fontName withExtension:@"otf" /*or TTF*/];
  NSData *inData = [NSData dataWithContentsOfURL:fontURL];
  CFErrorRef error;
  CGDataProviderRef provider = CGDataProviderCreateWithCFData((CFDataRef)inData);
  CGFontRef font = CGFontCreateWithDataProvider(provider);
  if (!CTFontManagerRegisterGraphicsFont(font, &amp;error)) {
    CFStringRef errorDescription = CFErrorCopyDescription(error);
    NSLog(@"Failed to load font: %@", errorDescription);
    CFRelease(errorDescription);
  }
  CFSafeRelease(font);
  CFSafeRelease(provider);
}

void CFSafeRelease(CFTypeRef cf) {
  if (cf != NULL) {
    CFRelease(cf);
  }
}
</code></pre>

<p class='post-footer'>
  原始地址：
  <a href='http://sxgfxm.github.io/blog/2017/05/17/ioszhi-shi-xiao-ji-170515/'>http://sxgfxm.github.io/blog/2017/05/17/ioszhi-shi-xiao-ji-170515/</a><br/>
  written by <a href='http://sxgfxm.github.io'>Light</a>
  &nbsp;posted at <a href='http://sxgfxm.github.io'>http://sxgfxm.github.io</a>
  </p>

]]></content>
  </entry>
  
</feed>
