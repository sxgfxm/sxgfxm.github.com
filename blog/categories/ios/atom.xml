<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios | Light's Blog]]></title>
  <link href="http://sxgfxm.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://sxgfxm.github.io/"/>
  <updated>2018-05-14T10:22:08+08:00</updated>
  <id>http://sxgfxm.github.io/</id>
  <author>
    <name><![CDATA[Light]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180507]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/05/14/ioszhi-shi-xiao-ji-180507/"/>
    <updated>2018-05-14T10:21:18+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/05/14/ioszhi-shi-xiao-ji-180507</id>
    <content type="html"><![CDATA[<h2>WXApi无法分享</h2>

<p>原因：WXApi针对不同分享内容有各种限制因素，必须符合要求才能分享。实际运用中可能影响分享的主要因素是thumbData的大小。
WXMediaMessage
  thumbData大小不能超过32k</p>

<p>可以通过压缩图片来达到WXApi的要求。</p>

<h2>添加proto文件至工程</h2>

<ol>
<li>把proto文件拖入工程目录中；</li>
<li>在 <strong>Compile Sources</strong> 中添加对应proto文件，否则在link时会出现<code>symbol(s) not found for architecture arm64</code>错误，无法找到对应的<code>.o</code>文件；</li>
<li>编译获得proto对应的类文件。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180418]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/05/07/ioszhi-shi-xiao-ji-180418/"/>
    <updated>2018-05-07T15:52:23+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/05/07/ioszhi-shi-xiao-ji-180418</id>
    <content type="html"><![CDATA[<h2>UISlider 自定义thumb大小</h2>

<p>需继承<code>UISlider</code>并重写<code>- thumbRectForBounds:trackRect:value:</code>方法。</p>

<pre><code class="objective-c">- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value{
  CGFloat customWidth = 20;
  CGFloat customHeight = 20;
  bounds = [super thumbRectForBounds:bounds trackRect:rect value:value];
  return CGRectMake(bounds.origin.x, bounds.origin.y, customWidth, customHeight);
}
</code></pre>

<!-- more -->


<h2>YYModel 自定义转换</h2>

<p>以<code>NSDate</code>与<code>NSNumber</code>转换为例。
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// JSON:</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">:&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Harry</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">timestamp</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">:</span> <span class="mi">1445534567</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// Model:</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">User</span>
</span><span class='line'><span class="k">@property</span> <span class="bp">NSString</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="bp">NSDate</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">createdAt</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@implementation</span> <span class="nc">User</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">modelCustomTransformFromDictionary:</span><span class="p">(</span><span class="bp">NSDictionary</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">dic</span> <span class="p">{</span>
</span><span class='line'>    <span class="bp">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">timestamp</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">timestamp</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="n">timestamp</span> <span class="nl">isKindOfClass</span><span class="p">:[</span><span class="bp">NSNumber</span> <span class="k">class</span><span class="p">]])</span> <span class="k">return</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">createdAt</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSDate</span> <span class="nl">dateWithTimeIntervalSince1970</span><span class="p">:</span><span class="n">timestamp</span><span class="p">.</span><span class="n">floatValue</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">modelCustomTransformToDictionary:</span><span class="p">(</span><span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">dic</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">createdAt</span><span class="p">)</span> <span class="k">return</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dic</span><span class="p">[@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">timestamp</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;]</span> <span class="o">=</span> <span class="l">@(</span><span class="n">n</span><span class="p">.</span><span class="n">timeIntervalSince1970</span><span class="l">)</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180319]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/04/18/ioszhi-shi-xiao-ji-180319/"/>
    <updated>2018-04-18T14:20:28+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/04/18/ioszhi-shi-xiao-ji-180319</id>
    <content type="html"><![CDATA[<h2>Today Extension 研究</h2>

<h3>Layout</h3>

<ol>
<li>self.view.frame是整个屏幕大小。</li>
</ol>


<h3>Life cycle</h3>

<ol>
<li>滑走后，会重新创建。</li>
</ol>


<h2>NEVPNManager</h2>

<p><code>NEVPNManager</code>是用来创建和管理VPN设置，并且处理VPN连接结果的。
每一个应用只允许创建一个VPA设置，所以<code>NEVPNManager</code>是一个单例。
由<code>NEVPNManager</code>创建的VPN称为私人VPN，在iOS和macOS上，非私人VPA的优先级高于私人VPN。
使用<code>NEVPNManager</code>需要<code>com.apple.developer.networking.vpn.api entitlement</code>，需要开启应用的<code>Personal VPN</code>权限。
在开启私人VPN前，必须从Network Extension preferences载入VPN设置，在修改VPN设置之后，必须写入Network Extension preferences。
<code>NEVPNManager</code>的对象是线程安全的。</p>

<p><code>#import &lt;NetworkExtension/NEVPNManager.h&gt;</code></p>

<h2>NEVPNProtocol</h2>

<p><code>NEVPNProtocol</code>用来配置VPN。</p>

<h2>NEVPNConnection</h2>

<p><code>NEVPNConnection</code>用来控制VPN连接。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180312]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/03/18/ioszhi-shi-xiao-ji-180312/"/>
    <updated>2018-03-18T18:19:33+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/03/18/ioszhi-shi-xiao-ji-180312</id>
    <content type="html"><![CDATA[<h2>embed pods frameworks error</h2>

<p><code>rm -rf ~/Library/Developer/Xcode/DerivedData</code></p>

<h2>armv7、armv7s、arm64、i386、x86_64指令集</h2>

<p>armv7 | armv7s | arm64 是ARM处理器指令集；
i386 | x86_64 是Intel处理器指令集。</p>

<p>设备相关
arm64： iPhone6s | iPhone5s | iPad Air
armv7s：iPhone5 | iPhone5c | iPad4
armv7： iPhone4 | iPhone4s | iPad3</p>

<p>模拟器32位处理器：i386架构；
模拟器64位处理器：x86_64架构；
真机32位处理器：armv7或armv7架构；
真机64位处理器：arm64架构。</p>

<p>而编译出哪种指令集的包，将由 <strong>Architectures</strong> 与 <strong>Valid Architectures</strong>（因此这个不能为空）的交集来确定。
<strong>Build Active Architecture Only</strong> 指定是否只对当前连接设备所支持的指令集编译。</p>

<h2>Git拉取远程分支</h2>

<p><code>git checkout -b branch_name remote_branch_name</code></p>

<h2>Today Extension 研究</h2>

<ol>
<li>self.view.frame是整个屏幕大小。</li>
<li>滑走后，会重新创建。</li>
</ol>


<h2>NEVPNManager</h2>

<p><code>#import &lt;NetworkExtension/NEVPNManager.h&gt;</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS知识小集-180129]]></title>
    <link href="http://sxgfxm.github.io/blog/2018/03/12/ioszhi-shi-xiao-ji-180129/"/>
    <updated>2018-03-12T15:28:49+08:00</updated>
    <id>http://sxgfxm.github.io/blog/2018/03/12/ioszhi-shi-xiao-ji-180129</id>
    <content type="html"><![CDATA[<h2>圆角动画与圆角定制</h2>

<pre><code>  UIView *view = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 100, 100)];
  view.backgroundColor = [UIColor redColor];
  view.layer.cornerRadius = 20;
  //  圆角定制
  view.layer.maskedCorners = kCALayerMinXMaxYCorner | kCALayerMaxXMaxYCorner;
  [self.view addSubview:view];
  //  圆角动画
  [UIView animateWithDuration:0.5 animations:^{
    view.layer.cornerRadius = 0;
  }];
</code></pre>

<h2>NSMutableAttributedString crash</h2>

<pre><code>- (void)testAttributedStringInitCrash
{
  NSString *nilStr = nil;
  NSAttributedString *attributedStr = [[NSAttributedString alloc] initWithString:nilStr];
}
</code></pre>

<p>Crash Log
~~~
Terminating app due to uncaught exception &lsquo;NSInvalidArgumentException&rsquo;, reason: &lsquo;NSConcreteAttributedString initWithString:: nil value&rsquo;
~~~</p>

<pre><code>- (void)testMutableAttributedStringInitCrash
{
  NSString *nilStr = nil;
  NSMutableAttributedString *attributedStr = [[NSMutableAttributedString alloc] initWithString:nilStr];
}
</code></pre>

<p>Crash Log
~~~
Terminating app due to uncaught exception &lsquo;NSInvalidArgumentException&rsquo;, reason: &lsquo;NSConcreteMutableAttributedString initWithString:: nil value&rsquo;
~~~</p>

<pre><code>- (void)testMutableAttributedStringAddAttributeCrash
{
  NSString *nonnullStr = @"str";
  NSMutableAttributedString *attributedStr = [[NSMutableAttributedString alloc] initWithString:nonnullStr];

  NSString *nilValue = nil;
  [attributedStr addAttribute:NSAttachmentAttributeName value:nilValue range:NSMakeRange(0, 1)];
}
</code></pre>

<p>Crash Log
~~~
Terminating app due to uncaught exception &lsquo;NSInvalidArgumentException&rsquo;, reason: &lsquo;NSConcreteMutableAttributedString addAttribute:value:range:: nil value&rsquo;
~~~</p>
]]></content>
  </entry>
  
</feed>
